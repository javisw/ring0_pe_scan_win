; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Javis\Documents\GitHub\autoscan\Launcher\Launcher\ScanDir.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$numpunct@D@std@@6B@			; std::numpunct<char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$numpunct@D@std@@8		; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$numpunct@D@std@@@8			; std::numpunct<char> `RTTI Type Descriptor'
PUBLIC	??_R4?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$codecvt@DDH@std@@8		; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$codecvt@DDH@std@@@8			; std::codecvt<char,char,int> `RTTI Type Descriptor'
PUBLIC	??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@_W@std@@6B@			; std::ctype<wchar_t>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$ctype@_W@std@@8				; std::ctype<wchar_t>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@_W@std@@8				; std::ctype<wchar_t>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@_W@std@@8			; std::ctype<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ctype@_W@std@@@8			; std::ctype<wchar_t> `RTTI Type Descriptor'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R4codecvt_base@std@@6B@			; std::codecvt_base::`RTTI Complete Object Locator'
PUBLIC	??_R3codecvt_base@std@@8			; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2codecvt_base@std@@8			; std::codecvt_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@codecvt_base@std@@8		; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVcodecvt_base@std@@@8			; std::codecvt_base `RTTI Type Descriptor'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4ios_base@std@@6B@				; std::ios_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?is@?$ctype@D@std@@QBE_NFD@Z			; std::ctype<char>::is
PUBLIC	?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
PUBLIC	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
PUBLIC	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
PUBLIC	?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
PUBLIC	?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_istream<char,std::char_traits<char> >::get
PUBLIC	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
PUBLIC	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
PUBLIC	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@PBX@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put
PUBLIC	?endl@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@AAV21@@Z ; std::endl
PUBLIC	??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
PUBLIC	?length@?$char_traits@_W@std@@SAIPB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?widen@?$ctype@_W@std@@QBE_WD@Z			; std::ctype<wchar_t>::widen
PUBLIC	?_Init@?$ctype@_W@std@@IAEXABV_Locinfo@2@@Z	; std::ctype<wchar_t>::_Init
PUBLIC	?do_is@?$ctype@_W@std@@MBE_NF_W@Z		; std::ctype<wchar_t>::do_is
PUBLIC	?do_is@?$ctype@_W@std@@MBEPB_WPB_W0PAF@Z	; std::ctype<wchar_t>::do_is
PUBLIC	?do_scan_is@?$ctype@_W@std@@MBEPB_WFPB_W0@Z	; std::ctype<wchar_t>::do_scan_is
PUBLIC	?is@?$ctype@_W@std@@QBE_NF_W@Z			; std::ctype<wchar_t>::is
PUBLIC	?do_scan_not@?$ctype@_W@std@@MBEPB_WFPB_W0@Z	; std::ctype<wchar_t>::do_scan_not
PUBLIC	?do_tolower@?$ctype@_W@std@@MBE_W_W@Z		; std::ctype<wchar_t>::do_tolower
PUBLIC	?do_tolower@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z	; std::ctype<wchar_t>::do_tolower
PUBLIC	?do_toupper@?$ctype@_W@std@@MBE_W_W@Z		; std::ctype<wchar_t>::do_toupper
PUBLIC	?do_toupper@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z	; std::ctype<wchar_t>::do_toupper
PUBLIC	?do_widen@?$ctype@_W@std@@MBE_WD@Z		; std::ctype<wchar_t>::do_widen
PUBLIC	?_Dowiden@?$ctype@_W@std@@IBE_WD@Z		; std::ctype<wchar_t>::_Dowiden
PUBLIC	?do_widen@?$ctype@_W@std@@MBEPBDPBD0PA_W@Z	; std::ctype<wchar_t>::do_widen
PUBLIC	?do_narrow@?$ctype@_W@std@@MBED_WD@Z		; std::ctype<wchar_t>::do_narrow
PUBLIC	?_Donarrow@?$ctype@_W@std@@IBED_WD@Z		; std::ctype<wchar_t>::_Donarrow
PUBLIC	?do_narrow@?$ctype@_W@std@@MBEPB_WPB_W0DPAD@Z	; std::ctype<wchar_t>::do_narrow
PUBLIC	??1?$ctype@_W@std@@MAE@XZ			; std::ctype<wchar_t>::~ctype<wchar_t>
PUBLIC	??_G?$ctype@_W@std@@MAEPAXI@Z			; std::ctype<wchar_t>::`scalar deleting destructor'
PUBLIC	??0?$ctype@_W@std@@QAE@ABV_Locinfo@1@I@Z	; std::ctype<wchar_t>::ctype<wchar_t>
PUBLIC	?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<wchar_t>::_Getcat
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z	; std::char_traits<wchar_t>::eq_int_type
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
PUBLIC	?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::fill
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z	; std::char_traits<wchar_t>::to_int_type
PUBLIC	?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBE_JXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail
PUBLIC	?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc
PUBLIC	?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputn
PUBLIC	?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear
PUBLIC	?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate
PUBLIC	?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEHXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync
PUBLIC	?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
PUBLIC	?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
PUBLIC	?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEAB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
PUBLIC	??$_Construct@H@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXHHU_Int_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<int>
PUBLIC	??$?0H@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@HH@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><int>
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	_wmemmove
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
PUBLIC	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator==<wchar_t,wchar_t>
PUBLIC	??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator!=<wchar_t,wchar_t>
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAA_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
PUBLIC	??$_Iter_cat@H@std@@YA?AU_Int_iterator_tag@0@ABH@Z ; std::_Iter_cat<int>
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??$_Construct@H@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXHHU_Int_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<int>
PUBLIC	??$?0H@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@HH@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><int>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
PUBLIC	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
PUBLIC	?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z ; std::endl
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
PUBLIC	?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
PUBLIC	?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
PUBLIC	?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_J@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DN@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?precision@ios_base@std@@QBE_JXZ		; std::ios_base::precision
PUBLIC	?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?decimal_point@?$numpunct@D@std@@QBEDXZ		; std::numpunct<char>::decimal_point
PUBLIC	?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DO@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
PUBLIC	?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
PUBLIC	??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
PUBLIC	??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
PUBLIC	??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
PUBLIC	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
PUBLIC	?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ	; std::_Locinfo::_Getcvt
PUBLIC	?_Getlconv@_Locinfo@std@@QBEPBUlconv@@XZ	; std::_Locinfo::_Getlconv
PUBLIC	?_Getfalse@_Locinfo@std@@QBEPBDXZ		; std::_Locinfo::_Getfalse
PUBLIC	?_Gettrue@_Locinfo@std@@QBEPBDXZ		; std::_Locinfo::_Gettrue
PUBLIC	??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z	; std::_Maklocchr<char>
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z	; std::numpunct<char>::_Init
PUBLIC	?do_decimal_point@?$numpunct@D@std@@MBEDXZ	; std::numpunct<char>::do_decimal_point
PUBLIC	?do_thousands_sep@?$numpunct@D@std@@MBEDXZ	; std::numpunct<char>::do_thousands_sep
PUBLIC	?do_grouping@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_grouping
PUBLIC	?do_falsename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_falsename
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?do_truename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_truename
PUBLIC	?_Tidy@?$numpunct@D@std@@AAEXXZ			; std::numpunct<char>::_Tidy
PUBLIC	??1?$numpunct@D@std@@MAE@XZ			; std::numpunct<char>::~numpunct<char>
PUBLIC	??_G?$numpunct@D@std@@MAEPAXI@Z			; std::numpunct<char>::`scalar deleting destructor'
PUBLIC	??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z	; std::numpunct<char>::numpunct<char>
PUBLIC	?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::numpunct<char>::_Getcat
PUBLIC	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
PUBLIC	?thousands_sep@?$numpunct@D@std@@QBEDXZ		; std::numpunct<char>::thousands_sep
PUBLIC	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
PUBLIC	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
PUBLIC	??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
PUBLIC	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
PUBLIC	?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	??0MD5@@QAE@XZ					; MD5::MD5
PUBLIC	?Init@MD5@@QAEXXZ				; MD5::Init
PUBLIC	?Encode@MD5@@CAXPAEPAKI@Z			; MD5::Encode
PUBLIC	?Decode@MD5@@CAXPAKPAEI@Z			; MD5::Decode
PUBLIC	?MD5Transform@MD5@@CAXQAKQAE@Z			; MD5::MD5Transform
PUBLIC	?Update@MD5@@QAEXPAEI@Z				; MD5::Update
PUBLIC	?writeToString@MD5@@QAEXXZ			; MD5::writeToString
PUBLIC	?Final@MD5@@QAEXXZ				; MD5::Final
PUBLIC	?digestFile@MD5@@QAEPADPAD@Z			; MD5::digestFile
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?width@ios_base@std@@QBE_JXZ			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QAE_J_J@Z			; std::ios_base::width
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?good@ios_base@std@@QBE_NXZ			; std::ios_base::good
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	?flags@ios_base@std@@QBEHXZ			; std::ios_base::flags
PUBLIC	?fail@ios_base@std@@QBE_NXZ			; std::ios_base::fail
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
PUBLIC	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
PUBLIC	_wmemset
PUBLIC	?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
PUBLIC	_wmemcpy
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
PUBLIC	??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=
PUBLIC	??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
PUBLIC	??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
PUBLIC	??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat
PUBLIC	??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
PUBLIC	??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
PUBLIC	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?clear@ios_base@std@@QAEXH@Z			; std::ios_base::clear
PUBLIC	?_Init@ios_base@std@@IAEXXZ			; std::ios_base::_Init
PUBLIC	?rdstate@ios_base@std@@QBEHXZ			; std::ios_base::rdstate
PUBLIC	??0error_code@std@@QAE@HABVerror_category@1@@Z	; std::error_code::error_code
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
PUBLIC	?_Makestr@system_error@std@@AAEXXZ		; std::system_error::_Makestr
PUBLIC	??0system_error@std@@QAE@Verror_code@1@PBD@Z	; std::system_error::system_error
PUBLIC	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UAE@XZ			; std::ios_base::failure::~failure
PUBLIC	??_Gfailure@ios_base@std@@UAEPAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	??0failure@ios_base@std@@QAE@ABV012@@Z		; std::ios_base::failure::failure
PUBLIC	??1system_error@std@@UAE@XZ			; std::system_error::~system_error
PUBLIC	??_Gsystem_error@std@@UAEPAXI@Z			; std::system_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QAE@ABV01@@Z		; std::system_error::system_error
PUBLIC	?clear@ios_base@std@@QAEXH_N@Z			; std::ios_base::clear
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?widen@?$ctype@D@std@@QBEDD@Z			; std::ctype<char>::widen
PUBLIC	??0ctype_base@std@@QAE@I@Z			; std::ctype_base::ctype_base
PUBLIC	?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?do_tolower@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MBEDDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_Gctype_base@std@@UAEPAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	??1ctype_base@std@@UAE@XZ			; std::ctype_base::~ctype_base
PUBLIC	?_Tidy@?$ctype@D@std@@IAEXXZ			; std::ctype<char>::_Tidy
PUBLIC	??1?$ctype@D@std@@MAE@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	??_G?$ctype@D@std@@MAEPAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z		; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??0locale@std@@QAE@ABV01@@Z			; std::locale::locale
PUBLIC	?getloc@ios_base@std@@QBE?AVlocale@2@XZ		; std::ios_base::getloc
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init
PUBLIC	??0ios_base@std@@IAE@XZ				; std::ios_base::ios_base
PUBLIC	??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
PUBLIC	??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
PUBLIC	??0locale@std@@QAE@XZ				; std::locale::locale
PUBLIC	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??_Gios_base@std@@UAEPAXI@Z			; std::ios_base::`scalar deleting destructor'
PUBLIC	??1ios_base@std@@UAE@XZ				; std::ios_base::~ios_base
PUBLIC	??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
PUBLIC	??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
PUBLIC	?_Decref@facet@locale@std@@QAEPAV123@XZ		; std::locale::facet::_Decref
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	??_Glocale@std@@QAEPAXI@Z			; std::locale::`scalar deleting destructor'
PUBLIC	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_streambuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
PUBLIC	?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::gbump
PUBLIC	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
PUBLIC	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbump
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::pptr
PUBLIC	?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::epptr
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::out
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::egptr
PUBLIC	?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::in
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::gptr
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z	; std::codecvt<char,char,int>::unshift
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::eback
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??0?$fpos@H@std@@QAE@H_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	?state@?$fpos@H@std@@QBEHXZ			; std::fpos<int>::state
PUBLIC	?seekpos@?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::seekpos
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?always_noconv@codecvt_base@std@@QBE_NXZ	; std::codecvt_base::always_noconv
PUBLIC	?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ; std::basic_streambuf<char,std::char_traits<char> >::setg
PUBLIC	?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ; std::basic_streambuf<char,std::char_traits<char> >::setp
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	??Bid@locale@std@@QAEIXZ			; std::locale::id::operator unsigned int
PUBLIC	?_Incref@facet@locale@std@@QAEXXZ		; std::locale::facet::_Incref
PUBLIC	?_Register@facet@locale@std@@QAEXXZ		; std::locale::facet::_Register
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??0?$_Yarn@D@std@@QAE@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??0_Locinfo@std@@QAE@PBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	?_Tidy@?$_Yarn@D@std@@AAEXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	??1?$_Yarn@D@std@@QAE@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	??1_Locinfo@std@@QAE@XZ				; std::_Locinfo::~_Locinfo
PUBLIC	?c_str@?$_Yarn@D@std@@QBEPBDXZ			; std::_Yarn<char>::c_str
PUBLIC	?c_str@locale@std@@QBEPBDXZ			; std::locale::c_str
PUBLIC	??0facet@locale@std@@IAE@I@Z			; std::locale::facet::facet
PUBLIC	??0codecvt_base@std@@QAE@I@Z			; std::codecvt_base::codecvt_base
PUBLIC	?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z	; std::codecvt<char,char,int>::_Init
PUBLIC	?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_in
PUBLIC	?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_out
PUBLIC	?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ; std::codecvt<char,char,int>::do_unshift
PUBLIC	?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z	; std::codecvt<char,char,int>::do_length
PUBLIC	??_Gfacet@locale@std@@UAEPAXI@Z			; std::locale::facet::`scalar deleting destructor'
PUBLIC	??1facet@locale@std@@UAE@XZ			; std::locale::facet::~facet
PUBLIC	?do_always_noconv@codecvt_base@std@@MBE_NXZ	; std::codecvt_base::do_always_noconv
PUBLIC	?do_max_length@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_max_length
PUBLIC	?do_encoding@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_encoding
PUBLIC	??_Gcodecvt_base@std@@UAEPAXI@Z			; std::codecvt_base::`scalar deleting destructor'
PUBLIC	??1codecvt_base@std@@UAE@XZ			; std::codecvt_base::~codecvt_base
PUBLIC	??1?$codecvt@DDH@std@@MAE@XZ			; std::codecvt<char,char,int>::~codecvt<char,char,int>
PUBLIC	??_G?$codecvt@DDH@std@@MAEPAXI@Z		; std::codecvt<char,char,int>::`scalar deleting destructor'
PUBLIC	??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z	; std::codecvt<char,char,int>::codecvt<char,char,int>
PUBLIC	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
PUBLIC	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@	; `string'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
PUBLIC	__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
PUBLIC	__CTA4?AVfailure@ios_base@std@@
PUBLIC	__TI4?AVfailure@ios_base@std@@
PUBLIC	??_C@_04NOJCDH@?$CF02x?$AA@			; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	?countExe@@3HA					; countExe
PUBLIC	?countDll@@3HA					; countDll
PUBLIC	??_C@_08GNJEIDEM@reports?2?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0M@FJFALDBN@C?3?2test?4txt?$AA@		; `string'
PUBLIC	??_C@_0O@IJAHIBEK@?$CFY?$CFm?$CFd?9?$CFH?$CFM?$CFS?$AA@ ; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_04GEJHDGKP@?4pad?$AA@			; `string'
PUBLIC	??_C@_0M@JBPIDKPO@SystemDrive?$AA@		; `string'
PUBLIC	??_C@_0BD@EBNJBNP@?$DMREPORT?$DO?6?7?$DMIMAGES?$DO?$AA@ ; `string'
PUBLIC	??_C@_0L@IMNIGAFB@Scanning?4?4?$AA@		; `string'
PUBLIC	??_C@_0BF@JDNLNPKJ@?2Program?5Files?2Test?2?$AA@ ; `string'
PUBLIC	??_C@_0BG@DHGDNDEE@?6?7?$DM?1IMAGES?$DO?6?$DM?1REPORT?$DO?$AA@ ; `string'
PUBLIC	??_C@_07KOAEBJDG@7za?4exe?$AA@			; `string'
PUBLIC	??_C@_0BP@PKBPBLAD@?5a?5?9tzip?5reports?4zip?5?4?2reports?$AA@ ; `string'
PUBLIC	??_C@_02HHAEMJFE@?2?1?$AA@			; `string'
PUBLIC	??_C@_04IICBPGDH@s2ws?$AA@			; `string'
PUBLIC	??_C@_02KHDDNBB@?2?$CK?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_02DJGKEECL@?4?4?$AA@			; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_03JACLIBNI@exe?$AA@			; `string'
PUBLIC	??_C@_03JNNAEMKE@EXE?$AA@			; `string'
PUBLIC	??_C@_0O@FAPOFAGO@Filtered?5exe?5?$AA@		; `string'
PUBLIC	??_C@_0CO@JCAACMAP@?$DM?1FILE_SIZE?$DO?6?7?7?7?$DM?1PE_STATIC_FLAG@ ; `string'
PUBLIC	??_C@_0CG@GIMPMKF@?6?7?7?7?$DMPE_STATIC_FLAGS?$DO?6?7?7?7?7?$DMFILE_@ ; `string'
PUBLIC	??_C@_0BB@FNNIPIAP@?$DM?1DATE_ACCESSED?$DO?$AA@	; `string'
PUBLIC	??_C@_0BE@OIAEHKFG@?6?7?7?7?$DMDATE_ACCESSED?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BB@BFPOJEPD@?$DM?1DATE_MODIFIED?$DO?$AA@	; `string'
PUBLIC	??_C@_0BE@KACCBGKK@?6?7?7?7?$DMDATE_MODIFIED?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BA@EGEFBFG@?$DM?1DATE_CREATED?$DO?$AA@	; `string'
PUBLIC	??_C@_0BD@ICJDJOL@?6?7?7?7?$DMDATE_CREATED?$DO?$AA@ ; `string'
PUBLIC	??_C@_0M@MMCFOGMA@?$DM?1ISSIGNED?$DO?$AA@	; `string'
PUBLIC	??_C@_0CL@NLIMOMJO@?6?7?7?7?$DMEXE_TYPE?$DOEXE?$DM?1EXE_TYPE?$DO?6?7?7?7@ ; `string'
PUBLIC	??_C@_06CMNKDHNA@?$DM?1MD5?$DO?$AA@		; `string'
PUBLIC	??_C@_09IJOLEHKB@?6?7?7?7?$DMMD5?$DO?$AA@	; `string'
PUBLIC	??_C@_07GDHEAJCP@?$DM?1PATH?$DO?$AA@		; `string'
PUBLIC	??_C@_0L@EENDHJPF@?6?7?7?7?$DMPATH?$DO?$AA@	; `string'
PUBLIC	??_C@_0L@MCJCKBAH@?6?7?7?$DMIMAGE?$DO?$AA@	; `string'
PUBLIC	??_C@_03OCHKFGFI@dll?$AA@			; `string'
PUBLIC	??_C@_03OPIBJLCE@DLL?$AA@			; `string'
PUBLIC	??_C@_0O@LNDEICJJ@Filtered?5dll?5?$AA@		; `string'
PUBLIC	??_C@_0CL@JANNNNF@?6?7?7?7?$DMEXE_TYPE?$DODLL?$DM?1EXE_TYPE?$DO?6?7?7?7@ ; `string'
PUBLIC	??_C@_02EAOCLKAK@ld?$AA@			; `string'
PUBLIC	??_C@_02BDDLJJBK@lu?$AA@			; `string'
PUBLIC	??_C@_02HIKPPMOK@Ld?$AA@			; `string'
PUBLIC	??_C@_02CLHGNPPK@Lu?$AA@			; `string'
PUBLIC	??_C@_02BBAHNLBA@?$CFp?$AA@			; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_01DDCIFGEA@E?$AA@				; `string'
PUBLIC	??_C@_01KGKMHCOC@e?$AA@				; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::numpunct<char> >::_Psave
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7ios_base@std@@6B@				; std::ios_base::`vftable'
PUBLIC	??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_7codecvt_base@std@@6B@			; std::codecvt_base::`vftable'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7?$ctype@_W@std@@6B@				; std::ctype<wchar_t>::`vftable'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
PUBLIC	??_7?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`vftable'
PUBLIC	??_7?$numpunct@D@std@@6B@			; std::numpunct<char>::`vftable'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateDirectoryA@8:PROC
EXTRN	__imp__UuidCreateSequential@4:PROC
EXTRN	__imp__UuidToStringA@8:PROC
EXTRN	__imp__ShellExecuteExA@4:PROC
EXTRN	_getenv:PROC
EXTRN	?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cin
EXTRN	_clock:PROC
EXTRN	_strftime:PROC
EXTRN	__localtime64:PROC
EXTRN	__time64:PROC
EXTRN	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC		; std::_Fiopen
EXTRN	__imp__WinVerifyTrust@12:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A:BYTE ; std::wcout
EXTRN	?id@?$ctype@_W@std@@2V0locale@2@A:DWORD		; std::ctype<wchar_t>::id
EXTRN	__Getwctype:PROC
EXTRN	__Getwctypes:PROC
EXTRN	__Towlower:PROC
EXTRN	__Towupper:PROC
EXTRN	__Mbrtowc:PROC
EXTRN	__Wcrtomb:PROC
EXTRN	??_E?$ctype@_W@std@@MAEPAXI@Z:PROC		; std::ctype<wchar_t>::`vector deleting destructor'
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	_malloc:PROC
EXTRN	__imp__SysAllocStringLen@8:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__FileTimeToSystemTime@8:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	__imp__FindNextFileA@8:PROC
EXTRN	__imp__SHGetFileInfoA@20:PROC
EXTRN	_strcspn:PROC
EXTRN	_sprintf_s:PROC
EXTRN	_memmove_s:PROC
EXTRN	_memchr:PROC
EXTRN	__Getcvt:PROC
EXTRN	_localeconv:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_E?$numpunct@D@std@@MAEPAXI@Z:PROC		; std::numpunct<char>::`vector deleting destructor'
EXTRN	??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z:PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vector deleting destructor'
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_sprintf:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	_atexit:PROC
EXTRN	?_Addstd@ios_base@std@@SAXPAV12@@Z:PROC		; std::ios_base::_Addstd
EXTRN	?iostream_category@std@@YAABVerror_category@1@XZ:PROC ; std::iostream_category
EXTRN	??_Efailure@ios_base@std@@UAEPAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UAEPAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:DWORD		; std::ctype<char>::id
EXTRN	__Getctype:PROC
EXTRN	__Tolower:PROC
EXTRN	__Toupper:PROC
EXTRN	??_Ectype_base@std@@UAEPAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_E?$ctype@D@std@@MAEPAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??0_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::_Mutex
EXTRN	?_Init@locale@std@@CAPAV_Locimp@12@XZ:PROC	; std::locale::_Init
EXTRN	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z:PROC	; std::ios_base::_Ios_base_dtor
EXTRN	??_Eios_base@std@@UAEPAXI@Z:PROC		; std::ios_base::`vector deleting destructor'
EXTRN	??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ios<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ostream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??1_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::~_Mutex
EXTRN	?_Lock@_Mutex@std@@QAEXXZ:PROC			; std::_Mutex::_Lock
EXTRN	?_Unlock@_Mutex@std@@QAEXXZ:PROC		; std::_Mutex::_Unlock
EXTRN	??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	_fclose:PROC
EXTRN	__lock_file:PROC
EXTRN	__unlock_file:PROC
EXTRN	_fputc:PROC
EXTRN	_memcpy_s:PROC
EXTRN	_ungetc:PROC
EXTRN	_memmove:PROC
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	_fgetc:PROC
EXTRN	_fgetpos:PROC
EXTRN	_fsetpos:PROC
EXTRN	__fseeki64:PROC
EXTRN	?_BADOFF@std@@3_JB:QWORD			; std::_BADOFF
EXTRN	_fwrite:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_setvbuf:PROC
EXTRN	_fflush:PROC
EXTRN	??0bad_cast@std@@QAE@PBD@Z:PROC			; std::bad_cast::bad_cast
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z:PROC ; std::locale::facet::_Facet_Register
EXTRN	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	_free:PROC
EXTRN	??_Efacet@locale@std@@UAEPAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	??_Ecodecvt_base@std@@UAEPAXI@Z:PROC		; std::codecvt_base::`vector deleting destructor'
EXTRN	??_E?$codecvt@DDH@std@@MAEPAXI@Z:PROC		; std::codecvt<char,char,int>::`vector deleting destructor'
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
?countExe@@3HA DD 01H DUP (?)				; countExe
?countDll@@3HA DD 01H DUP (?)				; countDll
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::numpunct<char> >::_Psave
_BSS	ENDS
;	COMDAT ??_7?$numpunct@D@std@@6B@
CONST	SEGMENT
??_7?$numpunct@D@std@@6B@ DD FLAT:??_R4?$numpunct@D@std@@6B@ ; std::numpunct<char>::`vftable'
	DD	FLAT:??_E?$numpunct@D@std@@MAEPAXI@Z
	DD	FLAT:?do_decimal_point@?$numpunct@D@std@@MBEDXZ
	DD	FLAT:?do_thousands_sep@?$numpunct@D@std@@MBEDXZ
	DD	FLAT:?do_grouping@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	FLAT:?do_falsename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	FLAT:?do_truename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
CONST	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT
??_R4?$numpunct@D@std@@6B@ DD 00H			; std::numpunct<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$numpunct@D@std@@@8
	DD	FLAT:??_R3?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R3?$numpunct@D@std@@8 DD 00H				; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R2?$numpunct@D@std@@8 DD FLAT:??_R1A@?0A@EA@?$numpunct@D@std@@8 ; std::numpunct<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$numpunct@D@std@@8 DD FLAT:??_R0?AV?$numpunct@D@std@@@8 ; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT
??_R0?AV?$numpunct@D@std@@@8 DD FLAT:??_7type_info@@6B@	; std::numpunct<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$numpunct@D@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$codecvt@DDH@std@@6B@
CONST	SEGMENT
??_7?$codecvt@DDH@std@@6B@ DD FLAT:??_R4?$codecvt@DDH@std@@6B@ ; std::codecvt<char,char,int>::`vftable'
	DD	FLAT:??_E?$codecvt@DDH@std@@MAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
	DD	FLAT:?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
CONST	ENDS
;	COMDAT ??_R4?$codecvt@DDH@std@@6B@
rdata$r	SEGMENT
??_R4?$codecvt@DDH@std@@6B@ DD 00H			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$codecvt@DDH@std@@@8
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R3?$codecvt@DDH@std@@8 DD 00H			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R2?$codecvt@DDH@std@@8 DD FLAT:??_R1A@?0A@EA@?$codecvt@DDH@std@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@codecvt_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$codecvt@DDH@std@@8 DD FLAT:??_R0?AV?$codecvt@DDH@std@@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$codecvt@DDH@std@@@8
_DATA	SEGMENT
??_R0?AV?$codecvt@DDH@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::codecvt<char,char,int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$codecvt@DDH@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD FLAT:??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
	DD	FLAT:??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DO@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DN@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_J@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z
	DD	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z
CONST	ENDS
;	COMDAT ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD 00H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
	DD	FLAT:??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD 00H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD FLAT:??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@'
	DB	'std@@@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DD FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DD	FLAT:??_Efailure@ios_base@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 00H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@system_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD FLAT:??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DD FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DD	FLAT:??_Esystem_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 00H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD FLAT:??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD FLAT:??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$ctype@_W@std@@6B@
CONST	SEGMENT
??_7?$ctype@_W@std@@6B@ DD FLAT:??_R4?$ctype@_W@std@@6B@ ; std::ctype<wchar_t>::`vftable'
	DD	FLAT:??_E?$ctype@_W@std@@MAEPAXI@Z
	DD	FLAT:?do_is@?$ctype@_W@std@@MBEPB_WPB_W0PAF@Z
	DD	FLAT:?do_is@?$ctype@_W@std@@MBE_NF_W@Z
	DD	FLAT:?do_scan_is@?$ctype@_W@std@@MBEPB_WFPB_W0@Z
	DD	FLAT:?do_scan_not@?$ctype@_W@std@@MBEPB_WFPB_W0@Z
	DD	FLAT:?do_tolower@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z
	DD	FLAT:?do_tolower@?$ctype@_W@std@@MBE_W_W@Z
	DD	FLAT:?do_toupper@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z
	DD	FLAT:?do_toupper@?$ctype@_W@std@@MBE_W_W@Z
	DD	FLAT:?do_widen@?$ctype@_W@std@@MBEPBDPBD0PA_W@Z
	DD	FLAT:?do_widen@?$ctype@_W@std@@MBE_WD@Z
	DD	FLAT:?do_narrow@?$ctype@_W@std@@MBEPB_WPB_W0DPAD@Z
	DD	FLAT:?do_narrow@?$ctype@_W@std@@MBED_WD@Z
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@_W@std@@6B@ DD 00H				; std::ctype<wchar_t>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ctype@_W@std@@@8
	DD	FLAT:??_R3?$ctype@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R3?$ctype@_W@std@@8 DD 00H				; std::ctype<wchar_t>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$ctype@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R2?$ctype@_W@std@@8 DD FLAT:??_R1A@?0A@EA@?$ctype@_W@std@@8 ; std::ctype<wchar_t>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ctype_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@_W@std@@8 DD FLAT:??_R0?AV?$ctype@_W@std@@@8 ; std::ctype<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ctype@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT
??_R0?AV?$ctype@_W@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype<wchar_t> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ctype@_W@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DD FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DD	FLAT:??_E?$ctype@D@std@@MAEPAXI@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEDDD@Z
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 00H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ctype@D@std@@@8
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD FLAT:??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ctype_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD FLAT:??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ctype@D@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DD FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DD	FLAT:??_Ectype_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 00H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUctype_base@std@@@8
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD FLAT:??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD FLAT:??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT
??_R0?AUctype_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUctype_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT
??_7codecvt_base@std@@6B@ DD FLAT:??_R4codecvt_base@std@@6B@ ; std::codecvt_base::`vftable'
	DD	FLAT:??_Ecodecvt_base@std@@UAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
CONST	ENDS
;	COMDAT ??_R4codecvt_base@std@@6B@
rdata$r	SEGMENT
??_R4codecvt_base@std@@6B@ DD 00H			; std::codecvt_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVcodecvt_base@std@@@8
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3codecvt_base@std@@8
rdata$r	SEGMENT
??_R3codecvt_base@std@@8 DD 00H				; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2codecvt_base@std@@8
rdata$r	SEGMENT
??_R2codecvt_base@std@@8 DD FLAT:??_R1A@?0A@EA@codecvt_base@std@@8 ; std::codecvt_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@codecvt_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@codecvt_base@std@@8 DD FLAT:??_R0?AVcodecvt_base@std@@@8 ; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVcodecvt_base@std@@@8
_DATA	SEGMENT
??_R0?AVcodecvt_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::codecvt_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVcodecvt_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DD FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DD	FLAT:??_Efacet@locale@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 00H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfacet@locale@std@@@8
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD FLAT:??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD FLAT:??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT
??_R0?AVfacet@locale@std@@@8 DD FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfacet@locale@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	060H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
	DD	08H
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT
??_7ios_base@std@@6B@ DD FLAT:??_R4ios_base@std@@6B@	; std::ios_base::`vftable'
	DD	FLAT:??_Eios_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ios_base@std@@6B@
rdata$r	SEGMENT
??_R4ios_base@std@@6B@ DD 00H				; std::ios_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVios_base@std@@@8
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_01KGKMHCOC@e?$AA@
CONST	SEGMENT
??_C@_01KGKMHCOC@e?$AA@ DB 'e', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DDCIFGEA@E?$AA@
CONST	SEGMENT
??_C@_01DDCIFGEA@E?$AA@ DB 'E', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp?$AA@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp?$AA@ DB '%p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CLHGNPPK@Lu?$AA@
CONST	SEGMENT
??_C@_02CLHGNPPK@Lu?$AA@ DB 'Lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIKPPMOK@Ld?$AA@
CONST	SEGMENT
??_C@_02HIKPPMOK@Ld?$AA@ DB 'Ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BDDLJJBK@lu?$AA@
CONST	SEGMENT
??_C@_02BDDLJJBK@lu?$AA@ DB 'lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EAOCLKAK@ld?$AA@
CONST	SEGMENT
??_C@_02EAOCLKAK@ld?$AA@ DB 'ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@JANNNNF@?6?7?7?7?$DMEXE_TYPE?$DODLL?$DM?1EXE_TYPE?$DO?6?7?7?7@
CONST	SEGMENT
??_C@_0CL@JANNNNF@?6?7?7?7?$DMEXE_TYPE?$DODLL?$DM?1EXE_TYPE?$DO?6?7?7?7@ DB 0aH
	DB	09H, 09H, 09H, '<EXE_TYPE>DLL</EXE_TYPE>', 0aH, 09H, 09H, 09H, '<'
	DB	'ISSIGNED>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LNDEICJJ@Filtered?5dll?5?$AA@
CONST	SEGMENT
??_C@_0O@LNDEICJJ@Filtered?5dll?5?$AA@ DB 'Filtered dll ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OPIBJLCE@DLL?$AA@
CONST	SEGMENT
??_C@_03OPIBJLCE@DLL?$AA@ DB 'DLL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OCHKFGFI@dll?$AA@
CONST	SEGMENT
??_C@_03OCHKFGFI@dll?$AA@ DB 'dll', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MCJCKBAH@?6?7?7?$DMIMAGE?$DO?$AA@
CONST	SEGMENT
??_C@_0L@MCJCKBAH@?6?7?7?$DMIMAGE?$DO?$AA@ DB 0aH, 09H, 09H, '<IMAGE>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EENDHJPF@?6?7?7?7?$DMPATH?$DO?$AA@
CONST	SEGMENT
??_C@_0L@EENDHJPF@?6?7?7?7?$DMPATH?$DO?$AA@ DB 0aH, 09H, 09H, 09H, '<PATH'
	DB	'>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDHEAJCP@?$DM?1PATH?$DO?$AA@
CONST	SEGMENT
??_C@_07GDHEAJCP@?$DM?1PATH?$DO?$AA@ DB '</PATH>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IJOLEHKB@?6?7?7?7?$DMMD5?$DO?$AA@
CONST	SEGMENT
??_C@_09IJOLEHKB@?6?7?7?7?$DMMD5?$DO?$AA@ DB 0aH, 09H, 09H, 09H, '<MD5>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMNKDHNA@?$DM?1MD5?$DO?$AA@
CONST	SEGMENT
??_C@_06CMNKDHNA@?$DM?1MD5?$DO?$AA@ DB '</MD5>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NLIMOMJO@?6?7?7?7?$DMEXE_TYPE?$DOEXE?$DM?1EXE_TYPE?$DO?6?7?7?7@
CONST	SEGMENT
??_C@_0CL@NLIMOMJO@?6?7?7?7?$DMEXE_TYPE?$DOEXE?$DM?1EXE_TYPE?$DO?6?7?7?7@ DB 0aH
	DB	09H, 09H, 09H, '<EXE_TYPE>EXE</EXE_TYPE>', 0aH, 09H, 09H, 09H, '<'
	DB	'ISSIGNED>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MMCFOGMA@?$DM?1ISSIGNED?$DO?$AA@
CONST	SEGMENT
??_C@_0M@MMCFOGMA@?$DM?1ISSIGNED?$DO?$AA@ DB '</ISSIGNED>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ICJDJOL@?6?7?7?7?$DMDATE_CREATED?$DO?$AA@
CONST	SEGMENT
??_C@_0BD@ICJDJOL@?6?7?7?7?$DMDATE_CREATED?$DO?$AA@ DB 0aH, 09H, 09H, 09H
	DB	'<DATE_CREATED>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EGEFBFG@?$DM?1DATE_CREATED?$DO?$AA@
CONST	SEGMENT
??_C@_0BA@EGEFBFG@?$DM?1DATE_CREATED?$DO?$AA@ DB '</DATE_CREATED>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KACCBGKK@?6?7?7?7?$DMDATE_MODIFIED?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@KACCBGKK@?6?7?7?7?$DMDATE_MODIFIED?$DO?$AA@ DB 0aH, 09H, 09H, 09H
	DB	'<DATE_MODIFIED>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BFPOJEPD@?$DM?1DATE_MODIFIED?$DO?$AA@
CONST	SEGMENT
??_C@_0BB@BFPOJEPD@?$DM?1DATE_MODIFIED?$DO?$AA@ DB '</DATE_MODIFIED>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OIAEHKFG@?6?7?7?7?$DMDATE_ACCESSED?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@OIAEHKFG@?6?7?7?7?$DMDATE_ACCESSED?$DO?$AA@ DB 0aH, 09H, 09H, 09H
	DB	'<DATE_ACCESSED>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNNIPIAP@?$DM?1DATE_ACCESSED?$DO?$AA@
CONST	SEGMENT
??_C@_0BB@FNNIPIAP@?$DM?1DATE_ACCESSED?$DO?$AA@ DB '</DATE_ACCESSED>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GIMPMKF@?6?7?7?7?$DMPE_STATIC_FLAGS?$DO?6?7?7?7?7?$DMFILE_@
CONST	SEGMENT
??_C@_0CG@GIMPMKF@?6?7?7?7?$DMPE_STATIC_FLAGS?$DO?6?7?7?7?7?$DMFILE_@ DB 0aH
	DB	09H, 09H, 09H, '<PE_STATIC_FLAGS>', 0aH, 09H, 09H, 09H, 09H, '<'
	DB	'FILE_SIZE>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JCAACMAP@?$DM?1FILE_SIZE?$DO?6?7?7?7?$DM?1PE_STATIC_FLAG@
CONST	SEGMENT
??_C@_0CO@JCAACMAP@?$DM?1FILE_SIZE?$DO?6?7?7?7?$DM?1PE_STATIC_FLAG@ DB '<'
	DB	'/FILE_SIZE>', 0aH, 09H, 09H, 09H, '</PE_STATIC_FLAGS>', 0aH, 09H
	DB	09H, '</IMAGE>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAPOFAGO@Filtered?5exe?5?$AA@
CONST	SEGMENT
??_C@_0O@FAPOFAGO@Filtered?5exe?5?$AA@ DB 'Filtered exe ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JNNAEMKE@EXE?$AA@
CONST	SEGMENT
??_C@_03JNNAEMKE@EXE?$AA@ DB 'EXE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JACLIBNI@exe?$AA@
CONST	SEGMENT
??_C@_03JACLIBNI@exe?$AA@ DB 'exe', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DJGKEECL@?4?4?$AA@
CONST	SEGMENT
??_C@_02DJGKEECL@?4?4?$AA@ DB '..', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KHDDNBB@?2?$CK?$AA@
CONST	SEGMENT
??_C@_02KHDDNBB@?2?$CK?$AA@ DB '\*', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IICBPGDH@s2ws?$AA@
CONST	SEGMENT
??_C@_04IICBPGDH@s2ws?$AA@ DB 's2ws', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHAEMJFE@?2?1?$AA@
CONST	SEGMENT
??_C@_02HHAEMJFE@?2?1?$AA@ DB '\/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PKBPBLAD@?5a?5?9tzip?5reports?4zip?5?4?2reports?$AA@
CONST	SEGMENT
??_C@_0BP@PKBPBLAD@?5a?5?9tzip?5reports?4zip?5?4?2reports?$AA@ DB ' a -tz'
	DB	'ip reports.zip .\reports', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOAEBJDG@7za?4exe?$AA@
CONST	SEGMENT
??_C@_07KOAEBJDG@7za?4exe?$AA@ DB '7za.exe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DHGDNDEE@?6?7?$DM?1IMAGES?$DO?6?$DM?1REPORT?$DO?$AA@
CONST	SEGMENT
??_C@_0BG@DHGDNDEE@?6?7?$DM?1IMAGES?$DO?6?$DM?1REPORT?$DO?$AA@ DB 0aH, 09H
	DB	'</IMAGES>', 0aH, '</REPORT>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDNLNPKJ@?2Program?5Files?2Test?2?$AA@
CONST	SEGMENT
??_C@_0BF@JDNLNPKJ@?2Program?5Files?2Test?2?$AA@ DB '\Program Files\Test\'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMNIGAFB@Scanning?4?4?$AA@
CONST	SEGMENT
??_C@_0L@IMNIGAFB@Scanning?4?4?$AA@ DB 'Scanning..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EBNJBNP@?$DMREPORT?$DO?6?7?$DMIMAGES?$DO?$AA@
CONST	SEGMENT
??_C@_0BD@EBNJBNP@?$DMREPORT?$DO?6?7?$DMIMAGES?$DO?$AA@ DB '<REPORT>', 0aH
	DB	09H, '<IMAGES>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JBPIDKPO@SystemDrive?$AA@
CONST	SEGMENT
??_C@_0M@JBPIDKPO@SystemDrive?$AA@ DB 'SystemDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04GEJHDGKP@?4pad?$AA@
CONST	SEGMENT
??_C@_04GEJHDGKP@?4pad?$AA@ DB '.pad', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJAHIBEK@?$CFY?$CFm?$CFd?9?$CFH?$CFM?$CFS?$AA@
CONST	SEGMENT
??_C@_0O@IJAHIBEK@?$CFY?$CFm?$CFd?9?$CFH?$CFM?$CFS?$AA@ DB '%Y%m%d-%H%M%S'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJFALDBN@C?3?2test?4txt?$AA@
CONST	SEGMENT
??_C@_0M@FJFALDBN@C?3?2test?4txt?$AA@ DB 'C:\test.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNJEIDEM@reports?2?$AA@
CONST	SEGMENT
??_C@_08GNJEIDEM@reports?2?$AA@ DB 'reports\', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOJCDH@?$CF02x?$AA@
CONST	SEGMENT
??_C@_04NOJCDH@?$CF02x?$AA@ DB '%02x', 00H		; `string'
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
;	COMDAT __TI4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__TI4?AVfailure@ios_base@std@@ DD 00H
	DD	FLAT:??1failure@ios_base@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT __CTA4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__CTA4?AVfailure@ios_base@std@@ DD 04H
	DD	FLAT:__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
	DD	FLAT:__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
xdata$x	SEGMENT
__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20 DD 00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0system_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
xdata$x	SEGMENT
__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20 DD 00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0failure@ios_base@std@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
_DATA	SEGMENT
??_R0?AVsystem_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsystem_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfailure@ios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 119
	inc	DWORD PTR [eax]
; Line 121
	ret	0
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++, COMDAT
; _this$ = eax
; Line 353
	inc	DWORD PTR [eax]
; Line 355
	ret	0
??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT
; __Ptr$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 658
	push	esi
	push	edi
	mov	edi, eax
; Line 659
	lea	edx, DWORD PTR [eax+1]
$LL8@Maklocstr:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL8@Maklocstr
	sub	eax, edx
	lea	esi, DWORD PTR [eax+1]
; Line 660
	push	esi
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
; Line 664
	test	esi, esi
	je	SHORT $LN1@Maklocstr
	mov	ecx, eax
	sub	ecx, edi
$LL3@Maklocstr:
; Line 665
	mov	dl, BYTE PTR [edi]
	mov	BYTE PTR [ecx+edi], dl
	inc	edi
	dec	esi
	jne	SHORT $LL3@Maklocstr
$LN1@Maklocstr:
	pop	edi
	pop	esi
; Line 669
	ret	0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 263
	mov	al, 1
; Line 264
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 479
	ret	0
??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; __Arg$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 88
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z PROC	; std::codecvt<char,char,int>::_Init, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 863
	ret	4
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z ENDP	; std::codecvt<char,char,int>::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 201
	push	ebp
	mov	ebp, esp
; Line 202
	mov	edx, DWORD PTR __Count$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	push	edx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	eax
; Line 203
	pop	ebp
	ret	12					; 0000000cH
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z PROC		; std::_Maklocchr<char>, COMDAT
; __Byte$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 627
	ret	0
??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z ENDP		; std::_Maklocchr<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 271
	xor	al, al
; Line 272
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; __Arg$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\utility
; Line 80
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; __Arg$ = eax
; Line 80
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 264
	ret	0
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	mov	eax, 2147483647				; 7fffffffH
; Line 220
	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 219
	or	eax, -1
; Line 220
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$numpunct@D@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$numpunct@D@std@@AAEXXZ PROC			; std::numpunct<char>::_Tidy, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 190
	mov	eax, DWORD PTR [esi+8]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 191
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 192
	mov	edx, DWORD PTR [esi+20]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 12					; 0000000cH
; Line 193
	ret	0
?_Tidy@?$numpunct@D@std@@AAEXXZ ENDP			; std::numpunct<char>::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?thousands_sep@?$numpunct@D@std@@QBEDXZ
_TEXT	SEGMENT
?thousands_sep@?$numpunct@D@std@@QBEDXZ PROC		; std::numpunct<char>::thousands_sep, COMDAT
; _this$ = ecx
; Line 74
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	jmp	edx
?thousands_sep@?$numpunct@D@std@@QBEDXZ ENDP		; std::numpunct<char>::thousands_sep
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?decimal_point@?$numpunct@D@std@@QBEDXZ
_TEXT	SEGMENT
?decimal_point@?$numpunct@D@std@@QBEDXZ PROC		; std::numpunct<char>::decimal_point, COMDAT
; _this$ = ecx
; Line 69
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	jmp	edx
?decimal_point@?$numpunct@D@std@@QBEDXZ ENDP		; std::numpunct<char>::decimal_point
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 638
	ret	0
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*, COMDAT
; _this$ = eax
; Line 633
	ret	0
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = eax
; __Right$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 203
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
; Line 204
	ret	0
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; Line 2016
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; Line 1518
	mov	eax, 2147483646				; 7ffffffeH
; Line 1519
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setp, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 289
	push	ebp
	mov	ebp, esp
; Line 290
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
; Line 291
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx], eax
; Line 292
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax], edx
; Line 293
	pop	ebp
	ret	8
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setp
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1518
	mov	eax, -2					; fffffffeH
; Line 1519
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_thousands_sep@?$numpunct@D@std@@MBEDXZ
_TEXT	SEGMENT
?do_thousands_sep@?$numpunct@D@std@@MBEDXZ PROC		; std::numpunct<char>::do_thousands_sep, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 169
	mov	al, BYTE PTR [ecx+13]
; Line 170
	ret	0
?do_thousands_sep@?$numpunct@D@std@@MBEDXZ ENDP		; std::numpunct<char>::do_thousands_sep
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_decimal_point@?$numpunct@D@std@@MBEDXZ
_TEXT	SEGMENT
?do_decimal_point@?$numpunct@D@std@@MBEDXZ PROC		; std::numpunct<char>::do_decimal_point, COMDAT
; _this$ = ecx
; Line 164
	mov	al, BYTE PTR [ecx+12]
; Line 165
	ret	0
?do_decimal_point@?$numpunct@D@std@@MBEDXZ ENDP		; std::numpunct<char>::do_decimal_point
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First2$ = 12						; size = 4
__Last2$ = 16						; size = 4
__Mid2$ = 20						; size = 4
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::unshift, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 823
	push	ebp
	mov	ebp, esp
; Line 824
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
; Line 825
	pop	ebp
; Line 824
	jmp	eax
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::unshift
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z
_TEXT	SEGMENT
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt, COMDAT
; __Fmt$ = eax
; __Spec$ = edi
; __Flags$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1453
	mov	BYTE PTR [eax], 37			; 00000025H
	lea	ecx, DWORD PTR [eax+1]
; Line 1455
	test	dl, 32					; 00000020H
	je	SHORT $LN4@Ifmt
; Line 1456
	mov	BYTE PTR [ecx], 43			; 0000002bH
	inc	ecx
$LN4@Ifmt:
; Line 1457
	test	dl, 8
	je	SHORT $LN3@Ifmt
; Line 1458
	mov	BYTE PTR [ecx], 35			; 00000023H
	inc	ecx
$LN3@Ifmt:
; Line 1459
	push	ebx
	mov	bl, BYTE PTR [edi]
	push	esi
	cmp	bl, 76					; 0000004cH
	je	SHORT $LN2@Ifmt
; Line 1460
	mov	BYTE PTR [ecx], bl
	inc	ecx
; Line 1461
	jmp	SHORT $LN1@Ifmt
$LN2@Ifmt:
; Line 1464
	mov	WORD PTR [ecx], 13897			; 00003649H
; Line 1466
	mov	BYTE PTR [ecx+2], 52			; 00000034H
	add	ecx, 3
$LN1@Ifmt:
; Line 1469
	mov	esi, edx
	and	esi, 3584				; 00000e00H
; Line 1472
	cmp	esi, 1024				; 00000400H
	jne	SHORT $LN9@Ifmt
	mov	dl, 111					; 0000006fH
	pop	esi
	mov	BYTE PTR [ecx], dl
; Line 1473
	mov	BYTE PTR [ecx+1], 0
	pop	ebx
; Line 1475
	ret	0
$LN9@Ifmt:
; Line 1472
	cmp	esi, 2048				; 00000800H
	je	SHORT $LN7@Ifmt
	mov	dl, BYTE PTR [edi+1]
	pop	esi
	mov	BYTE PTR [ecx], dl
; Line 1473
	mov	BYTE PTR [ecx+1], 0
	pop	ebx
; Line 1475
	ret	0
$LN7@Ifmt:
; Line 1472
	add	dl, dl
	add	dl, dl
	add	dl, dl
	not	dl
	and	dl, 32					; 00000020H
	or	dl, 88					; 00000058H
	pop	esi
	mov	BYTE PTR [ecx], dl
; Line 1473
	mov	BYTE PTR [ecx+1], 0
	pop	ebx
; Line 1475
	ret	0
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADDH@Z
_TEXT	SEGMENT
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt, COMDAT
; __Fmt$ = eax
; __Spec$ = ebx
; __Flags$ = edx
; Line 1310
	mov	BYTE PTR [eax], 37			; 00000025H
	lea	ecx, DWORD PTR [eax+1]
; Line 1312
	test	dl, 32					; 00000020H
	je	SHORT $LN3@Ffmt
; Line 1313
	mov	BYTE PTR [ecx], 43			; 0000002bH
	inc	ecx
$LN3@Ffmt:
; Line 1314
	test	dl, 16					; 00000010H
	je	SHORT $LN2@Ffmt
; Line 1315
	mov	BYTE PTR [ecx], 35			; 00000023H
	inc	ecx
$LN2@Ffmt:
; Line 1316
	mov	WORD PTR [ecx], 10798			; 00002a2eH
; Line 1317
	add	ecx, 2
; Line 1318
	test	bl, bl
	je	SHORT $LN1@Ffmt
; Line 1319
	mov	BYTE PTR [ecx], bl
	inc	ecx
$LN1@Ffmt:
; Line 1321
	and	edx, 12288				; 00003000H
; Line 1324
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN8@Ffmt
	mov	dl, 102					; 00000066H
	mov	BYTE PTR [ecx], dl
; Line 1325
	mov	BYTE PTR [ecx+1], 0
; Line 1327
	ret	0
$LN8@Ffmt:
; Line 1324
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN6@Ffmt
	mov	dl, 97					; 00000061H
	mov	BYTE PTR [ecx], dl
; Line 1325
	mov	BYTE PTR [ecx+1], 0
; Line 1327
	ret	0
$LN6@Ffmt:
; Line 1324
	cmp	edx, 4096				; 00001000H
	setne	dl
	lea	edx, DWORD PTR [edx+edx+101]
	mov	BYTE PTR [ecx], dl
; Line 1325
	mov	BYTE PTR [ecx+1], 0
; Line 1327
	ret	0
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ
_TEXT	SEGMENT
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 92
	mov	eax, DWORD PTR [ecx]
; Line 93
	ret	0
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; __Ptr$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 182
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 183
	ret	0
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
_TEXT	SEGMENT
?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 304
	mov	eax, DWORD PTR [ecx+52]
	dec	DWORD PTR [eax]
; Line 305
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+2]
	mov	DWORD PTR [ecx], edx
; Line 306
	ret	0
?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
_TEXT	SEGMENT
__Gf$ = 8						; size = 4
__Gn$ = 12						; size = 4
__Gc$ = 16						; size = 4
__Pf$ = 20						; size = 4
__Pn$ = 24						; size = 4
__Pc$ = 28						; size = 4
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx
; Line 327
	push	ebp
	mov	ebp, esp
; Line 328
	mov	eax, DWORD PTR __Gf$[ebp]
; Line 329
	mov	edx, DWORD PTR __Pf$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 330
	mov	eax, DWORD PTR __Gn$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 331
	mov	edx, DWORD PTR __Pn$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 332
	mov	eax, DWORD PTR __Gc$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 333
	mov	edx, DWORD PTR __Pc$[ebp]
	mov	DWORD PTR [ecx+48], eax
	mov	DWORD PTR [ecx+52], edx
; Line 334
	pop	ebp
	ret	24					; 00000018H
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Next$ = 12						; size = 4
__Last$ = 16						; size = 4
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setg, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
; Line 249
	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], edx
; Line 250
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
; Line 251
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], edx
; Line 252
	pop	ebp
	ret	12					; 0000000cH
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setg
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
_TEXT	SEGMENT
?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 74
	mov	eax, DWORD PTR [eax+60]
; Line 75
	ret	0
?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT
; _this$ = eax
; Line 74
	mov	eax, DWORD PTR [eax+60]
; Line 75
	ret	0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 2021
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2016
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN4@Xlen@2:
$LN3@Xlen@2:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Count$ = 20						; size = 4
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z PROC	; std::codecvt<char,char,int>::do_length, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 890
	push	ebp
	mov	ebp, esp
; Line 892
	mov	eax, DWORD PTR __Last1$[ebp]
	sub	eax, DWORD PTR __First1$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, eax
	jae	SHORT $LN4@do_length
	mov	eax, ecx
$LN4@do_length:
; Line 893
	pop	ebp
	ret	16					; 00000010H
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z ENDP	; std::codecvt<char,char,int>::do_length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First2$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid2$ = 20						; size = 4
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::do_unshift, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
; Line 884
	mov	eax, DWORD PTR __Mid2$[ebp]
	mov	ecx, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 885
	mov	eax, 3
; Line 886
	pop	ebp
	ret	16					; 00000010H
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::do_unshift
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_out, COMDAT
; _this$ = ecx
; Line 876
	push	ebp
	mov	ebp, esp
; Line 877
	mov	eax, DWORD PTR __Mid1$[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR __Mid2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [edx], eax
; Line 878
	mov	eax, 3
; Line 879
	pop	ebp
	ret	28					; 0000001cH
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_out
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_in, COMDAT
; _this$ = ecx
; Line 868
	push	ebp
	mov	ebp, esp
; Line 869
	mov	eax, DWORD PTR __Mid1$[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR __Mid2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [edx], eax
; Line 870
	mov	eax, 3
; Line 871
	pop	ebp
	ret	28					; 0000001cH
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_in
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::out, COMDAT
; _this$ = ecx
; Line 816
	push	ebp
	mov	ebp, esp
; Line 818
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
; Line 819
	pop	ebp
; Line 818
	jmp	eax
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::out
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC	; std::codecvt<char,char,int>::in, COMDAT
; _this$ = ecx
; Line 808
	push	ebp
	mov	ebp, esp
; Line 810
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
; Line 811
	pop	ebp
; Line 810
	jmp	eax
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP	; std::codecvt<char,char,int>::in
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 65
	mov	eax, DWORD PTR [ecx+8]
	cdq
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
?seekpos@?$fpos@H@std@@QBE_JXZ PROC			; std::fpos<int>::seekpos, COMDAT
; _this$ = ecx
; Line 60
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
; Line 61
	ret	0
?seekpos@?$fpos@H@std@@QBE_JXZ ENDP			; std::fpos<int>::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?state@?$fpos@H@std@@QBEHXZ
_TEXT	SEGMENT
?state@?$fpos@H@std@@QBEHXZ PROC			; std::fpos<int>::state, COMDAT
; _this$ = ecx
; Line 50
	mov	eax, DWORD PTR [ecx+16]
; Line 51
	ret	0
?state@?$fpos@H@std@@QBEHXZ ENDP			; std::fpos<int>::state
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@H_J@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Fileposition$ = 12					; size = 8
??0?$fpos@H@std@@QAE@H_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 46
	pop	ebp
	ret	12					; 0000000cH
??0?$fpos@H@std@@QAE@H_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 41
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 133
	xor	eax, eax
	cmp	BYTE PTR [ecx+4], al
	setne	al
	dec	eax
; Line 134
	ret	0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 647
	mov	al, BYTE PTR [eax]
; Line 648
	ret	0
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >, COMDAT
; _this$ = eax
; __Sb$ = ecx
; Line 613
	mov	BYTE PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx
; Line 614
	ret	0
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__Fill$ = 12						; size = 1
__Val$ = 16						; size = 8
__Dest$ = 24						; size = 8
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1117
	push	ebp
	mov	ebp, esp
; Line 1118
	mov	edx, DWORD PTR __Val$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	push	edx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	edx, DWORD PTR __Fill$[ebp]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[ebp]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp+4]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	push	esi
	call	eax
	mov	eax, esi
; Line 1119
	pop	ebp
	ret	24					; 00000018H
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__Fill$ = 12						; size = 1
__Dest$ = 16						; size = 8
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Val$ = edx
; Line 1104
	push	ebp
	mov	ebp, esp
; Line 1105
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	mov	edx, DWORD PTR __Fill$[ebp]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[ebp]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp+4]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	push	esi
	call	eax
	mov	eax, esi
; Line 1106
	pop	ebp
	ret	16					; 00000010H
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__Fill$ = 12						; size = 1
__Dest$ = 16						; size = 8
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Val$ = edx
; Line 1098
	push	ebp
	mov	ebp, esp
; Line 1099
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+28]
	push	edx
	mov	edx, DWORD PTR __Fill$[ebp]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[ebp]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp+4]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	push	esi
	call	eax
	mov	eax, esi
; Line 1100
	pop	ebp
	ret	16					; 00000010H
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 133
	xor	eax, eax
	cmp	BYTE PTR [ecx+4], al
	setne	al
	dec	eax
; Line 134
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ
_TEXT	SEGMENT
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 343
	mov	eax, DWORD PTR [ecx]
; Line 344
	ret	0
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 167
	ret	0
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = eax
; Line 163
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 459
	ret	0
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; _this$ = eax
; Line 455
	ret	4
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = eax
; Line 2011
	cmp	DWORD PTR [eax+20], 8
	jb	SHORT $LN4@Myptr
	mov	eax, DWORD PTR [eax]
$LN4@Myptr:
; Line 2012
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = eax
; Line 2005
	cmp	DWORD PTR [eax+20], 8
	jb	SHORT $LN4@Myptr@2
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@2:
; Line 2006
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 310
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Pnavail
	mov	ecx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [ecx]
	cdq
; Line 311
	ret	0
$LN3@Pnavail:
; Line 310
	xor	eax, eax
	cdq
; Line 311
	ret	0
?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync, COMDAT
; _this$ = ecx
; Line 141
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+52]
	jmp	edx
?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT
; _this$ = ecx
; Line 310
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Pnavail@2
	mov	ecx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [ecx]
	cdq
; Line 311
	ret	0
$LN3@Pnavail@2:
; Line 310
	xor	eax, eax
	cdq
; Line 311
	ret	0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT
; _this$ = ecx
; Line 304
	mov	eax, DWORD PTR [ecx+52]
	dec	DWORD PTR [eax]
; Line 305
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
; Line 306
	ret	0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbump, COMDAT
; _this$ = ecx
; Line 283
	push	ebp
	mov	ebp, esp
; Line 284
	mov	eax, DWORD PTR [ecx+52]
	mov	edx, DWORD PTR __Off$[ebp]
	sub	DWORD PTR [eax], edx
; Line 285
	mov	ecx, DWORD PTR [ecx+36]
	add	DWORD PTR [ecx], edx
; Line 286
	pop	ebp
	ret	4
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbump
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail, COMDAT
; _this$ = ecx
; Line 279
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Gnavail
	mov	ecx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [ecx]
	cdq
; Line 280
	ret	0
$LN3@Gnavail:
; Line 279
	xor	eax, eax
	cdq
; Line 280
	ret	0
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc, COMDAT
; _this$ = ecx
; Line 273
	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]
; Line 274
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	inc	eax
	mov	DWORD PTR [ecx], eax
; Line 275
	ret	0
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc, COMDAT
; _this$ = ecx
; Line 267
	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]
; Line 268
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
; Line 269
	ret	0
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec, COMDAT
; _this$ = ecx
; Line 261
	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
; Line 262
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	dec	eax
	mov	DWORD PTR [ecx], eax
; Line 263
	ret	0
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::epptr, COMDAT
; _this$ = ecx
; Line 256
	mov	eax, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR [ecx]
; Line 257
	ret	0
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::epptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::gbump, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
; Line 243
	mov	eax, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR __Off$[ebp]
	sub	DWORD PTR [eax], edx
; Line 244
	mov	ecx, DWORD PTR [ecx+32]
	add	DWORD PTR [ecx], edx
; Line 245
	pop	ebp
	ret	4
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gbump
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::egptr, COMDAT
; _this$ = ecx
; Line 238
	mov	eax, DWORD PTR [ecx+48]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR [ecx]
; Line 239
	ret	0
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::egptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pptr, COMDAT
; _this$ = ecx
; Line 233
	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
; Line 234
	ret	0
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::gptr, COMDAT
; _this$ = ecx
; Line 223
	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
; Line 224
	ret	0
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::eback, COMDAT
; _this$ = ecx
; Line 218
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
; Line 219
	ret	0
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::eback
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT
; _this$ = ecx
; Line 141
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+52]
	jmp	edx
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
_TEXT	SEGMENT
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 107
	mov	al, BYTE PTR [eax+64]
; Line 108
	ret	0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$_Yarn@D@std@@AAEXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 3391
	push	esi
	mov	esi, ecx
; Line 3392
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@Tidy
; Line 3398
	push	eax
	call	_free
	add	esp, 4
$LN4@Tidy:
; Line 3401
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 3402
	ret	0
?_Tidy@?$_Yarn@D@std@@AAEXXZ ENDP			; std::_Yarn<char>::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 459
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	mov	eax, ecx
; Line 455
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2009
	mov	eax, ecx
; Line 2011
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@3
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@3:
; Line 2012
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2003
	mov	eax, ecx
; Line 2005
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@4
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@4:
; Line 2006
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax
; Line 1908
	ret	0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 315
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Unlock
; Line 316
	push	eax
	call	__unlock_file
	pop	ecx
$LN1@Unlock:
; Line 317
	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; Line 309
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Lock
; Line 310
	push	eax
	call	__lock_file
	pop	ecx
$LN1@Lock:
; Line 311
	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1497
	cmp	DWORD PTR [eax+20], 8
	jb	SHORT $LN6@c_str
	mov	eax, DWORD PTR [eax]
$LN6@c_str:
; Line 1498
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 445
	ret	4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; Line 440
	xor	eax, eax
; Line 441
	ret	0
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; Line 434
	mov	eax, ecx
; Line 436
	ret	12					; 0000000cH
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
; Line 430
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 431
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 8
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 423
	push	ebp
	mov	ebp, esp
; Line 424
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 425
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
_TEXT	SEGMENT
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc, COMDAT
; _this$ = ecx
; Line 348
	xor	eax, eax
	xor	edx, edx
; Line 349
	ret	0
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; Line 212
	add	ecx, 4
	jmp	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; Line 207
	add	ecx, 4
	jmp	?_Lock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Lock
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 105
	xor	eax, eax
	cmp	BYTE PTR [ecx+4], al
	setne	al
	dec	eax
; Line 106
	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
_TEXT	SEGMENT
?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 86
	mov	eax, DWORD PTR [eax+56]
; Line 87
	ret	0
?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT
; _this$ = eax
; Line 86
	mov	eax, DWORD PTR [eax+56]
; Line 87
	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
_TEXT	SEGMENT
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 189
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
	mov	eax, esi
; Line 190
	ret	0
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 79
	mov	eax, DWORD PTR [ecx-8]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-8], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
; Line 80
	ret	0
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@?$_Yarn@D@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$_Yarn@D@std@@QBEPBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 3376
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN4@c_str@2
	lea	eax, DWORD PTR [ecx+4]
$LN4@c_str@2:
; Line 3377
	ret	0
?c_str@?$_Yarn@D@std@@QBEPBDXZ ENDP			; std::_Yarn<char>::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$_Yarn@D@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Yarn@D@std@@QAE@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT
; _this$ = ecx
; Line 3365
	push	esi
	mov	esi, ecx
; Line 3366
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@Yarn
	push	eax
	call	_free
	add	esp, 4
$LN6@Yarn:
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 3367
	ret	0
??1?$_Yarn@D@std@@QAE@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_Yarn@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Yarn@D@std@@QAE@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT
; _this$ = ecx
; Line 3315
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	BYTE PTR [eax+4], 0
; Line 3316
	ret	0
??0?$_Yarn@D@std@@QAE@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1512
	mov	eax, DWORD PTR [ecx+16]
; Line 1513
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = eax
; Line 1497
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@c_str@3
	mov	eax, DWORD PTR [eax]
$LN6@c_str@3:
; Line 1498
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
_TEXT	SEGMENT
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; _this$ = eax
; Line 1447
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@operator
	mov	eax, DWORD PTR [eax]
$LN6@operator:
; Line 1448
	ret	0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?VerifyEmbeddedSignature@@YAHPB_W@Z		; VerifyEmbeddedSignature
EXTRN	___security_cookie:DWORD
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?VerifyEmbeddedSignature@@YAHPB_W@Z
_TEXT	SEGMENT
_WinTrustData$ = -84					; size = 48
_FileData$ = -36					; size = 16
_WVTPolicyGUID$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?VerifyEmbeddedSignature@@YAHPB_W@Z PROC		; VerifyEmbeddedSignature, COMDAT
; _pwszSourceFile$ = ecx
; File c:\users\javis\documents\github\autoscan\launcher\launcher\scandir.cpp
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
; Line 160
	xor	ebx, ebx
	xor	eax, eax
; Line 191
	push	48					; 00000030H
	lea	edx, DWORD PTR _WinTrustData$[ebp]
	push	ebx
	mov	DWORD PTR _FileData$[ebp], eax
	mov	DWORD PTR _FileData$[ebp+4], eax
	mov	DWORD PTR _FileData$[ebp+8], eax
	mov	DWORD PTR _FileData$[ebp+12], eax
	push	edx
	mov	DWORD PTR _FileData$[ebp], 16		; 00000010H
	mov	DWORD PTR _FileData$[ebp+4], ecx
	mov	DWORD PTR _FileData$[ebp+8], ebx
	mov	DWORD PTR _FileData$[ebp+12], ebx
	mov	DWORD PTR _WVTPolicyGUID$[ebp], 11191659 ; 00aac56bH
	mov	DWORD PTR _WVTPolicyGUID$[ebp+4], 298896708 ; 11d0cd44H
	mov	DWORD PTR _WVTPolicyGUID$[ebp+8], -1073692020 ; c000c28cH
	mov	DWORD PTR _WVTPolicyGUID$[ebp+12], -292175281 ; ee95c24fH
	call	_memset
	add	esp, 12					; 0000000cH
; Line 232
	lea	ecx, DWORD PTR _WinTrustData$[ebp]
	push	ecx
	lea	edx, DWORD PTR _WVTPolicyGUID$[ebp]
	push	edx
	lea	eax, DWORD PTR _FileData$[ebp]
	push	ebx
	mov	DWORD PTR _WinTrustData$[ebp], 48	; 00000030H
	mov	DWORD PTR _WinTrustData$[ebp+4], ebx
	mov	DWORD PTR _WinTrustData$[ebp+8], ebx
	mov	DWORD PTR _WinTrustData$[ebp+12], 2
	mov	DWORD PTR _WinTrustData$[ebp+16], ebx
	mov	DWORD PTR _WinTrustData$[ebp+20], 1
	mov	DWORD PTR _WinTrustData$[ebp+28], ebx
	mov	DWORD PTR _WinTrustData$[ebp+32], ebx
	mov	DWORD PTR _WinTrustData$[ebp+36], ebx
	mov	DWORD PTR _WinTrustData$[ebp+44], ebx
	mov	DWORD PTR _WinTrustData$[ebp+24], eax
	call	DWORD PTR __imp__WinVerifyTrust@12
; Line 234
	cmp	eax, -2146762496			; 800b0100H
	jg	SHORT $LN14@VerifyEmbe
; Line 295
	jne	SHORT $LN4@VerifyEmbe
; Line 261
	call	DWORD PTR __imp__GetLastError@0
$LN4@VerifyEmbe:
; Line 288
	xor	eax, eax
; Line 325
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@VerifyEmbe:
; Line 234
	cmp	eax, -2146762479			; 800b0111H
	je	SHORT $LN4@VerifyEmbe
	cmp	eax, ebx
; Line 320
	jne	SHORT $LN4@VerifyEmbe
; Line 325
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	mov	eax, 1
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?VerifyEmbeddedSignature@@YAHPB_W@Z ENDP		; VerifyEmbeddedSignature
_TEXT	ENDS
PUBLIC	?toUpper@@YAXPADH@Z				; toUpper
; Function compile flags: /Ogtp
;	COMDAT ?toUpper@@YAXPADH@Z
_TEXT	SEGMENT
?toUpper@@YAXPADH@Z PROC				; toUpper, COMDAT
; _pArray$ = eax
; Line 146
	inc	eax
	mov	edx, 20					; 00000014H
$LL4@toUpper:
; Line 148
	mov	cl, BYTE PTR [eax-1]
	cmp	cl, 97					; 00000061H
	jl	SHORT $LN3@toUpper
	cmp	cl, 122					; 0000007aH
	jg	SHORT $LN3@toUpper
; Line 149
	sub	cl, 32					; 00000020H
	mov	BYTE PTR [eax-1], cl
$LN3@toUpper:
; Line 148
	mov	cl, BYTE PTR [eax]
	cmp	cl, 97					; 00000061H
	jl	SHORT $LN10@toUpper
	cmp	cl, 122					; 0000007aH
	jg	SHORT $LN10@toUpper
; Line 149
	sub	cl, 32					; 00000020H
	mov	BYTE PTR [eax], cl
$LN10@toUpper:
; Line 148
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, 97					; 00000061H
	jl	SHORT $LN11@toUpper
	cmp	cl, 122					; 0000007aH
	jg	SHORT $LN11@toUpper
; Line 149
	sub	cl, 32					; 00000020H
	mov	BYTE PTR [eax+1], cl
$LN11@toUpper:
; Line 148
	mov	cl, BYTE PTR [eax+2]
	cmp	cl, 97					; 00000061H
	jl	SHORT $LN12@toUpper
	cmp	cl, 122					; 0000007aH
	jg	SHORT $LN12@toUpper
; Line 149
	sub	cl, 32					; 00000020H
	mov	BYTE PTR [eax+2], cl
$LN12@toUpper:
; Line 148
	mov	cl, BYTE PTR [eax+3]
	cmp	cl, 97					; 00000061H
	jl	SHORT $LN13@toUpper
	cmp	cl, 122					; 0000007aH
	jg	SHORT $LN13@toUpper
; Line 149
	sub	cl, 32					; 00000020H
	mov	BYTE PTR [eax+3], cl
$LN13@toUpper:
; Line 146
	add	eax, 5
	dec	edx
	jne	SHORT $LL4@toUpper
; Line 151
	ret	0
?toUpper@@YAXPADH@Z ENDP				; toUpper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?writeToString@MD5@@QAEXXZ
_TEXT	SEGMENT
?writeToString@MD5@@QAEXXZ PROC				; MD5::writeToString, COMDAT
; _this$ = ebx
; File c:\users\javis\documents\github\autoscan\launcher\launcher\md5.h
; Line 322
	push	esi
	push	edi
; Line 325
	xor	esi, esi
	lea	edi, DWORD PTR [ebx+104]
	npad	9
$LL3@writeToStr:
; Line 326
	movzx	eax, BYTE PTR [ebx+esi+88]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	edi
	call	_sprintf
	inc	esi
	add	esp, 12					; 0000000cH
	add	edi, 2
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL3@writeToStr
; Line 327
	pop	edi
	pop	esi
	ret	0
?writeToString@MD5@@QAEXXZ ENDP				; MD5::writeToString
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Init@MD5@@QAEXXZ
_TEXT	SEGMENT
?Init@MD5@@QAEXXZ PROC					; MD5::Init, COMDAT
; _this$ = eax
; Line 246
	xor	ecx, ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 249
	mov	DWORD PTR [eax], 1732584193		; 67452301H
; Line 250
	mov	DWORD PTR [eax+4], -271733879		; efcdab89H
; Line 251
	mov	DWORD PTR [eax+8], -1732584194		; 98badcfeH
; Line 252
	mov	DWORD PTR [eax+12], 271733878		; 10325476H
; Line 253
	ret	0
?Init@MD5@@QAEXXZ ENDP					; MD5::Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0MD5@@QAE@XZ
_TEXT	SEGMENT
??0MD5@@QAE@XZ PROC					; MD5::MD5, COMDAT
; _this$ = eax
; Line 240
	xor	ecx, ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax], 1732584193		; 67452301H
	mov	DWORD PTR [eax+4], -271733879		; efcdab89H
	mov	DWORD PTR [eax+8], -1732584194		; 98badcfeH
	mov	DWORD PTR [eax+12], 271733878		; 10325476H
; Line 241
	ret	0
??0MD5@@QAE@XZ ENDP					; MD5::MD5
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Decode@MD5@@CAXPAKPAEI@Z
_TEXT	SEGMENT
?Decode@MD5@@CAXPAKPAEI@Z PROC				; MD5::Decode, COMDAT
; _output$ = ecx
; _input$ = eax
; Line 226
	push	esi
; Line 229
	add	eax, 2
	mov	edx, 16					; 00000010H
	push	edi
	npad	6
$LL3@Decode:
; Line 231
	movzx	esi, BYTE PTR [eax+1]
	movzx	edi, BYTE PTR [eax]
	shl	esi, 8
	or	esi, edi
	movzx	edi, BYTE PTR [eax-1]
	shl	esi, 8
	or	esi, edi
	movzx	edi, BYTE PTR [eax-2]
	shl	esi, 8
	or	esi, edi
	mov	DWORD PTR [ecx], esi
	add	ecx, 4
	add	eax, 4
	dec	edx
	jne	SHORT $LL3@Decode
; Line 232
	pop	edi
	pop	esi
	ret	0
?Decode@MD5@@CAXPAKPAEI@Z ENDP				; MD5::Decode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Encode@MD5@@CAXPAEPAKI@Z
_TEXT	SEGMENT
?Encode@MD5@@CAXPAEPAKI@Z PROC				; MD5::Encode, COMDAT
; _output$ = ecx
; _input$ = eax
; _len$ = edx
; Line 215
	test	edx, edx
	je	SHORT $LN1@Encode
	push	esi
	lea	esi, DWORD PTR [edx-1]
	shr	esi, 2
	inc	ecx
	add	eax, 2
	inc	esi
$LL3@Encode:
; Line 216
	movzx	edx, BYTE PTR [eax-2]
	mov	BYTE PTR [ecx-1], dl
; Line 217
	movzx	edx, BYTE PTR [eax-1]
	mov	BYTE PTR [ecx], dl
; Line 218
	movzx	edx, BYTE PTR [eax]
	mov	BYTE PTR [ecx+1], dl
; Line 219
	movzx	edx, BYTE PTR [eax+1]
	mov	BYTE PTR [ecx+2], dl
	add	eax, 4
	add	ecx, 4
	dec	esi
	jne	SHORT $LL3@Encode
	pop	esi
$LN1@Encode:
; Line 221
	ret	0
?Encode@MD5@@CAXPAEPAKI@Z ENDP				; MD5::Encode
_TEXT	ENDS
PUBLIC	_state$GSCopy$
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?MD5Transform@MD5@@CAXQAKQAE@Z
_TEXT	SEGMENT
_state$GSCopy$ = -80					; size = 4
tv1381 = -76						; size = 4
tv1222 = -76						; size = 4
tv1192 = -72						; size = 4
_b$ = -72						; size = 4
_a$ = -72						; size = 4
_x$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_block$ = 8						; size = 4
?MD5Transform@MD5@@CAXQAKQAE@Z PROC			; MD5::MD5Transform, COMDAT
; _state$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	eax, DWORD PTR _block$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 124
	mov	ecx, DWORD PTR [edi+12]
	mov	esi, DWORD PTR [edi+4]
	mov	ebx, DWORD PTR [edi+8]
	mov	DWORD PTR tv1192[ebp], ecx
; Line 126
	lea	ecx, DWORD PTR _x$[ebp]
; Line 144
	mov	DWORD PTR _state$GSCopy$[ebp], edi
	call	?Decode@MD5@@CAXPAKPAEI@Z		; MD5::Decode
	mov	edi, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv1192[ebp]
	mov	edx, esi
	not	edx
	and	edx, ecx
	mov	eax, ebx
	and	eax, esi
	or	edx, eax
	add	edx, edi
	mov	eax, DWORD PTR _x$[ebp]
	lea	eax, DWORD PTR [edx+eax-680876936]
	rol	eax, 7
	add	eax, esi
	mov	edi, esi
	and	edi, eax
	mov	edx, eax
	not	edx
	and	edx, ebx
	or	edx, edi
	add	edx, DWORD PTR _x$[ebp+4]
	lea	ecx, DWORD PTR [edx+ecx-389564586]
	rol	ecx, 12					; 0000000cH
	add	ecx, eax
	mov	edx, ecx
	not	edx
	and	edx, esi
	mov	edi, ecx
	and	edi, eax
	or	edx, edi
	add	edx, DWORD PTR _x$[ebp+8]
	lea	edx, DWORD PTR [edx+ebx+606105819]
	ror	edx, 15					; 0000000fH
	add	edx, ecx
	mov	ebx, ecx
	and	ebx, edx
	mov	edi, edx
	not	edi
	and	edi, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+12]
	lea	esi, DWORD PTR [edi+esi-1044525330]
	ror	esi, 10					; 0000000aH
	add	esi, edx
	mov	DWORD PTR _b$[ebp], esi
	not	esi
	and	esi, ecx
	mov	edi, edx
	and	edi, DWORD PTR _b$[ebp]
	or	esi, edi
	add	esi, DWORD PTR _x$[ebp+16]
	lea	eax, DWORD PTR [esi+eax-176418897]
	mov	esi, DWORD PTR _b$[ebp]
	rol	eax, 7
	add	eax, esi
	mov	edi, eax
	not	edi
	and	edi, edx
	mov	ebx, esi
	and	ebx, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+20]
	lea	ecx, DWORD PTR [edi+ecx+1200080426]
	rol	ecx, 12					; 0000000cH
	add	ecx, eax
	mov	edi, ecx
	not	edi
	mov	ebx, ecx
	and	edi, esi
	and	ebx, eax
; Line 135
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+24]
; Line 136
	mov	ebx, ecx
	lea	edx, DWORD PTR [edi+edx-1473231341]
	ror	edx, 15					; 0000000fH
	add	edx, ecx
	and	ebx, edx
	mov	edi, edx
	not	edi
	and	edi, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+28]
	lea	esi, DWORD PTR [edi+esi-45705983]
	ror	esi, 10					; 0000000aH
	add	esi, edx
	mov	DWORD PTR _b$[ebp], esi
; Line 137
	not	esi
	and	esi, ecx
	mov	edi, edx
	and	edi, DWORD PTR _b$[ebp]
	or	esi, edi
	add	esi, DWORD PTR _x$[ebp+32]
	lea	eax, DWORD PTR [esi+eax+1770035416]
	mov	esi, DWORD PTR _b$[ebp]
	rol	eax, 7
	add	eax, esi
; Line 138
	mov	ebx, esi
	and	ebx, eax
	mov	edi, eax
	not	edi
	and	edi, edx
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+36]
	lea	ecx, DWORD PTR [edi+ecx-1958414417]
	rol	ecx, 12					; 0000000cH
	add	ecx, eax
; Line 139
	mov	edi, ecx
	not	edi
	and	edi, esi
	mov	ebx, ecx
	and	ebx, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+40]
; Line 140
	mov	ebx, ecx
	lea	edx, DWORD PTR [edi+edx-42063]
	ror	edx, 15					; 0000000fH
	add	edx, ecx
	and	ebx, edx
	mov	edi, edx
	not	edi
	and	edi, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+44]
	lea	esi, DWORD PTR [edi+esi-1990404162]
	ror	esi, 10					; 0000000aH
	add	esi, edx
	mov	DWORD PTR _b$[ebp], esi
; Line 141
	not	esi
	and	esi, ecx
	mov	edi, edx
	and	edi, DWORD PTR _b$[ebp]
	or	esi, edi
	add	esi, DWORD PTR _x$[ebp+48]
	lea	eax, DWORD PTR [esi+eax+1804603682]
	mov	esi, DWORD PTR _b$[ebp]
	rol	eax, 7
	add	eax, esi
; Line 142
	mov	edi, eax
	not	edi
	and	edi, edx
	mov	ebx, esi
	and	ebx, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+52]
	lea	ecx, DWORD PTR [edi+ecx-40341101]
	rol	ecx, 12					; 0000000cH
	add	ecx, eax
; Line 143
	mov	edi, ecx
	not	edi
	mov	ebx, edi
	and	ebx, esi
	mov	esi, ecx
	and	esi, eax
	or	ebx, esi
	add	ebx, DWORD PTR _x$[ebp+56]
	lea	edx, DWORD PTR [ebx+edx-1502002290]
	ror	edx, 15					; 0000000fH
	add	edx, ecx
; Line 147
	and	edi, edx
	mov	esi, edx
	not	esi
	mov	DWORD PTR tv1222[ebp], esi
	and	esi, eax
	mov	ebx, ecx
	and	ebx, edx
	or	esi, ebx
	add	esi, DWORD PTR _x$[ebp+60]
	mov	ebx, DWORD PTR _b$[ebp]
	lea	esi, DWORD PTR [esi+ebx+1236535329]
	ror	esi, 10					; 0000000aH
	add	esi, edx
	mov	ebx, ecx
	and	ebx, esi
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+4]
; Line 148
	mov	ebx, edx
	lea	eax, DWORD PTR [edi+eax-165796510]
	mov	edi, DWORD PTR tv1222[ebp]
	and	edi, esi
	rol	eax, 5
	add	eax, esi
	and	ebx, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+24]
	lea	ecx, DWORD PTR [edi+ecx-1069501632]
	rol	ecx, 9
	add	ecx, eax
; Line 149
	mov	edi, esi
	not	edi
	and	edi, eax
	mov	ebx, ecx
	and	ebx, esi
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+44]
	lea	edx, DWORD PTR [edi+edx+643717713]
; Line 150
	mov	edi, eax
	not	edi
	and	edi, ecx
	rol	edx, 14					; 0000000eH
	add	edx, ecx
	mov	ebx, edx
	and	ebx, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp]
; Line 151
	mov	ebx, ecx
	lea	esi, DWORD PTR [edi+esi-373897302]
	ror	esi, 12					; 0000000cH
	add	esi, edx
	mov	edi, ecx
	not	edi
	and	edi, edx
	and	ebx, esi
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+20]
	lea	eax, DWORD PTR [edi+eax-701558691]
	rol	eax, 5
	add	eax, esi
	mov	DWORD PTR _a$[ebp], eax
; Line 152
	mov	eax, edx
	not	eax
	and	eax, esi
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+40]
; Line 153
	mov	edi, esi
	lea	ecx, DWORD PTR [eax+ecx+38016083]
	mov	eax, DWORD PTR _a$[ebp]
	rol	ecx, 9
	not	edi
	add	ecx, eax
	and	edi, eax
; Line 154
	not	eax
	and	eax, ecx
	mov	ebx, ecx
	and	ebx, esi
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+60]
	lea	edx, DWORD PTR [edi+edx-660478335]
	rol	edx, 14					; 0000000eH
	add	edx, ecx
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+16]
; Line 155
	mov	edi, ecx
	lea	esi, DWORD PTR [eax+esi-405537848]
	ror	esi, 12					; 0000000cH
	add	esi, edx
	and	edi, esi
	mov	eax, ecx
	not	eax
	and	eax, edx
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+36]
	mov	edi, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [eax+edi+568446438]
	rol	eax, 5
	add	eax, esi
	mov	DWORD PTR _a$[ebp], eax
; Line 156
	mov	eax, edx
	not	eax
	and	eax, esi
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+56]
; Line 157
	mov	edi, esi
	lea	ecx, DWORD PTR [eax+ecx-1019803690]
	mov	eax, DWORD PTR _a$[ebp]
	rol	ecx, 9
	add	ecx, eax
	not	edi
	and	edi, eax
	mov	ebx, ecx
	and	ebx, esi
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+12]
; Line 158
	not	eax
	and	eax, ecx
	lea	edx, DWORD PTR [edi+edx-187363961]
	rol	edx, 14					; 0000000eH
	add	edx, ecx
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+32]
; Line 159
	mov	edi, ecx
	lea	esi, DWORD PTR [eax+esi+1163531501]
	ror	esi, 12					; 0000000cH
	add	esi, edx
	mov	eax, ecx
	not	eax
	and	eax, edx
	and	edi, esi
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+52]
	mov	edi, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [eax+edi-1444681467]
	rol	eax, 5
	add	eax, esi
	mov	DWORD PTR _a$[ebp], eax
; Line 160
	mov	eax, edx
	not	eax
	and	eax, esi
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+8]
	lea	ecx, DWORD PTR [eax+ecx-51403784]
	mov	eax, DWORD PTR _a$[ebp]
	rol	ecx, 9
	add	ecx, eax
; Line 161
	mov	ebx, ecx
	and	ebx, esi
	mov	edi, esi
	not	edi
	and	edi, eax
	or	edi, ebx
	add	edi, DWORD PTR _x$[ebp+28]
; Line 162
	not	eax
	lea	edx, DWORD PTR [edi+edx+1735328473]
	and	eax, ecx
	rol	edx, 14					; 0000000eH
	add	edx, ecx
	mov	edi, edx
	and	edi, DWORD PTR _a$[ebp]
	or	eax, edi
	add	eax, DWORD PTR _x$[ebp+48]
; Line 165
	mov	edi, DWORD PTR _a$[ebp]
	lea	esi, DWORD PTR [eax+esi-1926607734]
	mov	eax, ecx
	xor	eax, edx
	ror	esi, 12					; 0000000cH
	add	esi, edx
	xor	eax, esi
	add	eax, DWORD PTR _x$[ebp+20]
	lea	eax, DWORD PTR [eax+edi-378558]
	rol	eax, 4
	add	eax, esi
; Line 166
	mov	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+32]
	lea	ecx, DWORD PTR [edi+ecx-2022574463]
	rol	ecx, 11					; 0000000bH
	add	ecx, eax
; Line 167
	mov	edi, ecx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+44]
	lea	edx, DWORD PTR [edi+edx+1839030562]
	rol	edx, 16					; 00000010H
	add	edx, ecx
; Line 168
	mov	edi, ecx
	xor	edi, edx
	mov	DWORD PTR tv1381[ebp], edi
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+56]
	lea	esi, DWORD PTR [edi+esi-35309556]
; Line 169
	mov	edi, DWORD PTR tv1381[ebp]
	ror	esi, 9
	add	esi, edx
	xor	edi, esi
	add	edi, DWORD PTR _x$[ebp+4]
	lea	eax, DWORD PTR [edi+eax-1530992060]
	rol	eax, 4
	add	eax, esi
; Line 170
	mov	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+16]
	lea	edi, DWORD PTR [edi+ecx+1272893353]
	rol	edi, 11					; 0000000bH
	add	edi, eax
; Line 171
	mov	ecx, edi
	xor	ecx, esi
	xor	ecx, eax
	add	ecx, DWORD PTR _x$[ebp+28]
; Line 172
	mov	ebx, edi
	lea	edx, DWORD PTR [ecx+edx-155497632]
	rol	edx, 16					; 00000010H
	add	edx, edi
	xor	ebx, edx
	mov	ecx, ebx
	xor	ecx, eax
	add	ecx, DWORD PTR _x$[ebp+40]
	lea	ecx, DWORD PTR [ecx+esi-1094730640]
	ror	ecx, 9
	add	ecx, edx
; Line 173
	xor	ebx, ecx
	add	ebx, DWORD PTR _x$[ebp+52]
	lea	eax, DWORD PTR [ebx+eax+681279174]
	rol	eax, 4
	add	eax, ecx
; Line 174
	mov	esi, edx
	xor	esi, ecx
	xor	esi, eax
	add	esi, DWORD PTR _x$[ebp]
	lea	esi, DWORD PTR [esi+edi-358537222]
	rol	esi, 11					; 0000000bH
	add	esi, eax
; Line 175
	mov	edi, esi
	xor	edi, ecx
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+12]
	lea	edi, DWORD PTR [edi+edx-722521979]
	rol	edi, 16					; 00000010H
	add	edi, esi
; Line 176
	mov	edx, esi
	xor	edx, edi
	mov	ebx, edx
	xor	ebx, eax
	add	ebx, DWORD PTR _x$[ebp+24]
	lea	ecx, DWORD PTR [ebx+ecx+76029189]
	ror	ecx, 9
	add	ecx, edi
; Line 177
	xor	edx, ecx
	add	edx, DWORD PTR _x$[ebp+36]
	lea	eax, DWORD PTR [edx+eax-640364487]
; Line 178
	mov	edx, edi
	xor	edx, ecx
	rol	eax, 4
	add	eax, ecx
	xor	edx, eax
	add	edx, DWORD PTR _x$[ebp+48]
	lea	edx, DWORD PTR [edx+esi-421815835]
	rol	edx, 11					; 0000000bH
	add	edx, eax
; Line 179
	mov	esi, edx
	xor	esi, ecx
	xor	esi, eax
	add	esi, DWORD PTR _x$[ebp+60]
	lea	esi, DWORD PTR [esi+edi+530742520]
	rol	esi, 16					; 00000010H
	add	esi, edx
; Line 180
	mov	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+8]
	lea	ecx, DWORD PTR [edi+ecx-995338651]
	ror	ecx, 9
	add	ecx, esi
; Line 183
	mov	edi, edx
	not	edi
	or	edi, ecx
	xor	edi, esi
	add	edi, DWORD PTR _x$[ebp]
	lea	eax, DWORD PTR [edi+eax-198630844]
	rol	eax, 6
	add	eax, ecx
; Line 184
	mov	edi, esi
	not	edi
	or	edi, eax
	xor	edi, ecx
	add	edi, DWORD PTR _x$[ebp+28]
	lea	edx, DWORD PTR [edi+edx+1126891415]
	rol	edx, 10					; 0000000aH
	add	edx, eax
; Line 185
	mov	edi, ecx
	not	edi
	or	edi, edx
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+56]
	lea	esi, DWORD PTR [edi+esi-1416354905]
	rol	esi, 15					; 0000000fH
	add	esi, edx
; Line 186
	mov	edi, eax
	not	edi
	or	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _x$[ebp+20]
	lea	ecx, DWORD PTR [edi+ecx-57434055]
	ror	ecx, 11					; 0000000bH
	add	ecx, esi
; Line 187
	mov	edi, edx
	not	edi
	or	edi, ecx
	xor	edi, esi
	add	edi, DWORD PTR _x$[ebp+48]
	lea	eax, DWORD PTR [edi+eax+1700485571]
	rol	eax, 6
	add	eax, ecx
; Line 188
	mov	edi, esi
	not	edi
	or	edi, eax
	xor	edi, ecx
	add	edi, DWORD PTR _x$[ebp+12]
	lea	edx, DWORD PTR [edi+edx-1894986606]
; Line 189
	mov	edi, ecx
	not	edi
	rol	edx, 10					; 0000000aH
	add	edx, eax
	or	edi, edx
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+40]
	lea	esi, DWORD PTR [edi+esi-1051523]
	rol	esi, 15					; 0000000fH
	add	esi, edx
; Line 190
	mov	edi, eax
	not	edi
	or	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _x$[ebp+4]
	lea	ecx, DWORD PTR [edi+ecx-2054922799]
	ror	ecx, 11					; 0000000bH
	add	ecx, esi
; Line 191
	mov	edi, edx
	not	edi
	or	edi, ecx
	xor	edi, esi
	add	edi, DWORD PTR _x$[ebp+32]
	lea	eax, DWORD PTR [edi+eax+1873313359]
	rol	eax, 6
	add	eax, ecx
; Line 192
	mov	edi, esi
	not	edi
	or	edi, eax
	xor	edi, ecx
	add	edi, DWORD PTR _x$[ebp+60]
	lea	edx, DWORD PTR [edi+edx-30611744]
; Line 193
	mov	edi, ecx
	not	edi
	rol	edx, 10					; 0000000aH
	add	edx, eax
	or	edi, edx
	xor	edi, eax
	add	edi, DWORD PTR _x$[ebp+24]
	lea	esi, DWORD PTR [edi+esi-1560198380]
	rol	esi, 15					; 0000000fH
	add	esi, edx
; Line 194
	mov	edi, eax
	not	edi
	or	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _x$[ebp+52]
	lea	edi, DWORD PTR [edi+ecx+1309151649]
	ror	edi, 11					; 0000000bH
	add	edi, esi
; Line 195
	mov	ecx, edx
	not	ecx
	or	ecx, edi
	xor	ecx, esi
	add	ecx, DWORD PTR _x$[ebp+16]
	lea	eax, DWORD PTR [ecx+eax-145523070]
	rol	eax, 6
	add	eax, edi
; Line 196
	mov	ecx, esi
	not	ecx
	or	ecx, eax
	xor	ecx, edi
	add	ecx, DWORD PTR _x$[ebp+44]
	lea	edx, DWORD PTR [ecx+edx-1120210379]
	rol	edx, 10					; 0000000aH
	add	edx, eax
; Line 197
	mov	ecx, edi
	not	ecx
	or	ecx, edx
	xor	ecx, eax
	add	ecx, DWORD PTR _x$[ebp+8]
	lea	esi, DWORD PTR [ecx+esi+718787259]
; Line 200
	mov	ecx, DWORD PTR _state$GSCopy$[ebp]
	mov	ebx, DWORD PTR [ecx]
	add	ebx, eax
	not	eax
	rol	esi, 15					; 0000000fH
	add	esi, edx
	or	eax, esi
	xor	eax, edx
; Line 201
	add	eax, DWORD PTR _x$[ebp+36]
	mov	DWORD PTR [ecx], ebx
	lea	eax, DWORD PTR [eax+edi-343485551]
	ror	eax, 11					; 0000000bH
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	add	eax, esi
	mov	DWORD PTR [ecx+4], eax
; Line 202
	mov	eax, DWORD PTR [ecx+8]
	add	eax, esi
	mov	DWORD PTR [ecx+8], eax
; Line 203
	mov	eax, DWORD PTR [ecx+12]
	add	eax, edx
	mov	DWORD PTR [ecx+12], eax
; Line 207
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Transform@MD5@@CAXQAKQAE@Z ENDP			; MD5::MD5Transform
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\time.inl
; Line 133
	push	eax
	call	__time64
	add	esp, 4
; Line 134
	ret	0
_time	ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT _localtime
_TEXT	SEGMENT
_localtime PROC						; COMDAT
; __Time$ = eax
; Line 116
	push	eax
	call	__localtime64
	add	esp, 4
; Line 118
	ret	0
_localtime ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	eax, DWORD PTR __File$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	eax
	push	edx
	call	_ungetc
	xor	ecx, ecx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 106
	pop	ebp
	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	mov	eax, DWORD PTR __File$[ebp]
	movsx	ecx, BYTE PTR __Byte$[ebp]
	push	eax
	push	ecx
	call	_fputc
	xor	edx, edx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 82
	pop	ebp
	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
; Line 37
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	jne	SHORT $LN2@Fgetc
; Line 38
	xor	al, al
; Line 44
	pop	ebp
	ret	0
$LN2@Fgetc:
; Line 41
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	BYTE PTR [ecx], al
; Line 42
	mov	al, 1
; Line 44
	pop	ebp
	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0ios_base@std@@IAE@XZ
_TEXT	SEGMENT
??0ios_base@std@@IAE@XZ PROC				; std::ios_base::ios_base, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 549
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
; Line 551
	ret	0
??0ios_base@std@@IAE@XZ ENDP				; std::ios_base::ios_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1ios_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ios_base@std@@UAE@XZ PROC				; std::ios_base::~ios_base, COMDAT
; _this$ = ecx
; Line 541
	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
; Line 542
	ret	0
??1ios_base@std@@UAE@XZ ENDP				; std::ios_base::~ios_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QAE_J_J@Z
_TEXT	SEGMENT
?width@ios_base@std@@QAE_J_J@Z PROC			; std::ios_base::width, COMDAT
; _this$ = ecx
; Line 445
	mov	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx+36]
; Line 446
	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 0
; Line 448
	ret	0
?width@ios_base@std@@QAE_J_J@Z ENDP			; std::ios_base::width
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QBE_JXZ
_TEXT	SEGMENT
?width@ios_base@std@@QBE_JXZ PROC			; std::ios_base::width, COMDAT
; _this$ = ecx
; Line 440
	mov	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx+36]
; Line 441
	ret	0
?width@ios_base@std@@QBE_JXZ ENDP			; std::ios_base::width
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?precision@ios_base@std@@QBE_JXZ
_TEXT	SEGMENT
?precision@ios_base@std@@QBE_JXZ PROC			; std::ios_base::precision, COMDAT
; _this$ = ecx
; Line 428
	mov	eax, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [ecx+28]
; Line 429
	ret	0
?precision@ios_base@std@@QBE_JXZ ENDP			; std::ios_base::precision
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
?flags@ios_base@std@@QBEHXZ PROC			; std::ios_base::flags, COMDAT
; _this$ = eax
; Line 395
	mov	eax, DWORD PTR [eax+20]
; Line 396
	ret	0
?flags@ios_base@std@@QBEHXZ ENDP			; std::ios_base::flags
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
?rdstate@ios_base@std@@QBEHXZ PROC			; std::ios_base::rdstate, COMDAT
; _this$ = ecx
; Line 336
	mov	eax, DWORD PTR [ecx+12]
; Line 337
	ret	0
?rdstate@ios_base@std@@QBEHXZ ENDP			; std::ios_base::rdstate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Makestr@system_error@std@@AAEXXZ
_TEXT	SEGMENT
?_Makestr@system_error@std@@AAEXXZ PROC			; std::system_error::_Makestr, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\system_error
; Line 567
	ret	0
?_Makestr@system_error@std@@AAEXXZ ENDP			; std::system_error::_Makestr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0error_code@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_code@std@@QAE@HABVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __Cat$[ebp]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 205
	pop	ebp
	ret	8
??0error_code@std@@QAE@HABVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?_Donarrow@?$ctype@_W@std@@IBED_WD@Z
_TEXT	SEGMENT
__Mbst$ = -16						; size = 4
__Buf$ = -12						; size = 5
__$ArrayPad$ = -4					; size = 4
__Ch$ = 8						; size = 2
__Dflt$ = 12						; size = 1
?_Donarrow@?$ctype@_W@std@@IBED_WD@Z PROC		; std::ctype<wchar_t>::_Donarrow, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 2668
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2672
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR __Ch$[ebp]
	lea	eax, DWORD PTR __Mbst$[ebp]
	push	eax
	push	ecx
	lea	edx, DWORD PTR __Buf$[ebp]
	push	edx
	mov	DWORD PTR __Mbst$[ebp], 0
	call	__Wcrtomb
	add	esp, 16					; 00000010H
	cmp	eax, 1
	mov	al, BYTE PTR __Dflt$[ebp]
	jne	SHORT $LN4@Donarrow
	mov	al, BYTE PTR __Buf$[ebp]
$LN4@Donarrow:
; Line 2673
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?_Donarrow@?$ctype@_W@std@@IBED_WD@Z ENDP		; std::ctype<wchar_t>::_Donarrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Dowiden@?$ctype@_W@std@@IBE_WD@Z
_TEXT	SEGMENT
__Mbst$ = -8						; size = 4
__Wc$ = -4						; size = 2
__Byte$ = 8						; size = 1
?_Dowiden@?$ctype@_W@std@@IBE_WD@Z PROC			; std::ctype<wchar_t>::_Dowiden, COMDAT
; _this$ = ecx
; Line 2645
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2649
	add	ecx, 24					; 00000018H
	push	ecx
	lea	eax, DWORD PTR __Mbst$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR __Byte$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Wc$[ebp]
	push	edx
	mov	DWORD PTR __Mbst$[ebp], 0
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, 65535				; 0000ffffH
	js	SHORT $LN4@Dowiden
	movzx	eax, WORD PTR __Wc$[ebp]
$LN4@Dowiden:
; Line 2650
	mov	esp, ebp
	pop	ebp
	ret	4
?_Dowiden@?$ctype@_W@std@@IBE_WD@Z ENDP			; std::ctype<wchar_t>::_Dowiden
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_toupper@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z PROC	; std::ctype<wchar_t>::do_toupper, COMDAT
; _this$ = ecx
; Line 2637
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2639
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_toupper
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_toupper:
; Line 2640
	movzx	eax, WORD PTR [esi]
	push	edi
	push	eax
	call	__Towupper
	mov	WORD PTR [esi], ax
	add	esi, 2
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_toupper
	pop	edi
$LN8@do_toupper:
; Line 2641
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2642
	pop	ebp
	ret	8
?do_toupper@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z ENDP	; std::ctype<wchar_t>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@_W@std@@MBE_W_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 2
?do_toupper@?$ctype@_W@std@@MBE_W_W@Z PROC		; std::ctype<wchar_t>::do_toupper, COMDAT
; _this$ = ecx
; Line 2631
	push	ebp
	mov	ebp, esp
; Line 2632
	mov	eax, DWORD PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Towupper
	add	esp, 8
; Line 2633
	pop	ebp
	ret	4
?do_toupper@?$ctype@_W@std@@MBE_W_W@Z ENDP		; std::ctype<wchar_t>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_tolower@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z PROC	; std::ctype<wchar_t>::do_tolower, COMDAT
; _this$ = ecx
; Line 2623
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2625
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_tolower
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_tolower:
; Line 2626
	movzx	eax, WORD PTR [esi]
	push	edi
	push	eax
	call	__Towlower
	mov	WORD PTR [esi], ax
	add	esi, 2
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_tolower
	pop	edi
$LN8@do_tolower:
; Line 2627
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2628
	pop	ebp
	ret	8
?do_tolower@?$ctype@_W@std@@MBEPB_WPA_WPB_W@Z ENDP	; std::ctype<wchar_t>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@_W@std@@MBE_W_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 2
?do_tolower@?$ctype@_W@std@@MBE_W_W@Z PROC		; std::ctype<wchar_t>::do_tolower, COMDAT
; _this$ = ecx
; Line 2617
	push	ebp
	mov	ebp, esp
; Line 2618
	mov	eax, DWORD PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Towlower
	add	esp, 8
; Line 2619
	pop	ebp
	ret	4
?do_tolower@?$ctype@_W@std@@MBE_W_W@Z ENDP		; std::ctype<wchar_t>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@_W@std@@MBEPB_WPB_W0PAF@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?do_is@?$ctype@_W@std@@MBEPB_WPB_W0PAF@Z PROC		; std::ctype<wchar_t>::do_is, COMDAT
; _this$ = ecx
; Line 2592
	push	ebp
	mov	ebp, esp
; Line 2595
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp]
	push	eax
	push	ecx
	push	edx
	call	__Getwctypes
	add	esp, 16					; 00000010H
; Line 2596
	pop	ebp
	ret	12					; 0000000cH
?do_is@?$ctype@_W@std@@MBEPB_WPB_W0PAF@Z ENDP		; std::ctype<wchar_t>::do_is
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@_W@std@@MBE_NF_W@Z
_TEXT	SEGMENT
__Maskval$ = 8						; size = 2
__Ch$ = 12						; size = 2
?do_is@?$ctype@_W@std@@MBE_NF_W@Z PROC			; std::ctype<wchar_t>::do_is, COMDAT
; _this$ = ecx
; Line 2586
	push	ebp
	mov	ebp, esp
; Line 2587
	mov	eax, DWORD PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Getwctype
	add	esp, 8
	test	WORD PTR __Maskval$[ebp], ax
	mov	eax, 0
	setne	al
; Line 2588
	pop	ebp
	ret	8
?do_is@?$ctype@_W@std@@MBE_NF_W@Z ENDP			; std::ctype<wchar_t>::do_is
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?widen@?$ctype@_W@std@@QBE_WD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?widen@?$ctype@_W@std@@QBE_WD@Z PROC			; std::ctype<wchar_t>::widen, COMDAT
; _this$ = ecx
; Line 2526
	push	ebp
	mov	ebp, esp
; Line 2527
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+40]
; Line 2528
	pop	ebp
; Line 2527
	jmp	eax
?widen@?$ctype@_W@std@@QBE_WD@Z ENDP			; std::ctype<wchar_t>::widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?is@?$ctype@_W@std@@QBE_NF_W@Z
_TEXT	SEGMENT
__Maskval$ = 8						; size = 2
__Ch$ = 12						; size = 2
?is@?$ctype@_W@std@@QBE_NF_W@Z PROC			; std::ctype<wchar_t>::is, COMDAT
; _this$ = ecx
; Line 2483
	push	ebp
	mov	ebp, esp
; Line 2484
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
; Line 2485
	pop	ebp
; Line 2484
	jmp	eax
?is@?$ctype@_W@std@@QBE_NF_W@Z ENDP			; std::ctype<wchar_t>::is
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
__Dest$ = 20						; size = 4
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z PROC		; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx
; Line 2460
	push	ebp
	mov	ebp, esp
; Line 2463
	mov	eax, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	mov	ecx, esi
	sub	ecx, eax
	push	ecx
	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2464
	mov	eax, esi
	pop	esi
; Line 2465
	pop	ebp
	ret	16					; 00000010H
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z ENDP		; std::ctype<char>::do_narrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
___formal$ = 12						; size = 1
?do_narrow@?$ctype@D@std@@MBEDDD@Z PROC			; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx
; Line 2454
	push	ebp
	mov	ebp, esp
; Line 2455
	mov	al, BYTE PTR __Ch$[ebp]
; Line 2456
	pop	ebp
	ret	8
?do_narrow@?$ctype@D@std@@MBEDDD@Z ENDP			; std::ctype<char>::do_narrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z PROC		; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx
; Line 2446
	push	ebp
	mov	ebp, esp
; Line 2449
	mov	eax, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	mov	ecx, esi
	sub	ecx, eax
	push	ecx
	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2450
	mov	eax, esi
	pop	esi
; Line 2451
	pop	ebp
	ret	12					; 0000000cH
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z ENDP		; std::ctype<char>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?do_widen@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx
; Line 2440
	push	ebp
	mov	ebp, esp
; Line 2441
	mov	al, BYTE PTR __Byte$[ebp]
; Line 2442
	pop	ebp
	ret	4
?do_widen@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx
; Line 2432
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2434
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_toupper@2
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_toupper@2:
; Line 2435
	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Toupper
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_toupper@2
	pop	edi
$LN8@do_toupper@2:
; Line 2436
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2437
	pop	ebp
	ret	8
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_toupper@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx
; Line 2426
	push	ebp
	mov	ebp, esp
; Line 2427
	movzx	eax, BYTE PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Toupper
	add	esp, 8
; Line 2428
	pop	ebp
	ret	4
?do_toupper@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx
; Line 2418
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2420
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_tolower@2
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_tolower@2:
; Line 2421
	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Tolower
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_tolower@2
	pop	edi
$LN8@do_tolower@2:
; Line 2422
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2423
	pop	ebp
	ret	8
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_tolower@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx
; Line 2412
	push	ebp
	mov	ebp, esp
; Line 2413
	movzx	eax, BYTE PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Tolower
	add	esp, 8
; Line 2414
	pop	ebp
	ret	4
?do_tolower@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$ctype@D@std@@IAEXXZ PROC			; std::ctype<char>::_Tidy, COMDAT
; _this$ = ecx
; Line 2405
	mov	eax, DWORD PTR [ecx+20]
	test	eax, eax
	jle	SHORT $LN6@Tidy@2
; Line 2406
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	call	_free
	add	esp, 4
; Line 2409
	ret	0
$LN6@Tidy@2:
; Line 2407
	jns	SHORT $LN1@Tidy@2
; Line 2408
	mov	ecx, DWORD PTR [ecx+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN1@Tidy@2:
; Line 2409
	ret	0
?_Tidy@?$ctype@D@std@@IAEXXZ ENDP			; std::ctype<char>::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?widen@?$ctype@D@std@@QBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?widen@?$ctype@D@std@@QBEDD@Z PROC			; std::ctype<char>::widen, COMDAT
; _this$ = ecx
; Line 2324
	push	ebp
	mov	ebp, esp
; Line 2325
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
; Line 2326
	pop	ebp
; Line 2325
	jmp	eax
?widen@?$ctype@D@std@@QBEDD@Z ENDP			; std::ctype<char>::widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT
?is@?$ctype@D@std@@QBE_NFD@Z PROC			; std::ctype<char>::is, COMDAT
; _this$ = ecx
; __Ch$ = eax
; Line 2272
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, al
	test	BYTE PTR [edx+eax*2], 72		; 00000048H
	mov	eax, 0
	setne	al
; Line 2273
	ret	0
?is@?$ctype@D@std@@QBE_NFD@Z ENDP			; std::ctype<char>::is
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_encoding@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_encoding, COMDAT
; _this$ = ecx
; Line 787
	mov	eax, 1
; Line 788
	ret	0
?do_encoding@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_encoding
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_max_length@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_max_length, COMDAT
; _this$ = ecx
; Line 782
	mov	eax, 1
; Line 783
	ret	0
?do_max_length@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_max_length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT
?do_always_noconv@codecvt_base@std@@MBE_NXZ PROC	; std::codecvt_base::do_always_noconv, COMDAT
; _this$ = ecx
; Line 777
	mov	al, 1
; Line 778
	ret	0
?do_always_noconv@codecvt_base@std@@MBE_NXZ ENDP	; std::codecvt_base::do_always_noconv
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?always_noconv@codecvt_base@std@@QBE_NXZ
_TEXT	SEGMENT
?always_noconv@codecvt_base@std@@QBE_NXZ PROC		; std::codecvt_base::always_noconv, COMDAT
; _this$ = ecx
; Line 757
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	jmp	edx
?always_noconv@codecvt_base@std@@QBE_NXZ ENDP		; std::codecvt_base::always_noconv
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
; Line 438
	mov	ecx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR __Id$[ebp]
	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax+esi*4]
; Line 439
	test	eax, eax
	jne	SHORT $LN1@Getfacet
$LN10@Getfacet:
	cmp	BYTE PTR [ecx+20], 0
	je	SHORT $LN1@Getfacet
; Line 443
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 446
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+esi*4]
	pop	esi
; Line 448
	pop	ebp
	ret	4
$LN6@Getfacet:
; Line 438
	xor	eax, eax
; Line 439
	jmp	SHORT $LN10@Getfacet
$LN8@Getfacet:
; Line 446
	xor	eax, eax
$LN1@Getfacet:
	pop	esi
; Line 448
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@locale@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@locale@std@@QBEPBDXZ PROC			; std::locale::c_str, COMDAT
; _this$ = ecx
; Line 432
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	jne	SHORT $LN6@c_str@4
	lea	eax, DWORD PTR [ecx+28]
$LN6@c_str@4:
; Line 433
	ret	0
?c_str@locale@std@@QBEPBDXZ ENDP			; std::locale::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0facet@locale@std@@IAE@I@Z
_TEXT	SEGMENT
__Initrefs$ = 8						; size = 4
??0facet@locale@std@@IAE@I@Z PROC			; std::locale::facet::facet, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Initrefs$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7facet@locale@std@@6B@
	mov	DWORD PTR [eax+4], ecx
; Line 171
	pop	ebp
	ret	4
??0facet@locale@std@@IAE@I@Z ENDP			; std::locale::facet::facet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1facet@locale@std@@UAE@XZ
_TEXT	SEGMENT
??1facet@locale@std@@UAE@XZ PROC			; std::locale::facet::~facet, COMDAT
; _this$ = ecx
; Line 164
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
; Line 165
	ret	0
??1facet@locale@std@@UAE@XZ ENDP			; std::locale::facet::~facet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Register@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
?_Register@facet@locale@std@@QAEXXZ PROC		; std::locale::facet::_Register, COMDAT
; _this$ = ecx
; Line 133
	push	ecx
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	pop	ecx
; Line 135
	ret	0
?_Register@facet@locale@std@@QAEXXZ ENDP		; std::locale::facet::_Register
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Decref@facet@locale@std@@QAEPAV123@XZ
_TEXT	SEGMENT
__Lock$79639 = -4					; size = 4
?_Decref@facet@locale@std@@QAEPAV123@XZ PROC		; std::locale::facet::_Decref, COMDAT
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; Line 120
	push	0
	lea	ecx, DWORD PTR __Lock$79639[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 121
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN1@Decref
	cmp	eax, -1
	jae	SHORT $LN1@Decref
; Line 122
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN1@Decref:
; Line 123
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$79639[ebp]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	edi
	mov	eax, esi
	pop	esi
; Line 125
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@facet@locale@std@@QAEPAV123@XZ ENDP		; std::locale::facet::_Decref
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Incref@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$79634 = -4					; size = 4
?_Incref@facet@locale@std@@QAEXXZ PROC			; std::locale::facet::_Incref, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 112
	push	0
	lea	ecx, DWORD PTR __Lock$79634[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 113
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN1@Incref
; Line 114
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN1@Incref:
; Line 115
	lea	ecx, DWORD PTR __Lock$79634[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	esi
; Line 116
	mov	esp, ebp
	pop	ebp
	ret	0
?_Incref@facet@locale@std@@QAEXXZ ENDP			; std::locale::facet::_Incref
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bid@locale@std@@QAEIXZ
_TEXT	SEGMENT
__Lock$79628 = -4					; size = 4
??Bid@locale@std@@QAEIXZ PROC				; std::locale::id::operator unsigned int, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 76
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN6@operator@2
; Line 78
	push	0
	lea	ecx, DWORD PTR __Lock$79628[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 79
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@operator@2
; Line 80
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR [esi], eax
$LN1@operator@2:
; Line 81
	lea	ecx, DWORD PTR __Lock$79628[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN6@operator@2:
; Line 83
	mov	eax, DWORD PTR [esi]
	pop	esi
; Line 84
	mov	esp, ebp
	pop	ebp
	ret	0
??Bid@locale@std@@QAEIXZ ENDP				; std::locale::id::operator unsigned int
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gettrue@_Locinfo@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Gettrue@_Locinfo@std@@QBEPBDXZ PROC			; std::_Locinfo::_Gettrue, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 171
	mov	eax, OFFSET ??_C@_04LOAJBDKD@true?$AA@
; Line 172
	ret	0
?_Gettrue@_Locinfo@std@@QBEPBDXZ ENDP			; std::_Locinfo::_Gettrue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getfalse@_Locinfo@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Getfalse@_Locinfo@std@@QBEPBDXZ PROC			; std::_Locinfo::_Getfalse, COMDAT
; Line 166
	mov	eax, OFFSET ??_C@_05LAPONLG@false?$AA@
; Line 167
	ret	0
?_Getfalse@_Locinfo@std@@QBEPBDXZ ENDP			; std::_Locinfo::_Getfalse
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getlconv@_Locinfo@std@@QBEPBUlconv@@XZ
_TEXT	SEGMENT
?_Getlconv@_Locinfo@std@@QBEPBUlconv@@XZ PROC		; std::_Locinfo::_Getlconv, COMDAT
; Line 128
	jmp	_localeconv
?_Getlconv@_Locinfo@std@@QBEPBUlconv@@XZ ENDP		; std::_Locinfo::_Getlconv
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ PROC		; std::_Locinfo::_Getcvt, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
; Line 123
	call	__Getcvt
	mov	ecx, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 124
	pop	ebp
	ret	4
?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ ENDP		; std::_Locinfo::_Getcvt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T98345 = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
; Line 118
	lea	eax, DWORD PTR $T98345[ebp]
	sub	esp, 20					; 00000014H
	push	eax
	call	__Getctype
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
	add	esp, 4
	mov	eax, ecx
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1_Locinfo@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4
__ehfuncinfo$??1_Locinfo@std@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1_Locinfo@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1_Locinfo@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Locinfo@std@@QAE@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Locinfo@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; Line 94
	push	esi
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 95
	mov	eax, DWORD PTR [esi+28]
	xor	edi, edi
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN10@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN10@Locinfo:
	mov	DWORD PTR [esi+28], edi
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	je	SHORT $LN15@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN15@Locinfo:
	mov	DWORD PTR [esi+20], edi
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, edi
	je	SHORT $LN20@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN20@Locinfo:
	mov	DWORD PTR [esi+12], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, edi
	je	SHORT $LN25@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN25@Locinfo:
	mov	ecx, esi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__ehhandler$??1_Locinfo@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Locinfo@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Locinfo@std@@QAE@XZ ENDP				; std::_Locinfo::~_Locinfo
; Function compile flags: /Ogtp
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN7@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\stdexcept
; Line 170
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
; Line 171
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 49
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 563
	or	eax, -1
; Line 564
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
; Line 558
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+1]
	neg	eax
	sbb	eax, eax
	and	eax, ecx
; Line 559
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
; Line 554
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; Line 546
	push	ebp
	mov	ebp, esp
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 543
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; __Left$ = ecx
; Line 532
	xor	eax, eax
	cmp	BYTE PTR [ecx], 46			; 0000002eH
	sete	al
; Line 533
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [edx], cl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 521
	push	ebp
	mov	ebp, esp
; Line 522
	mov	eax, DWORD PTR __Count$[ebp]
	movsx	ecx, BYTE PTR __Ch$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	push	ecx
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 523
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 518
	pop	ebp
; Line 517
	jmp	_memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 498
	pop	ebp
; Line 497
	jmp	_memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	7
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; __First1$ = edx
; __First2$ = ecx
; __Count$ = eax
; Line 485
	push	esi
	mov	esi, eax
	push	edi
; Line 486
	cmp	esi, 4
	jb	SHORT $LN11@compare
	npad	7
$LL4@compare:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN5@compare
	sub	esi, 4
	add	ecx, 4
	add	edx, 4
	cmp	esi, 4
	jae	SHORT $LL4@compare
$LN11@compare:
	test	esi, esi
	je	SHORT $LN6@compare
$LN5@compare:
	movzx	eax, BYTE PTR [edx]
	movzx	edi, BYTE PTR [ecx]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 1
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+1]
	movzx	edi, BYTE PTR [ecx+1]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 2
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+2]
	movzx	edi, BYTE PTR [ecx+2]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 3
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@compare:
	sar	eax, 31					; 0000001fH
	pop	edi
	or	eax, 1
	pop	esi
; Line 487
	ret	0
$LN6@compare:
	pop	edi
; Line 486
	xor	eax, eax
	pop	esi
; Line 487
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT
; Line 369
	mov	eax, 65535				; 0000ffffH
; Line 370
	ret	0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT
; Line 358
	push	ebp
	mov	ebp, esp
; Line 359
	mov	eax, DWORD PTR __Left$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	eax, eax
	cmp	cx, WORD PTR [edx]
	sete	al
; Line 360
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT
; Line 352
	push	ebp
	mov	ebp, esp
; Line 353
	mov	eax, DWORD PTR __Ch$[ebp]
	mov	ax, WORD PTR [eax]
; Line 354
	pop	ebp
	ret	0
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; __Left$ = edx
; __Right$ = eax
; Line 333
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx], cx
; Line 334
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT
_wmemset PROC						; COMDAT
; __S$ = eax
; __C$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\wchar.h
; Line 1237
	mov	WORD PTR [eax], cx
; Line 1240
	ret	0
_wmemset ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; Line 1210
	push	ebp
	mov	ebp, esp
; Line 1213
	mov	eax, DWORD PTR __N$[ebp]
	mov	edx, DWORD PTR __S2$[ebp]
	lea	ecx, DWORD PTR [eax+eax]
	mov	eax, DWORD PTR __S1$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1215
	pop	ebp
	ret	0
_wmemcpy ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\exception
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = eax
; __Right$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 402
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
; Line 403
	ret	0
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>, COMDAT
; __Off$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
; Line 885
	push	ebp
	mov	ebp, esp
; Line 894
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	add	DWORD PTR [eax], ecx
; Line 895
	pop	ebp
	ret	0
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z PROC ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>, COMDAT
; __Off$ = eax
; Line 909
	push	ebp
	mov	ebp, esp
; Line 910
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	add	DWORD PTR [eax], ecx
; Line 911
	pop	ebp
	ret	0
??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z ENDP ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==, COMDAT
; _this$ = eax
; __Right$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 214
	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
; Line 215
	ret	0
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=, COMDAT
; _this$ = eax
; __Right$ = edx
; Line 219
	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	setne	al
; Line 220
	ret	0
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=
_TEXT	ENDS
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z$0
__tryblocktable$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z$2
__ehfuncinfo$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z
_TEXT	SEGMENT
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z PROC	; std::numpunct<char>::_Init, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 133
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
; Line 134
	call	_localeconv
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 136
	xor	eax, eax
	mov	DWORD PTR [esi+8], eax
; Line 137
	mov	DWORD PTR [esi+16], eax
; Line 138
	mov	DWORD PTR [esi+20], eax
; Line 140
	mov	DWORD PTR __$EHRec$[ebp+12], eax
; Line 141
	mov	edi, OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	__Getcvt
	mov	ebx, 1
	push	ebx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	ecx, eax
	npad	2
$LL17@Init:
	test	ebx, ebx
	je	SHORT $LN15@Init
	mov	dl, BYTE PTR [edi]
	mov	BYTE PTR [ecx], dl
	dec	ebx
	inc	ecx
	inc	edi
	jmp	SHORT $LL17@Init
$LN15@Init:
	mov	DWORD PTR [esi+8], eax
; Line 143
	call	__Getcvt
	mov	ebx, 6
	push	ebx
	mov	edi, OFFSET ??_C@_05LAPONLG@false?$AA@
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	ecx, eax
	npad	6
$LL26@Init:
	test	ebx, ebx
	je	SHORT $LN24@Init
	mov	dl, BYTE PTR [edi]
	mov	BYTE PTR [ecx], dl
	dec	ebx
	inc	ecx
	inc	edi
	jmp	SHORT $LL26@Init
$LN24@Init:
	mov	DWORD PTR [esi+16], eax
; Line 144
	call	__Getcvt
	mov	ebx, 5
	push	ebx
	mov	edi, OFFSET ??_C@_04LOAJBDKD@true?$AA@
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	ecx, eax
	npad	6
$LL35@Init:
	test	ebx, ebx
	je	SHORT $LN33@Init
	mov	dl, BYTE PTR [edi]
	mov	BYTE PTR [ecx], dl
	dec	ebx
	inc	ecx
	inc	edi
	jmp	SHORT $LL35@Init
$LN33@Init:
	mov	DWORD PTR [esi+20], eax
; Line 150
	call	__Getcvt
	mov	edi, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [esi+12], cl
; Line 152
	call	__Getcvt
	mov	edx, DWORD PTR [edi+4]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [esi+13], al
; Line 154
	mov	al, 1
	test	al, al
	je	SHORT $LN1@Init
; Line 157
	call	__Getcvt
	mov	BYTE PTR [esi+12], 46			; 0000002eH
; Line 158
	call	__Getcvt
	mov	BYTE PTR [esi+13], 44			; 0000002cH
$LN1@Init:
; Line 160
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z$0:
; Line 146
	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$numpunct@D@std@@AAEXXZ		; std::numpunct<char>::_Tidy
; Line 147
	push	0
	push	0
	call	__CxxThrowException@8
$LN60@Init:
$LN59@Init:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z ENDP	; std::numpunct<char>::_Init
; Function compile flags: /Ogtp
;	COMDAT ?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init, COMDAT
; _this$ = esi
; Line 1067
	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx
; Line 1068
	ret	0
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z$0
__ehfuncinfo$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z PROC	; std::numpunct<char>::numpunct<char>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
; Line 106
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7?$numpunct@D@std@@6B@
	call	?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
; Line 107
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1facet@locale@std@@UAE@XZ		; std::locale::facet::~facet
__ehhandler$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$numpunct@D@std@@QAE@ABV_Locinfo@1@I_N@Z ENDP	; std::numpunct<char>::numpunct<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; _this$ = esi
; Line 1083
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
; Line 1084
	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx
; Line 1085
	mov	eax, esi
	ret	0
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
$T98745 = -16						; size = 12
$T98753 = -4						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT
; __Count$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 36
	cmp	eax, 2147483647				; 7fffffffH
	ja	SHORT $LN1@Allocate
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN7@Allocate
$LN1@Allocate:
; Line 37
	lea	ecx, DWORD PTR $T98753[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T98745[ebp]
	mov	DWORD PTR $T98753[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T98745[ebp]
	push	edx
	mov	DWORD PTR $T98745[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN14@Allocate:
$LN7@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@Allocate:
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T98758 = -12						; size = 12
$T98762 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@2
; Line 36
	cmp	ecx, -1
	ja	SHORT $LN1@Allocate@2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@2
$LN1@Allocate@2:
; Line 37
	lea	eax, DWORD PTR $T98762[ebp]
	push	eax
	lea	ecx, DWORD PTR $T98758[ebp]
	mov	DWORD PTR $T98762[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T98758[ebp]
	push	ecx
	mov	DWORD PTR $T98758[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@2:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
$T98774 = -16						; size = 12
$T98772 = -4						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; __Count$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 187
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, 2147483647				; 7fffffffH
	ja	SHORT $LN3@allocate
	lea	eax, DWORD PTR [ecx+ecx]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	ecx, DWORD PTR $T98772[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T98774[ebp]
	mov	DWORD PTR $T98772[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T98774[ebp]
	push	edx
	mov	DWORD PTR $T98774[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@allocate:
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T98797 = -12						; size = 12
$T98795 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@2
	cmp	ecx, -1
	ja	SHORT $LN3@allocate@2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@2
$LN3@allocate@2:
	lea	eax, DWORD PTR $T98795[ebp]
	push	eax
	lea	ecx, DWORD PTR $T98797[ebp]
	mov	DWORD PTR $T98795[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T98797[ebp]
	push	ecx
	mov	DWORD PTR $T98797[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@2:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1973
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1974
	mov	esi, DWORD PTR __Ptr$[ebp]
	test	esi, esi
	je	SHORT $LN2@Inside
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN8@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN9@Inside
$LN8@Inside:
	mov	eax, ecx
$LN9@Inside:
	cmp	esi, eax
	jb	SHORT $LN2@Inside
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN12@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN13@Inside
$LN12@Inside:
	mov	eax, ecx
$LN13@Inside:
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, eax
	cmp	ecx, esi
	jbe	SHORT $LN2@Inside
; Line 1977
	mov	al, 1
	pop	esi
; Line 1978
	pop	ebp
	ret	4
$LN2@Inside:
; Line 1975
	xor	al, al
	pop	esi
; Line 1978
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$numpunct@D@std@@MAE@XZ
_TEXT	SEGMENT
??1?$numpunct@D@std@@MAE@XZ PROC			; std::numpunct<char>::~numpunct<char>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 120
	push	esi
	mov	esi, ecx
; Line 121
	mov	eax, DWORD PTR [esi+8]
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7?$numpunct@D@std@@6B@
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	edx, DWORD PTR [esi+20]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 12					; 0000000cH
; Line 122
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
??1?$numpunct@D@std@@MAE@XZ ENDP			; std::numpunct<char>::~numpunct<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 98
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN1@Sentry_bas
; Line 99
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN1@Sentry_bas:
; Line 100
	ret	0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = esi
; __Ostr$ = eax
; Line 91
	mov	DWORD PTR [esi], eax
; Line 92
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas@2
; Line 93
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN8@Sentry_bas@2:
; Line 94
	mov	eax, esi
	ret	0
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = eax
; Line 98
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN1@Sentry_bas@3
; Line 99
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN1@Sentry_bas@3:
; Line 100
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = esi
; __Ostr$ = eax
; Line 91
	mov	DWORD PTR [esi], eax
; Line 92
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas@4
; Line 93
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN8@Sentry_bas@4:
; Line 94
	mov	eax, esi
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 50
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 53
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 54
	pop	ebp
	ret	8
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = eax
; __Newsize$ = ecx
; Line 1954
	xor	edx, edx
	cmp	DWORD PTR [eax+20], 8
	mov	DWORD PTR [eax+16], ecx
	jb	SHORT $LN5@Eos
	mov	eax, DWORD PTR [eax]
$LN5@Eos:
	mov	WORD PTR [eax+ecx*2], dx
; Line 1955
	ret	0
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 317
	lea	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+32], edx
; Line 318
	lea	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [ecx+36], edx
	lea	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+16], eax
; Line 319
	lea	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [ecx+48], edx
	lea	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [ecx+20], eax
; Line 320
	lea	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [ecx+52], edx
; Line 321
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 0
; Line 322
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], 0
; Line 323
	ret	0
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1953
	push	ebp
	mov	ebp, esp
; Line 1954
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jb	SHORT $LN5@Eos@2
	mov	ecx, DWORD PTR [ecx]
$LN5@Eos@2:
	mov	BYTE PTR [ecx+eax], 0
; Line 1955
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx
; Line 1911
	push	ebp
	mov	ebp, esp
; Line 1912
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, 1
	jne	SHORT $LN2@Chassign
; Line 1913
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN7@Chassign
	mov	ecx, DWORD PTR [ecx]
$LN7@Chassign:
	mov	al, BYTE PTR __Ch$[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 1916
	pop	ebp
	ret	12					; 0000000cH
$LN2@Chassign:
; Line 1915
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN13@Chassign
	mov	ecx, DWORD PTR [ecx]
$LN13@Chassign:
	add	ecx, DWORD PTR __Off$[ebp]
	push	eax
	movsx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1916
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ
_TEXT	SEGMENT
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1063
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 325
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 326
	pop	ebp
	ret	8
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 647
	mov	edx, DWORD PTR [ecx+16]
	push	esi
	mov	esi, DWORD PTR [edx]
	lea	eax, DWORD PTR [ecx+72]
	cmp	esi, eax
	je	SHORT $LN1@Set_back
; Line 649
	mov	DWORD PTR [ecx+60], esi
; Line 650
	mov	esi, DWORD PTR [ecx+48]
	mov	esi, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+32]
	add	esi, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [ecx+64], esi
$LN1@Set_back:
; Line 652
	mov	DWORD PTR [edx], eax
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	edx, ecx
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	add	edx, 73					; 00000049H
	mov	DWORD PTR [eax], edx
	pop	esi
; Line 653
	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = ecx
; Line 641
	mov	edx, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [ecx+72]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN6@Reset_back
; Line 642
	mov	eax, DWORD PTR [ecx+64]
	push	esi
	mov	esi, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx], esi
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR [ecx+48]
	sub	eax, eax
	mov	DWORD PTR [ecx], eax
	pop	esi
$LN6@Reset_back:
; Line 643
	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z
_TEXT	SEGMENT
__Newpcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx
; Line 628
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 629
	mov	edi, DWORD PTR __Newpcvt$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, ecx
	mov	ecx, edi
	call	edx
	test	al, al
	je	SHORT $LN2@Initcvt
; Line 630
	pop	edi
	mov	DWORD PTR [esi+68], 0
	pop	esi
; Line 636
	pop	ebp
	ret	4
$LN2@Initcvt:
; Line 633
	mov	DWORD PTR [esi+68], edi
; Line 634
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	pop	edi
	mov	DWORD PTR [ecx], 0
	pop	esi
; Line 636
	pop	ebp
	ret	4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA DD 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
; Function compile flags: /Ogtp
_BSS	ENDS
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 555
	push	ebp
	mov	ebp, esp
; Line 558
	cmp	DWORD PTR __Which$[ebp], 1
; Line 561
	lea	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+16], edx
	lea	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+32], edx
	lea	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [ecx+36], edx
	sete	al
	mov	BYTE PTR [ecx+80], al
	lea	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [ecx+48], edx
	mov	BYTE PTR [ecx+73], 0
	lea	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [ecx+20], eax
	lea	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [ecx+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], 0
; Line 570
	mov	eax, DWORD PTR __File$[ebp]
	test	eax, eax
	je	SHORT $LN10@Init@2
; Line 574
	lea	edx, DWORD PTR [eax+8]
; Line 578
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], edx
	lea	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+32], eax
	mov	DWORD PTR [ecx+36], eax
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], edx
$LN10@Init@2:
; Line 581
	mov	DWORD PTR [ecx+84], eax
; Line 582
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	DWORD PTR [ecx+76], edx
; Line 583
	mov	DWORD PTR [ecx+68], 0
; Line 584
	pop	ebp
	ret	8
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
_TEXT	SEGMENT
?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 196
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sputc
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sputc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+2]
	mov	DWORD PTR [ecx], edx
	mov	ecx, 10					; 0000000aH
	mov	WORD PTR [eax], cx
	mov	eax, ecx
; Line 197
	ret	0
$LN3@sputc:
; Line 196
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	push	10					; 0000000aH
	call	eax
	movzx	eax, ax
; Line 197
	ret	0
?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
_TEXT	SEGMENT
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT
; _this$ = ecx
; __Ch$ = edx
; Line 196
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sputc@2
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@sputc@2
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	push	esi
	lea	esi, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], esi
	mov	BYTE PTR [eax], dl
	movzx	eax, dl
	pop	esi
; Line 197
	ret	0
$LN3@sputc@2:
; Line 196
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	movzx	edx, dl
	push	edx
	call	eax
; Line 197
	ret	0
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc, COMDAT
; _this$ = ecx
; Line 147
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sbumpc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sbumpc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
; Line 148
	ret	0
$LN3@sbumpc:
; Line 147
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+28]
	jmp	edx
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 76
	mov	DWORD PTR [esi], OFFSET ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A ; std::cin
; Line 77
	mov	eax, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[ecx+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas@5
; Line 78
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN8@Sentry_bas@5:
; Line 79
	mov	eax, esi
	ret	0
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 167
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
; Line 169
	ret	0
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1988
	push	ebp
	mov	ebp, esp
; Line 1989
	cmp	BYTE PTR __Built$[ebp], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR __Newsize$[ebp]
	mov	esi, ecx
	je	SHORT $LN9@Tidy@3
; Line 1991
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN9@Tidy@3
; Line 1993
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1994
	test	edi, edi
	je	SHORT $LN7@Tidy@3
; Line 1995
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy@3:
; Line 1996
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN9@Tidy@3:
; Line 1999
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	BYTE PTR [edi+esi], 0
	pop	edi
	pop	esi
; Line 2000
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = edx
; __N0$ = eax
; __Ptr$ = ecx
; __Count$ = edi
; Line 1888
	push	esi
	mov	esi, eax
; Line 1896
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, esi
	jae	SHORT $LN1@compare@2
; Line 1897
	mov	esi, eax
$LN1@compare@2:
; Line 1900
	mov	eax, esi
	cmp	esi, edi
	jb	SHORT $LN6@compare@2
	mov	eax, edi
$LN6@compare@2:
	cmp	DWORD PTR [edx+20], 16			; 00000010H
	jb	SHORT $LN16@compare@2
	mov	edx, DWORD PTR [edx]
$LN16@compare@2:
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
; Line 1902
	test	eax, eax
	jne	SHORT $LN8@compare@2
	cmp	esi, edi
	jae	SHORT $LN7@compare@2
	or	eax, -1
	pop	esi
; Line 1903
	ret	0
$LN7@compare@2:
; Line 1902
	xor	eax, eax
	cmp	esi, edi
	setne	al
$LN8@compare@2:
	pop	esi
; Line 1903
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind, COMDAT
; _this$ = eax
; __Count$ = ebx
; Line 1659
	push	edi
	mov	edi, eax
; Line 1667
	mov	eax, DWORD PTR [edi+16]
	test	ebx, ebx
	jne	SHORT $LN8@rfind
	cmp	eax, -1
	jbe	SHORT $LN9@rfind
	or	eax, -1
	pop	edi
; Line 1682
	ret	0
$LN8@rfind:
	push	esi
; Line 1668
	cmp	ebx, eax
	ja	SHORT $LN27@rfind
; Line 1672
	sub	eax, ebx
	cmp	eax, -1
	jbe	SHORT $LN13@rfind
	or	eax, -1
$LN13@rfind:
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN17@rfind
	mov	ecx, DWORD PTR [edi]
	jmp	SHORT $LN18@rfind
$LN17@rfind:
	mov	ecx, edi
$LN18@rfind:
	lea	esi, DWORD PTR [ecx+eax]
$LL6@rfind:
; Line 1675
	cmp	BYTE PTR [esi], 46			; 0000002eH
	jne	SHORT $LN3@rfind
	mov	eax, ebx
	mov	ecx, OFFSET ??_C@_01LFCBOECM@?4?$AA@
	mov	edx, esi
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	je	SHORT $LN26@rfind
$LN3@rfind:
; Line 1677
	mov	ecx, edi
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	esi, eax
	je	SHORT $LN27@rfind
; Line 1673
	dec	esi
	jmp	SHORT $LL6@rfind
$LN26@rfind:
; Line 1676
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN23@rfind
	mov	edi, DWORD PTR [edi]
$LN23@rfind:
	mov	eax, esi
	pop	esi
	sub	eax, edi
	pop	edi
; Line 1682
	ret	0
$LN27@rfind:
; Line 1681
	or	eax, -1
	pop	esi
$LN9@rfind:
	pop	edi
; Line 1682
	ret	0
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; Line 1109
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1110
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR __Off$[ebp]
	push	edi
	cmp	eax, ecx
	jae	SHORT $LN3@erase
; Line 1111
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN28@erase:
$LN3@erase:
; Line 1112
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, edi
	jae	SHORT $LN2@erase
; Line 1113
	mov	edi, eax
$LN2@erase:
; Line 1114
	test	edi, edi
	je	SHORT $LN25@erase
; Line 1117
	mov	edx, DWORD PTR [esi+20]
	push	ebx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@erase
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	ebx, esi
$LN12@erase:
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@erase
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN16@erase
$LN15@erase:
	mov	edx, esi
$LN16@erase:
	sub	eax, edi
	add	ebx, ecx
	push	eax
	add	ebx, edi
	add	edx, ecx
	push	ebx
	push	edx
	call	_memmove
; Line 1118
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	eax, edi
; Line 1119
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], eax
	pop	ebx
	jb	SHORT $LN23@erase
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+eax], 0
	pop	edi
; Line 1121
	mov	eax, esi
	pop	esi
; Line 1122
	pop	ebp
	ret	8
; Line 1119
$LN23@erase:
	mov	ecx, esi
	mov	BYTE PTR [ecx+eax], 0
$LN25@erase:
; Line 1121
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1122
	pop	ebp
	ret	8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 543
	push	esi
	mov	esi, ecx
; Line 546
	cmp	DWORD PTR [esi+84], 0
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	call	edx
	cmp	eax, -1
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	_fflush
	add	esp, 4
	test	eax, eax
	jns	SHORT $LN3@sync
	or	eax, -1
	pop	esi
; Line 547
	ret	0
$LN3@sync:
; Line 546
	xor	eax, eax
	pop	esi
; Line 547
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, ecx
; Line 533
	mov	ecx, DWORD PTR [edi+84]
	test	ecx, ecx
	je	SHORT $LN2@setbuf
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	test	edx, edx
	jne	SHORT $LN6@setbuf
	mov	eax, esi
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN6@setbuf
	mov	eax, 4
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	xor	eax, eax
$LN7@setbuf:
	push	esi
	push	eax
	push	edx
	push	ecx
	call	_setvbuf
	add	esp, 16					; 00000010H
	pop	esi
	test	eax, eax
	jne	SHORT $LN2@setbuf
; Line 537
	mov	ecx, DWORD PTR [edi+84]
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 538
	mov	eax, edi
	pop	edi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
$LN2@setbuf:
; Line 534
	xor	eax, eax
	pop	edi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; Line 408
	push	esi
	mov	esi, ecx
; Line 411
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@underflow
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, ecx
	add	edx, eax
	cmp	eax, edx
	jae	SHORT $LN4@underflow
; Line 412
	movzx	eax, BYTE PTR [ecx]
	pop	esi
; Line 420
	ret	0
$LN4@underflow:
; Line 413
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	push	edi
	mov	ecx, esi
	call	edx
	mov	edi, eax
	cmp	edi, -1
	jne	SHORT $LN2@underflow
; Line 414
	pop	edi
	or	eax, eax
	pop	esi
; Line 420
	ret	0
$LN2@underflow:
; Line 417
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	push	edi
	mov	ecx, esi
	call	edx
; Line 418
	mov	eax, edi
	pop	edi
	pop	esi
; Line 420
	ret	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 388
	mov	ebx, DWORD PTR __Meta$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN10@pbackfail
	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx], eax
	jae	SHORT $LN10@pbackfail
	cmp	ebx, -1
	je	SHORT $LN9@pbackfail
	movzx	edx, BYTE PTR [eax-1]
	cmp	edx, ebx
	jne	SHORT $LN10@pbackfail
$LN9@pbackfail:
; Line 390
	mov	eax, DWORD PTR [esi+48]
	inc	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	dec	DWORD PTR [esi]
; Line 391
	lea	eax, DWORD PTR [ebx+1]
	neg	eax
	sbb	eax, eax
	pop	esi
	and	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN10@pbackfail:
; Line 393
	mov	eax, DWORD PTR [esi+84]
	test	eax, eax
	je	SHORT $LN6@pbackfail
	cmp	ebx, -1
	je	SHORT $LN6@pbackfail
; Line 395
	cmp	DWORD PTR [esi+68], 0
	jne	SHORT $LN4@pbackfail
	push	eax
	movzx	eax, bl
	push	eax
	call	_ungetc
	add	esp, 8
	cmp	eax, -1
; Line 396
	jne	SHORT $LN55@pbackfail
$LN4@pbackfail:
; Line 397
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN6@pbackfail
; Line 400
	mov	ecx, esi
	mov	BYTE PTR [eax], bl
	call	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
$LN55@pbackfail:
; Line 401
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN6@pbackfail:
	pop	esi
; Line 394
	or	eax, -1
	pop	ebx
; Line 405
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
_TEXT	SEGMENT
__Copied$ = -8						; size = 8
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 393
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 396
	xor	eax, eax
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __Copied$[esp+24], eax
	mov	DWORD PTR __Copied$[esp+28], eax
	cmp	DWORD PTR __Count$[ebp+4], eax
	jl	$LN27@xsputn
	jg	SHORT $LL7@xsputn
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	$LN27@xsputn
	npad	4
$LL7@xsputn:
; Line 397
	mov	ecx, ebx
	call	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
	mov	edi, edx
	mov	esi, eax
	test	edi, edi
	jl	SHORT $LN5@xsputn
	jg	SHORT $LN25@xsputn
	test	esi, esi
	je	SHORT $LN5@xsputn
$LN25@xsputn:
; Line 399
	mov	eax, DWORD PTR __Count$[ebp+4]
	cmp	eax, edi
	jg	SHORT $LN4@xsputn
	jl	SHORT $LN26@xsputn
	cmp	DWORD PTR __Count$[ebp], esi
	jae	SHORT $LN4@xsputn
$LN26@xsputn:
; Line 400
	mov	esi, DWORD PTR __Count$[ebp]
	mov	edi, eax
$LN4@xsputn:
; Line 401
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [ebx+36]
	mov	edx, DWORD PTR [ecx]
	push	esi
	push	eax
	push	edx
	call	_memcpy
; Line 402
	add	DWORD PTR __Ptr$[ebp], esi
; Line 405
	mov	eax, DWORD PTR [ebx+52]
	add	esp, 12					; 0000000cH
	add	DWORD PTR __Copied$[esp+24], esi
	adc	DWORD PTR __Copied$[esp+28], edi
	sub	DWORD PTR __Count$[ebp], esi
	sbb	DWORD PTR __Count$[ebp+4], edi
	sub	DWORD PTR [eax], esi
	mov	eax, DWORD PTR [ebx+36]
	add	DWORD PTR [eax], esi
; Line 407
	jmp	SHORT $LN1@xsputn
$LN5@xsputn:
; Line 408
	mov	eax, DWORD PTR __Ptr$[ebp]
	movzx	eax, BYTE PTR [eax]
	mov	edx, DWORD PTR [ebx]
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, ebx
	call	eax
	or	ecx, -1
	cmp	eax, ecx
	je	SHORT $LN27@xsputn
; Line 412
	mov	eax, 1
	add	DWORD PTR __Ptr$[ebp], eax
; Line 413
	add	DWORD PTR __Copied$[esp+24], eax
	adc	DWORD PTR __Copied$[esp+28], 0
; Line 414
	add	DWORD PTR __Count$[ebp], ecx
	adc	DWORD PTR __Count$[ebp+4], ecx
$LN1@xsputn:
; Line 396
	cmp	DWORD PTR __Count$[ebp+4], 0
	jg	$LL7@xsputn
	jl	SHORT $LN27@xsputn
	cmp	DWORD PTR __Count$[ebp], 0
	ja	$LL7@xsputn
$LN27@xsputn:
; Line 417
	mov	eax, DWORD PTR __Copied$[esp+24]
	mov	edx, DWORD PTR __Copied$[esp+28]
; Line 418
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
_TEXT	SEGMENT
__Copied$ = -8						; size = 8
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn, COMDAT
; _this$ = ecx
; Line 364
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 368
	xor	eax, eax
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __Copied$[esp+24], eax
	mov	DWORD PTR __Copied$[esp+28], eax
	cmp	DWORD PTR __Count$[ebp+4], eax
	jl	$LN27@xsgetn
	jg	SHORT $LL7@xsgetn
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	$LN27@xsgetn
	npad	4
$LL7@xsgetn:
; Line 369
	mov	ecx, ebx
	call	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
	mov	edi, edx
	mov	esi, eax
	test	edi, edi
	jl	SHORT $LN5@xsgetn
	jg	SHORT $LN25@xsgetn
	test	esi, esi
	je	SHORT $LN5@xsgetn
$LN25@xsgetn:
; Line 371
	mov	eax, DWORD PTR __Count$[ebp+4]
	cmp	eax, edi
	jg	SHORT $LN4@xsgetn
	jl	SHORT $LN26@xsgetn
	cmp	DWORD PTR __Count$[ebp], esi
	jae	SHORT $LN4@xsgetn
$LN26@xsgetn:
; Line 372
	mov	esi, DWORD PTR __Count$[ebp]
	mov	edi, eax
$LN4@xsgetn:
; Line 373
	mov	eax, DWORD PTR [ebx+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	ecx
	push	edx
	call	_memcpy
; Line 374
	add	DWORD PTR __Ptr$[ebp], esi
; Line 377
	mov	eax, DWORD PTR [ebx+48]
	add	esp, 12					; 0000000cH
	add	DWORD PTR __Copied$[esp+24], esi
	adc	DWORD PTR __Copied$[esp+28], edi
	sub	DWORD PTR __Count$[ebp], esi
	sbb	DWORD PTR __Count$[ebp+4], edi
	sub	DWORD PTR [eax], esi
	mov	eax, DWORD PTR [ebx+32]
	add	DWORD PTR [eax], esi
	jmp	SHORT $LN1@xsgetn
$LN5@xsgetn:
; Line 379
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+28]
	mov	ecx, ebx
	call	edx
	or	edx, -1
	cmp	eax, edx
	je	SHORT $LN27@xsgetn
; Line 383
	mov	ecx, DWORD PTR __Ptr$[ebp]
	inc	ecx
; Line 384
	add	DWORD PTR __Copied$[esp+24], 1
	mov	BYTE PTR [ecx-1], al
	mov	DWORD PTR __Ptr$[ebp], ecx
	adc	DWORD PTR __Copied$[esp+28], 0
; Line 385
	add	DWORD PTR __Count$[ebp], edx
	adc	DWORD PTR __Count$[ebp+4], edx
$LN1@xsgetn:
; Line 368
	cmp	DWORD PTR __Count$[ebp+4], 0
	jg	$LL7@xsgetn
	jl	SHORT $LN27@xsgetn
	cmp	DWORD PTR __Count$[ebp], 0
	ja	$LL7@xsgetn
$LN27@xsgetn:
; Line 388
	mov	eax, DWORD PTR __Copied$[esp+24]
	mov	edx, DWORD PTR __Copied$[esp+28]
; Line 389
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; Line 357
	push	esi
	mov	esi, ecx
; Line 359
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN3@uflow
	or	eax, eax
	pop	esi
; Line 360
	ret	0
$LN3@uflow:
; Line 359
	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	pop	esi
; Line 360
	ret	0
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; Line 353
	or	eax, -1
; Line 354
	ret	0
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; Line 343
	or	eax, -1
; Line 344
	ret	4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; Line 338
	or	eax, -1
; Line 339
	ret	4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sgetc, COMDAT
; _this$ = ecx
; Line 153
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sgetc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sgetc
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
; Line 154
	ret	0
$LN3@sgetc:
; Line 153
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	jmp	eax
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 83
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN1@Sentry_bas@6
; Line 84
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN1@Sentry_bas@6:
; Line 85
	ret	0
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 38
	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = edi
; __Ptr$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1875
	push	ebx
; Line 1877
	mov	eax, ecx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL23@compare@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL23@compare@3
	sub	eax, esi
	mov	esi, DWORD PTR [edi+16]
	mov	ebx, eax
	mov	eax, esi
	cmp	esi, ebx
	jb	SHORT $LN10@compare@3
	mov	eax, ebx
$LN10@compare@3:
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN20@compare@3
	mov	edx, DWORD PTR [edi]
	jmp	SHORT $LN21@compare@3
$LN20@compare@3:
	mov	edx, edi
$LN21@compare@3:
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	jne	SHORT $LN12@compare@3
	cmp	esi, ebx
	jae	SHORT $LN11@compare@3
	pop	esi
	or	eax, -1
	pop	ebx
; Line 1878
	ret	0
; Line 1877
$LN11@compare@3:
	xor	eax, eax
	cmp	esi, ebx
	setne	al
$LN12@compare@3:
; Line 1878
	pop	esi
	pop	ebx
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z
_TEXT	SEGMENT
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind, COMDAT
; _this$ = eax
; Line 1685
	push	ebx
; Line 1687
	mov	ebx, 1
	call	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
	pop	ebx
; Line 1688
	ret	0
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax
; Line 1362
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN5@end
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, edx
	mov	DWORD PTR [eax], ecx
; Line 1363
	ret	0
; Line 1362
$LN5@end:
	mov	edx, ecx
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, edx
	mov	DWORD PTR [eax], ecx
; Line 1363
	ret	0
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx
; Line 1351
	push	ebp
	mov	ebp, esp
; Line 1352
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jb	SHORT $LN5@begin
	mov	ecx, DWORD PTR [ecx]
$LN5@begin:
	mov	DWORD PTR [eax], ecx
; Line 1353
	pop	ebp
	ret	4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 753
	push	esi
	mov	esi, ecx
; Line 754
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN11@basic_stri
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@basic_stri:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 755
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	mov	eax, ecx
; Line 551
	mov	DWORD PTR [eax+20], 15			; 0000000fH
	mov	DWORD PTR [eax+16], 0
	mov	BYTE PTR [eax], 0
; Line 552
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Update@MD5@@QAEXPAEI@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_input$ = 8						; size = 4
?Update@MD5@@QAEXPAEI@Z PROC				; MD5::Update, COMDAT
; _this$ = esi
; _inputLen$ = eax
; File c:\users\javis\documents\github\autoscan\launcher\launcher\md5.h
; Line 261
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 265
	mov	ecx, DWORD PTR [esi+16]
	push	ebx
	push	edi
	mov	edi, eax
	mov	eax, ecx
	shr	eax, 3
; Line 269
	lea	ecx, DWORD PTR [ecx+edi*8]
	lea	edx, DWORD PTR [edi*8]
	and	eax, 63					; 0000003fH
	mov	DWORD PTR [esi+16], ecx
	cmp	ecx, edx
	jae	SHORT $LN6@Update
; Line 270
	inc	DWORD PTR [esi+20]
$LN6@Update:
; Line 271
	mov	ecx, edi
	shr	ecx, 29					; 0000001dH
	add	DWORD PTR [esi+20], ecx
; Line 273
	mov	ebx, 64					; 00000040H
	sub	ebx, eax
; Line 276
	cmp	edi, ebx
	jb	SHORT $LN5@Update
; Line 277
	mov	edx, DWORD PTR _input$[ebp]
	push	ebx
	push	edx
	lea	eax, DWORD PTR [eax+esi+24]
	push	eax
	call	_memcpy
; Line 278
	lea	ecx, DWORD PTR [esi+24]
	push	ecx
	mov	ecx, esi
	call	?MD5Transform@MD5@@CAXQAKQAE@Z		; MD5::MD5Transform
; Line 280
	mov	DWORD PTR _i$[ebp], ebx
	add	ebx, 63					; 0000003fH
	add	esp, 16					; 00000010H
	cmp	ebx, edi
	jae	SHORT $LN2@Update
$LL4@Update:
	mov	edx, DWORD PTR _input$[ebp]
	lea	eax, DWORD PTR [edx+ebx-63]
; Line 281
	push	eax
	mov	ecx, esi
	call	?MD5Transform@MD5@@CAXQAKQAE@Z		; MD5::MD5Transform
	add	DWORD PTR _i$[ebp], 64			; 00000040H
	add	ebx, 64					; 00000040H
	add	esp, 4
	cmp	ebx, edi
	jb	SHORT $LL4@Update
$LN2@Update:
; Line 283
	xor	eax, eax
; Line 285
	jmp	SHORT $LN1@Update
$LN5@Update:
; Line 286
	mov	DWORD PTR _i$[ebp], 0
$LN1@Update:
; Line 289
	mov	ecx, DWORD PTR _i$[ebp]
	sub	edi, ecx
	add	ecx, DWORD PTR _input$[ebp]
	push	edi
	push	ecx
	lea	eax, DWORD PTR [eax+esi+24]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	pop	edi
	pop	ebx
; Line 290
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@MD5@@QAEXPAEI@Z ENDP				; MD5::Update
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN4@sentry
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN4@sentry:
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gios_base@std@@UAEPAXI@Z PROC			; std::ios_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gios_base@std@@UAEPAXI@Z ENDP			; std::ios_base::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0system_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0system_error@std@@QAE@ABV01@@Z PROC			; std::system_error::system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	push	edi
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [esi+16], ecx
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0system_error@std@@QAE@ABV01@@Z ENDP			; std::system_error::system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
?fail@ios_base@std@@QBE_NXZ PROC			; std::ios_base::fail, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 369
	test	BYTE PTR [eax+12], 6
	mov	eax, 0
	setne	al
; Line 370
	ret	0
?fail@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::fail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
?good@ios_base@std@@QBE_NXZ PROC			; std::ios_base::good, COMDAT
; _this$ = ecx
; Line 358
	xor	eax, eax
	cmp	DWORD PTR [ecx+12], eax
	sete	al
; Line 359
	ret	0
?good@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::good
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1system_error@std@@UAE@XZ
_TEXT	SEGMENT
??1system_error@std@@UAE@XZ PROC			; std::system_error::~system_error, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1system_error@std@@UAE@XZ ENDP			; std::system_error::~system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gsystem_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gsystem_error@std@@UAEPAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN10@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@3:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gsystem_error@std@@UAEPAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0system_error@std@@QAE@Verror_code@1@PBD@Z
_TEXT	SEGMENT
__Errcode$ = 8						; size = 8
$T99822 = 16						; size = 4
__Message$ = 16						; size = 4
??0system_error@std@@QAE@Verror_code@1@PBD@Z PROC	; std::system_error::system_error, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\system_error
; Line 516
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Message$[ebp]
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR $T99822[ebp]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T99822[ebp], eax
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	eax, DWORD PTR __Errcode$[ebp+4]
	mov	edx, DWORD PTR __Errcode$[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	DWORD PTR [esi+12], edx
; Line 518
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	12					; 0000000cH
??0system_error@std@@QAE@Verror_code@1@PBD@Z ENDP	; std::system_error::system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Errno$ = 12						; size = 4
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z PROC ; std::make_error_code, COMDAT
; Line 446
	push	ebp
	mov	ebp, esp
; Line 447
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	mov	edx, DWORD PTR __Errno$[ebp]
	mov	ecx, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
; Line 448
	pop	ebp
	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ENDP ; std::make_error_code
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_narrow@?$ctype@_W@std@@MBEPB_WPB_W0DPAD@Z
_TEXT	SEGMENT
tv131 = -20						; size = 4
__Mbst$99840 = -16					; size = 4
__Buf$99839 = -12					; size = 5
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dflt$ = 16						; size = 1
__Dest$ = 20						; size = 4
?do_narrow@?$ctype@_W@std@@MBEPB_WPB_W0DPAD@Z PROC	; std::ctype<wchar_t>::do_narrow, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 2682
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
; Line 2685
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, ebx
	je	SHORT $LN12@do_narrow
; Line 2686
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv131[ebp], ecx
$LL13@do_narrow:
	mov	ecx, DWORD PTR tv131[ebp]
	movzx	eax, WORD PTR [esi]
	push	ecx
	lea	edx, DWORD PTR __Mbst$99840[ebp]
	push	edx
	push	eax
	lea	eax, DWORD PTR __Buf$99839[ebp]
	push	eax
	mov	DWORD PTR __Mbst$99840[ebp], 0
	call	__Wcrtomb
	add	esp, 16					; 00000010H
	cmp	eax, 1
	mov	al, BYTE PTR __Dflt$[ebp]
	jne	SHORT $LN9@do_narrow
	mov	al, BYTE PTR __Buf$99839[ebp]
$LN9@do_narrow:
	mov	BYTE PTR [edi], al
	add	esi, 2
	inc	edi
	cmp	esi, ebx
	jne	SHORT $LL13@do_narrow
$LN12@do_narrow:
; Line 2688
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	mov	eax, esi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?do_narrow@?$ctype@_W@std@@MBEPB_WPB_W0DPAD@Z ENDP	; std::ctype<wchar_t>::do_narrow
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_narrow@?$ctype@_W@std@@MBED_WD@Z
_TEXT	SEGMENT
__Mbst$99861 = -16					; size = 4
__Buf$99860 = -12					; size = 5
__$ArrayPad$ = -4					; size = 4
__Ch$ = 8						; size = 2
__Dflt$ = 12						; size = 1
?do_narrow@?$ctype@_W@std@@MBED_WD@Z PROC		; std::ctype<wchar_t>::do_narrow, COMDAT
; _this$ = ecx
; Line 2676
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2677
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR __Ch$[ebp]
	lea	eax, DWORD PTR __Mbst$99861[ebp]
	push	eax
	push	ecx
	lea	edx, DWORD PTR __Buf$99860[ebp]
	push	edx
	mov	DWORD PTR __Mbst$99861[ebp], 0
	call	__Wcrtomb
	add	esp, 16					; 00000010H
	cmp	eax, 1
	mov	al, BYTE PTR __Dflt$[ebp]
	jne	SHORT $LN6@do_narrow@2
	mov	al, BYTE PTR __Buf$99860[ebp]
$LN6@do_narrow@2:
; Line 2678
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?do_narrow@?$ctype@_W@std@@MBED_WD@Z ENDP		; std::ctype<wchar_t>::do_narrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@_W@std@@MBEPBDPBD0PA_W@Z
_TEXT	SEGMENT
tv131 = -4						; size = 4
$T99878 = 8						; size = 1
__First$ = 8						; size = 4
__Wc$99874 = 12						; size = 2
__Last$ = 12						; size = 4
__Mbst$99873 = 16					; size = 4
__Dest$ = 16						; size = 4
?do_widen@?$ctype@_W@std@@MBEPBDPBD0PA_W@Z PROC		; std::ctype<wchar_t>::do_widen, COMDAT
; _this$ = ecx
; Line 2659
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
; Line 2662
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN12@do_widen
; Line 2663
	add	ecx, 24					; 00000018H
	push	edi
	mov	edi, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR tv131[ebp], ecx
	npad	6
$LL13@do_widen:
	mov	ecx, DWORD PTR tv131[ebp]
	mov	al, BYTE PTR [esi]
	push	ecx
	lea	edx, DWORD PTR __Mbst$99873[ebp]
	push	edx
	mov	BYTE PTR $T99878[ebp], al
	push	1
	lea	eax, DWORD PTR $T99878[ebp]
	push	eax
	lea	ecx, DWORD PTR __Wc$99874[ebp]
	push	ecx
	mov	DWORD PTR __Mbst$99873[ebp], 0
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, 65535				; 0000ffffH
	js	SHORT $LN9@do_widen
	movzx	eax, WORD PTR __Wc$99874[ebp]
$LN9@do_widen:
	mov	WORD PTR [edi], ax
	inc	esi
	add	edi, 2
	cmp	esi, ebx
	jne	SHORT $LL13@do_widen
	pop	edi
$LN12@do_widen:
; Line 2664
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2665
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?do_widen@?$ctype@_W@std@@MBEPBDPBD0PA_W@Z ENDP		; std::ctype<wchar_t>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@_W@std@@MBE_WD@Z
_TEXT	SEGMENT
__Mbst$99889 = -8					; size = 4
__Wc$99890 = -4						; size = 2
$T99894 = 8						; size = 1
__Byte$ = 8						; size = 1
?do_widen@?$ctype@_W@std@@MBE_WD@Z PROC			; std::ctype<wchar_t>::do_widen, COMDAT
; _this$ = ecx
; Line 2653
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2654
	mov	al, BYTE PTR __Byte$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	ecx, DWORD PTR __Mbst$99889[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR $T99894[ebp]
	mov	BYTE PTR $T99894[ebp], al
	push	edx
	lea	eax, DWORD PTR __Wc$99890[ebp]
	push	eax
	mov	DWORD PTR __Mbst$99889[ebp], 0
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, 65535				; 0000ffffH
	js	SHORT $LN6@do_widen@2
	movzx	eax, WORD PTR __Wc$99890[ebp]
$LN6@do_widen@2:
; Line 2655
	mov	esp, ebp
	pop	ebp
	ret	4
?do_widen@?$ctype@_W@std@@MBE_WD@Z ENDP			; std::ctype<wchar_t>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_scan_not@?$ctype@_W@std@@MBEPB_WFPB_W0@Z
_TEXT	SEGMENT
__Maskval$ = 8						; size = 2
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?do_scan_not@?$ctype@_W@std@@MBEPB_WFPB_W0@Z PROC	; std::ctype<wchar_t>::do_scan_not, COMDAT
; _this$ = ecx
; Line 2609
	push	ebp
	mov	ebp, esp
	push	esi
; Line 2611
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, ecx
	cmp	esi, DWORD PTR __Last$[ebp]
	je	SHORT $LN10@do_scan_no
	push	ebx
	mov	ebx, DWORD PTR __Maskval$[ebp]
$LL3@do_scan_no:
	movzx	eax, WORD PTR [esi]
	mov	edx, DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	push	ebx
	mov	ecx, edi
	call	eax
	test	al, al
	je	SHORT $LN11@do_scan_no
	add	esi, 2
	cmp	esi, DWORD PTR __Last$[ebp]
	jne	SHORT $LL3@do_scan_no
$LN11@do_scan_no:
	pop	ebx
$LN10@do_scan_no:
	pop	edi
; Line 2613
	mov	eax, esi
	pop	esi
; Line 2614
	pop	ebp
	ret	12					; 0000000cH
?do_scan_not@?$ctype@_W@std@@MBEPB_WFPB_W0@Z ENDP	; std::ctype<wchar_t>::do_scan_not
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_scan_is@?$ctype@_W@std@@MBEPB_WFPB_W0@Z
_TEXT	SEGMENT
__Maskval$ = 8						; size = 2
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?do_scan_is@?$ctype@_W@std@@MBEPB_WFPB_W0@Z PROC	; std::ctype<wchar_t>::do_scan_is, COMDAT
; _this$ = ecx
; Line 2600
	push	ebp
	mov	ebp, esp
	push	esi
; Line 2602
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, ecx
	cmp	esi, DWORD PTR __Last$[ebp]
	je	SHORT $LN10@do_scan_is
	push	ebx
	mov	ebx, DWORD PTR __Maskval$[ebp]
$LL3@do_scan_is:
	movzx	eax, WORD PTR [esi]
	mov	edx, DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	push	ebx
	mov	ecx, edi
	call	eax
	test	al, al
	jne	SHORT $LN11@do_scan_is
	add	esi, 2
	cmp	esi, DWORD PTR __Last$[ebp]
	jne	SHORT $LL3@do_scan_is
$LN11@do_scan_is:
	pop	ebx
$LN10@do_scan_is:
	pop	edi
; Line 2604
	mov	eax, esi
	pop	esi
; Line 2605
	pop	ebp
	ret	12					; 0000000cH
?do_scan_is@?$ctype@_W@std@@MBEPB_WFPB_W0@Z ENDP	; std::ctype<wchar_t>::do_scan_is
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@_W@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
$T99927 = -16						; size = 16
__Lobj$ = 8						; size = 4
?_Init@?$ctype@_W@std@@IAEXABV_Locinfo@2@@Z PROC	; std::ctype<wchar_t>::_Init, COMDAT
; _this$ = ecx
; Line 2580
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	esi
; Line 2581
	lea	eax, DWORD PTR $T99927[esp+24]
	push	eax
	mov	esi, ecx
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], edx
; Line 2582
	call	__Getcvt
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], edx
; Line 2583
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$ctype@_W@std@@IAEXABV_Locinfo@2@@Z ENDP	; std::ctype<wchar_t>::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
$T99942 = -20						; size = 16
__Lobj$ = 8						; size = 4
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z PROC		; std::ctype<char>::_Init, COMDAT
; _this$ = ecx
; Line 2399
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; Line 2400
	lea	eax, DWORD PTR $T99942[ebp]
	push	eax
	mov	esi, ecx
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], edx
; Line 2401
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z ENDP		; std::ctype<char>::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ctype_base@std@@UAE@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; _this$ = ecx
; Line 2016
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1ctype_base@std@@UAE@XZ ENDP				; std::ctype_base::~ctype_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT
__Refs$ = 8						; size = 4
??0ctype_base@std@@QAE@I@Z PROC				; std::ctype_base::ctype_base, COMDAT
; _this$ = ecx
; Line 2011
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7ctype_base@std@@6B@
; Line 2012
	pop	ebp
	ret	4
??0ctype_base@std@@QAE@I@Z ENDP				; std::ctype_base::ctype_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT
??1codecvt_base@std@@UAE@XZ PROC			; std::codecvt_base::~codecvt_base, COMDAT
; _this$ = ecx
; Line 772
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1codecvt_base@std@@UAE@XZ ENDP			; std::codecvt_base::~codecvt_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT
__Refs$ = 8						; size = 4
??0codecvt_base@std@@QAE@I@Z PROC			; std::codecvt_base::codecvt_base, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7codecvt_base@std@@6B@
; Line 753
	pop	ebp
	ret	4
??0codecvt_base@std@@QAE@I@Z ENDP			; std::codecvt_base::codecvt_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gfacet@locale@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfacet@locale@std@@UAEPAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN6@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@4:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gfacet@locale@std@@UAEPAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$99982 = -4					; size = 4
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi
; Line 410
	mov	edi, DWORD PTR [ecx]
	test	edi, edi
	je	SHORT $LN4@locale
; Line 411
	push	0
	lea	ecx, DWORD PTR __Lock$99982[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN6@locale
	cmp	eax, -1
	jae	SHORT $LN6@locale
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN6@locale:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$99982[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN9@locale
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN9@locale:
	pop	esi
$LN4@locale:
	pop	edi
; Line 412
	mov	esp, ebp
	pop	ebp
	ret	0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$99991 = -4					; size = 4
??0locale@std@@QAE@XZ PROC				; std::locale::locale, COMDAT
; _this$ = ecx
; Line 315
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
; Line 316
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$99991[ebp]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN3@locale@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN3@locale@2:
	lea	ecx, DWORD PTR __Lock$99991[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 317
	mov	eax, edi
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0locale@std@@QAE@XZ ENDP				; std::locale::locale
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Lock$99999 = 8					; size = 4
__Right$ = 8						; size = 4
??0locale@std@@QAE@ABV01@@Z PROC			; std::locale::locale, COMDAT
; _this$ = ecx
; Line 309
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, ecx
; Line 310
	push	0
	lea	ecx, DWORD PTR __Lock$99999[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN3@locale@3
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN3@locale@3:
	lea	ecx, DWORD PTR __Lock$99999[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 311
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	ret	4
??0locale@std@@QAE@ABV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??0_Locinfo@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4
__ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0_Locinfo@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0_Locinfo@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T100004 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T100030 = 8						; size = 4
__Pch$ = 8						; size = 4
??0_Locinfo@std@@QAE@PBD@Z PROC				; std::_Locinfo::_Locinfo, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 76
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Locinfo@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	xor	ebx, ebx
	push	ebx
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	DWORD PTR [esi+4], ebx
	mov	BYTE PTR [esi+8], bl
	mov	DWORD PTR [esi+12], ebx
	mov	BYTE PTR [esi+16], bl
	mov	DWORD PTR [esi+20], ebx
	mov	BYTE PTR [esi+24], bl
	mov	DWORD PTR [esi+28], ebx
	mov	BYTE PTR [esi+32], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 77
	mov	eax, DWORD PTR __Pch$[ebp]
	cmp	eax, ebx
	jne	SHORT $LN1@Locinfo@2
; Line 78
	lea	eax, DWORD PTR $T100030[ebp]
	push	eax
	lea	ecx, DWORD PTR $T100004[ebp]
	mov	DWORD PTR $T100030[ebp], OFFSET ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T100004[ebp]
	push	ecx
	mov	DWORD PTR $T100004[ebp], OFFSET ??_7runtime_error@std@@6B@
	call	__CxxThrowException@8
$LN22@Locinfo@2:
$LN1@Locinfo@2:
; Line 79
	push	eax
	push	esi
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z ; std::_Locinfo::_Locinfo_ctor
	add	esp, 8
; Line 80
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@Locinfo@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__ehhandler$??0_Locinfo@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Locinfo@std@@QAE@PBD@Z ENDP				; std::_Locinfo::_Locinfo
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z
_TEXT	SEGMENT
?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; __First$ = eax
; __Ch$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
; Line 328
	mov	WORD PTR [eax], cx
; Line 329
	ret	0
?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z ENDP	; std::char_traits<wchar_t>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; Line 302
	push	ebp
	mov	ebp, esp
; Line 303
	mov	eax, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __First2$[ebp]
	lea	ecx, DWORD PTR [eax+eax]
	mov	eax, DWORD PTR __First1$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 304
	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@5:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z
_TEXT	SEGMENT
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign, COMDAT
; _this$ = eax
; __Off$ = edx
; __Ch$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1913
	cmp	DWORD PTR [eax+20], 8
	jb	SHORT $LN7@Chassign@2
	mov	eax, DWORD PTR [eax]
$LN7@Chassign@2:
	mov	WORD PTR [eax+edx*2], cx
; Line 1916
	ret	0
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
__Lobj$ = 8						; size = 4
__Refs$ = 12						; size = 4
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z PROC	; std::codecvt<char,char,int>::codecvt<char,char,int>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 843
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$codecvt@DDH@std@@6B@
; Line 845
	pop	ebp
	ret	8
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z ENDP	; std::codecvt<char,char,int>::codecvt<char,char,int>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
__ehfuncinfo$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T100121 = -56						; size = 36
$T100120 = -20						; size = 4
$T100125 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::numpunct<char>::_Getcat, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 111
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 112
	mov	eax, DWORD PTR __Ppf$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T100125[ebp], ebx
	test	eax, eax
	je	SHORT $LN23@Getcat
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN23@Getcat
; Line 114
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T100120[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx
	jne	SHORT $LN15@Getcat
	lea	ecx, DWORD PTR [eax+28]
$LN15@Getcat:
	push	ecx
	lea	ecx, DWORD PTR $T100121[ebp]
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	mov	ebx, 1
	mov	DWORD PTR $T100125[ebp], ebx
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7?$numpunct@D@std@@6B@
	call	?_Init@?$numpunct@D@std@@IAEXABV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
	jmp	SHORT $LN5@Getcat
$LN4@Getcat:
	xor	esi, esi
$LN5@Getcat:
	mov	ecx, DWORD PTR __Ppf$[ebp]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	test	bl, 1
	je	SHORT $LN23@Getcat
	lea	ecx, DWORD PTR $T100121[ebp]
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN23@Getcat:
; Line 115
	mov	eax, 4
; Line 116
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T100120[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1:
	mov	eax, DWORD PTR $T100125[ebp]
	and	eax, 1
	je	$LN8@Getcat
	and	DWORD PTR $T100125[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T100121[ebp]
	jmp	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN8@Getcat:
	ret	0
__unwindfunclet$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$2:
	mov	ecx, DWORD PTR $T100120[ebp]
	jmp	??1facet@locale@std@@UAE@XZ		; std::locale::facet::~facet
__ehhandler$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::numpunct<char>::_Getcat
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T100167 = -52						; size = 36
$T100171 = -16						; size = 4
$T100166 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::codecvt<char,char,int>::_Getcat, COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 850
	mov	eax, DWORD PTR __Ppf$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T100171[ebp], ebx
	test	eax, eax
	je	SHORT $LN26@Getcat@2
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN26@Getcat@2
; Line 852
	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T100166[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@2
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN14@Getcat@2
	mov	eax, ecx
	jmp	SHORT $LN15@Getcat@2
$LN14@Getcat@2:
	add	eax, 28					; 0000001cH
$LN15@Getcat@2:
	push	eax
	lea	ecx, DWORD PTR $T100167[ebp]
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	mov	ebx, 1
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$codecvt@DDH@std@@6B@
	jmp	SHORT $LN5@Getcat@2
$LN4@Getcat@2:
	xor	esi, esi
$LN5@Getcat@2:
	mov	ecx, DWORD PTR __Ppf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [ecx], esi
	test	bl, 1
	je	SHORT $LN26@Getcat@2
	lea	ecx, DWORD PTR $T100167[ebp]
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN26@Getcat@2:
; Line 853
	mov	eax, 2
; Line 854
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T100166[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::codecvt<char,char,int>::_Getcat
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocinfo
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T100223 = -52						; size = 36
$T100227 = -16						; size = 4
$T100222 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1051
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1052
	mov	eax, DWORD PTR __Ppf$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T100227[ebp], ebx
	test	eax, eax
	je	SHORT $LN26@Getcat@3
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN26@Getcat@3
; Line 1054
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T100222[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@3
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN14@Getcat@3
	mov	eax, ecx
	jmp	SHORT $LN15@Getcat@3
$LN14@Getcat@3:
	add	eax, 28					; 0000001cH
$LN15@Getcat@3:
	push	eax
	lea	ecx, DWORD PTR $T100223[ebp]
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	mov	ebx, 1
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx
	jmp	SHORT $LN5@Getcat@3
$LN4@Getcat@3:
	xor	esi, esi
$LN5@Getcat@3:
	mov	ecx, DWORD PTR __Ppf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [ecx], esi
	test	bl, 1
	je	SHORT $LN26@Getcat@3
	lea	ecx, DWORD PTR $T100223[ebp]
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN26@Getcat@3:
; Line 1055
	mov	eax, 4
; Line 1056
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T100222[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T100284 = -36						; size = 12
__Lock$92999 = -24					; size = 4
__Lock$100291 = -20					; size = 4
__Lock$100313 = -20					; size = 4
__Psave$93000 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::numpunct<char> >, COMDAT
; __Loc$ = edi
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$92999[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, 0 ; std::numpunct<char>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::numpunct<char> >::_Psave
	mov	DWORD PTR __Psave$93000[ebp], ebx
	jne	SHORT $LN11@use_facet
	push	0
	lea	ecx, DWORD PTR __Lock$100291[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, 0 ; std::numpunct<char>::id
	jne	SHORT $LN10@use_facet
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, eax ; std::numpunct<char>::id
$LN10@use_facet:
	lea	ecx, DWORD PTR __Lock$100291[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet:
	mov	esi, DWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
; Line 510
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet
$LN30@use_facet:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet
$LN20@use_facet:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet
$LN16@use_facet:
	mov	esi, ecx
$LN15@use_facet:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet
$LN31@use_facet:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet
$LN4@use_facet:
; Line 516
	lea	eax, DWORD PTR __Psave$93000[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$numpunct@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::numpunct<char>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T100284[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T100284[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet:
$LN2@use_facet:
; Line 528
	mov	esi, DWORD PTR __Psave$93000[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$100313[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::numpunct<char> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet:
	lea	ecx, DWORD PTR __Lock$100313[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet:
; Line 536
	lea	ecx, DWORD PTR __Lock$92999[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$92999[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::numpunct<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T100334 = -36						; size = 12
__Lock$92951 = -24					; size = 4
__Lock$100341 = -20					; size = 4
__Psave$92952 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Lock$100364 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,int> >, COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$92951[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	mov	DWORD PTR __Psave$92952[ebp], ebx
	jne	SHORT $LN11@use_facet@2
	push	0
	lea	ecx, DWORD PTR __Lock$100341[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	jne	SHORT $LN10@use_facet@2
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, eax ; std::codecvt<char,char,int>::id
$LN10@use_facet@2:
	lea	ecx, DWORD PTR __Lock$100341[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@2:
; Line 510
	mov	edi, DWORD PTR __Loc$[ebp]
	mov	esi, DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@2
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@2
$LN30@use_facet@2:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@2
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@2
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@2
$LN20@use_facet@2:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@2
$LN16@use_facet@2:
	mov	esi, ecx
$LN15@use_facet@2:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@2
$LN31@use_facet@2:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet@2
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@2
$LN4@use_facet@2:
; Line 516
	lea	eax, DWORD PTR __Psave$92952[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@2
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T100334[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T100334[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet@2:
$LN2@use_facet@2:
; Line 528
	mov	esi, DWORD PTR __Psave$92952[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$100364[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@2:
	lea	ecx, DWORD PTR __Lock$100364[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@2:
; Line 536
	lea	ecx, DWORD PTR __Lock$92951[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$92951[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,int> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T100384 = -36						; size = 12
__Lock$92915 = -24					; size = 4
__Lock$100392 = -20					; size = 4
__Lock$100414 = -20					; size = 4
__Psave$92916 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >, COMDAT
; __Loc$ = edi
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$92915[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, 0 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	mov	DWORD PTR __Psave$92916[ebp], ebx
	jne	SHORT $LN11@use_facet@3
	push	0
	lea	ecx, DWORD PTR __Lock$100392[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, 0 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	jne	SHORT $LN10@use_facet@3
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, eax ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN10@use_facet@3:
	lea	ecx, DWORD PTR __Lock$100392[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@3:
	mov	esi, DWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
; Line 510
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@3
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@3
$LN30@use_facet@3:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@3
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@3
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@3
$LN20@use_facet@3:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@3
$LN16@use_facet@3:
	mov	esi, ecx
$LN15@use_facet@3:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@3
$LN31@use_facet@3:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet@3
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@3
$LN4@use_facet@3:
; Line 516
	lea	eax, DWORD PTR __Psave$92916[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@3
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T100384[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T100384[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet@3:
$LN2@use_facet@3:
; Line 528
	mov	esi, DWORD PTR __Psave$92916[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$100414[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@3
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@3:
	lea	ecx, DWORD PTR __Lock$100414[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@3:
; Line 536
	lea	ecx, DWORD PTR __Lock$92915[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$92915[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; __Left$ = edi
; __Right$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 186
	push	ebx
; Line 187
	mov	eax, ecx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL26@operator@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL26@operator@3
	sub	eax, esi
	mov	esi, DWORD PTR [edi+16]
	mov	ebx, eax
	mov	eax, esi
	cmp	esi, ebx
	jb	SHORT $LN12@operator@3
	mov	eax, ebx
$LN12@operator@3:
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN22@operator@3
	mov	edx, DWORD PTR [edi]
	jmp	SHORT $LN23@operator@3
$LN22@operator@3:
	mov	edx, edi
$LN23@operator@3:
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	jne	SHORT $LN14@operator@3
	cmp	esi, ebx
	jae	SHORT $LN13@operator@3
	or	eax, -1
	xor	ecx, ecx
	test	eax, eax
	pop	esi
	sete	al
	pop	ebx
; Line 188
	ret	0
; Line 187
$LN13@operator@3:
	xor	eax, eax
	cmp	esi, ebx
	setne	al
$LN14@operator@3:
	xor	ecx, ecx
	test	eax, eax
	pop	esi
	sete	al
	pop	ebx
; Line 188
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T100505 = -4						; size = 4
?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::grouping, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 78
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 79
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	push	esi
	mov	DWORD PTR $T100505[ebp], 0
	call	edx
	mov	eax, esi
; Line 80
	mov	esp, ebp
	pop	ebp
	ret	0
?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::grouping
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=, COMDAT
; _this$ = esi
; __Right$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 625
	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN7@operator@4
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@operator@4
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	push	edi
	lea	edi, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [eax], dl
	movzx	eax, dl
	pop	edi
	jmp	SHORT $LN8@operator@4
$LN7@operator@4:
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	movzx	edx, dl
	push	edx
	call	eax
$LN8@operator@4:
	cmp	eax, -1
	jne	SHORT $LN23@operator@4
$LN1@operator@4:
; Line 626
	mov	BYTE PTR [esi], 1
$LN23@operator@4:
; Line 627
	mov	eax, esi
; Line 628
	ret	0
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc, COMDAT
; __Ptr$ = ecx
; __Count$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1541
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, eax
	push	edi
	mov	edi, ecx
; Line 1542
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	test	ebx, ebx
	je	SHORT $LN1@Putc
	push	esi
$LL3@Putc:
; Line 1543
	test	ecx, ecx
	je	SHORT $LN12@Putc
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	mov	dl, BYTE PTR [edi]
	je	SHORT $LN18@Putc
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN18@Putc
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR [eax]
	lea	esi, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], esi
	mov	BYTE PTR [ecx], dl
	movzx	eax, dl
	jmp	SHORT $LN19@Putc
$LN18@Putc:
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	movzx	edx, dl
	push	edx
	call	eax
$LN19@Putc:
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	cmp	eax, -1
	jne	SHORT $LN2@Putc
$LN12@Putc:
	mov	BYTE PTR __Dest$[ebp], 1
$LN2@Putc:
; Line 1542
	inc	edi
	dec	ebx
	jne	SHORT $LL3@Putc
	pop	esi
$LN1@Putc:
; Line 1544
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	pop	edi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebx
; Line 1545
	pop	ebp
	ret	0
?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T100741 = -40						; size = 12
__Newres$ = -28						; size = 4
$T100724 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1919
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; Line 1920
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, eax
	or	esi, 15					; 0000000fH
; Line 1921
	cmp	esi, -2					; fffffffeH
	jbe	SHORT $LN9@Copy
; Line 1922
	mov	esi, eax
	jmp	SHORT $LN39@Copy
$LN9@Copy:
; Line 1923
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy
; Line 1925
	mov	eax, -2					; fffffffeH
	sub	eax, ecx
; Line 1927
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy
; Line 1929
	mov	esi, -2					; fffffffeH
$LN39@Copy:
; Line 1932
	xor	eax, eax
; Line 1933
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy
	cmp	ecx, -1
	ja	SHORT $LN46@Copy
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy
$LN47@Copy:
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN19@Copy
$LN46@Copy:
	lea	ecx, DWORD PTR $T100724[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T100741[ebp]
	mov	DWORD PTR $T100724[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T100741[ebp]
	push	edx
	mov	DWORD PTR $T100741[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN112@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1935
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1937
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	eax
	add	ecx, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1942
	mov	eax, $LN107@Copy
	ret	0
$LN107@Copy:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
$LN19@Copy:
; Line 1944
	mov	ebx, DWORD PTR __Oldlen$[ebp]
	test	ebx, ebx
	je	SHORT $LN78@Copy
; Line 1945
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN76@Copy
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN77@Copy
$LN76@Copy:
	mov	eax, edi
$LN77@Copy:
	push	ebx
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN78@Copy:
; Line 1946
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN88@Copy
	mov	ecx, DWORD PTR [edi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN88@Copy:
; Line 1947
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	BYTE PTR [edi], 0
	mov	DWORD PTR [edi], eax
; Line 1948
	mov	DWORD PTR [edi+20], esi
; Line 1949
	mov	DWORD PTR [edi+16], ebx
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN102@Copy
	mov	edi, eax
$LN102@Copy:
	mov	BYTE PTR [edi+ebx], 0
; Line 1950
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1939
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN64@Copy
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Copy:
; Line 1940
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	0
	mov	BYTE PTR [esi], 0
	call	__CxxThrowException@8
$LN113@Copy:
$LN111@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Ogtp
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$numpunct@D@std@@MAEPAXI@Z PROC			; std::numpunct<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7?$numpunct@D@std@@6B@
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	edx, DWORD PTR [esi+20]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 12					; 0000000cH
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN10@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@6:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$numpunct@D@std@@MAEPAXI@Z ENDP			; std::numpunct<char>::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T100925 = -4						; size = 4
?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::truename, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 89
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	push	esi
	mov	DWORD PTR $T100925[ebp], 0
	call	edx
	mov	eax, esi
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::truename
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T100930 = -4						; size = 4
?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::falsename, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 84
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	push	esi
	mov	DWORD PTR $T100930[ebp], 0
	call	edx
	mov	eax, esi
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::falsename
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 8
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep, COMDAT
; ___$ReturnUdt$ = edi
; __Ch$ = ebx
; __Count$ = eax
; Line 1568
	push	ebp
	mov	ebp, esp
; Line 1569
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	push	esi
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN1@Rep
	npad	3
$LL36@Rep:
; Line 1570
	test	ecx, ecx
	je	SHORT $LN10@Rep
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN16@Rep
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN16@Rep
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [ecx], bl
	movzx	eax, bl
	jmp	SHORT $LN17@Rep
$LN16@Rep:
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	movzx	edx, bl
	push	edx
	call	eax
$LN17@Rep:
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	cmp	eax, -1
	jne	SHORT $LN2@Rep
$LN10@Rep:
	mov	BYTE PTR __Dest$[ebp], 1
$LN2@Rep:
; Line 1569
	dec	esi
	jne	SHORT $LL36@Rep
$LN1@Rep:
; Line 1571
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edi], edx
	mov	DWORD PTR [edi+4], ecx
	mov	eax, edi
	pop	esi
; Line 1572
	pop	ebp
	ret	0
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put, COMDAT
; __Ptr$ = ecx
; __Count$ = eax
; Line 1533
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, eax
	push	edi
	mov	edi, ecx
; Line 1534
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	test	ebx, ebx
	je	SHORT $LN1@Put
	push	esi
$LL3@Put:
; Line 1535
	test	ecx, ecx
	je	SHORT $LN10@Put
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], 0
	mov	dl, BYTE PTR [edi]
	je	SHORT $LN16@Put
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN16@Put
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR [eax]
	lea	esi, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], esi
	mov	BYTE PTR [ecx], dl
	movzx	eax, dl
	jmp	SHORT $LN17@Put
$LN16@Put:
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	movzx	edx, dl
	push	edx
	call	eax
$LN17@Put:
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	cmp	eax, -1
	jne	SHORT $LN2@Put
$LN10@Put:
	mov	BYTE PTR __Dest$[ebp], 1
$LN2@Put:
; Line 1534
	inc	edi
	dec	ebx
	jne	SHORT $LL3@Put
	pop	esi
$LN1@Put:
; Line 1536
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	pop	edi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebx
; Line 1537
	pop	ebp
	ret	0
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT
__Lock$101114 = -4					; size = 4
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::getloc, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 129
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 130
	mov	ecx, DWORD PTR [eax+56]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$101114[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@getloc
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@getloc:
	lea	ecx, DWORD PTR __Lock$101114[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi
; Line 131
	mov	esp, ebp
	pop	ebp
	ret	0
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::getloc
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0
__ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Lock$101135 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	call	??0_Mutex@std@@QAE@XZ			; std::_Mutex::_Mutex
	push	4
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN3@basic_stre
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$101135[ebp]
	mov	ebx, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, -1
	jae	SHORT $LN8@basic_stre
	inc	eax
	mov	DWORD PTR [ebx+4], eax
$LN8@basic_stre:
	lea	ecx, DWORD PTR __Lock$101135[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	jmp	SHORT $LN4@basic_stre
$LN3@basic_stre:
	xor	edi, edi
$LN4@basic_stre:
; Line 26
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	mov	DWORD PTR [esi+56], edi
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], 0
; Line 27
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1959
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1960
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, ecx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN6@Grow
; Line 1961
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN49@Grow:
$LN6@Grow:
; Line 1962
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow
; Line 1963
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN5@Grow:
; Line 1964
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN3@Grow
; Line 1966
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow
	mov	edi, ebx
$LN9@Grow:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN30@Grow
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN30@Grow:
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; Line 1969
	xor	ecx, ecx
	mov	BYTE PTR [edi+esi], 0
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN3@Grow:
; Line 1967
	test	ebx, ebx
	jne	SHORT $LN46@Grow
; Line 1968
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN44@Grow
	mov	esi, DWORD PTR [esi]
$LN44@Grow:
	mov	BYTE PTR [esi], 0
$LN46@Grow:
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = esi
; __Off$ = edi
; Line 1041
	push	ebp
	mov	ebp, esp
; Line 1042
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, edi
	jae	SHORT $LN3@insert
; Line 1043
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN80@insert:
$LN3@insert:
; Line 1044
	mov	ecx, DWORD PTR __Count$[ebp]
	or	edx, -1
	sub	edx, eax
	cmp	edx, ecx
	ja	SHORT $LN2@insert
; Line 1045
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN81@insert:
$LN2@insert:
; Line 1047
	test	ecx, ecx
	je	$LN74@insert
	push	ebx
	lea	ebx, DWORD PTR [eax+ecx]
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN16@insert
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN82@insert:
$LN16@insert:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, ebx
	jae	SHORT $LN15@insert
	push	eax
	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	ebx, ebx
	je	SHORT $LN76@insert
$LN79@insert:
; Line 1050
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN60@insert
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN61@insert
; Line 1047
$LN15@insert:
	test	ebx, ebx
	jne	SHORT $LN79@insert
	mov	DWORD PTR [esi+16], ebx
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN54@insert
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], bl
	pop	ebx
; Line 1054
	mov	eax, esi
; Line 1055
	pop	ebp
	ret	8
; Line 1047
$LN54@insert:
	mov	eax, esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 1055
	pop	ebp
	ret	8
; Line 1050
$LN60@insert:
	mov	ecx, esi
$LN61@insert:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN64@insert
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN65@insert
$LN64@insert:
	mov	eax, esi
$LN65@insert:
	mov	edx, DWORD PTR [esi+16]
	sub	edx, edi
	push	edx
	add	eax, edi
	add	eax, DWORD PTR __Count$[ebp]
	add	ecx, edi
	push	ecx
	push	eax
	call	_memmove
; Line 1051
	mov	eax, DWORD PTR __Ch$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	add	esp, 12					; 0000000cH
	push	eax
	push	ecx
	push	edi
	mov	ecx, esi
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Line 1052
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], ebx
	jb	SHORT $LN72@insert
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+ebx], 0
	pop	ebx
; Line 1054
	mov	eax, esi
; Line 1055
	pop	ebp
	ret	8
; Line 1052
$LN72@insert:
	mov	eax, esi
	mov	BYTE PTR [eax+ebx], 0
$LN76@insert:
	pop	ebx
$LN74@insert:
; Line 1054
	mov	eax, esi
; Line 1055
	pop	ebp
	ret	8
$LN77@insert:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 935
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 936
	mov	edi, DWORD PTR __Count$[ebp]
	mov	esi, ecx
	cmp	edi, -1
	jne	SHORT $LN2@assign
; Line 937
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN82@assign:
$LN2@assign:
; Line 939
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN13@assign
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN83@assign:
$LN13@assign:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN12@assign
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN77@assign
$LN81@assign:
; Line 941
	cmp	edi, 1
	jne	SHORT $LN56@assign
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN61@assign
	mov	eax, DWORD PTR [esi]
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax], cl
	jmp	SHORT $LN69@assign
; Line 939
$LN12@assign:
	test	edi, edi
	jne	SHORT $LN81@assign
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN51@assign
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 944
	mov	eax, esi
	pop	esi
; Line 945
	pop	ebp
	ret	8
; Line 939
$LN51@assign:
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 945
	pop	ebp
	ret	8
; Line 941
$LN61@assign:
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	eax, esi
	mov	BYTE PTR [eax], cl
	jmp	SHORT $LN69@assign
$LN56@assign:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN67@assign
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN68@assign
$LN67@assign:
	mov	eax, esi
$LN68@assign:
	movsx	edx, BYTE PTR __Ch$[ebp]
	push	edi
	push	edx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN69@assign:
; Line 942
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN75@assign
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 944
	mov	eax, esi
	pop	esi
; Line 945
	pop	ebp
	ret	8
; Line 942
$LN75@assign:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN77@assign:
; Line 944
	pop	edi
	mov	eax, esi
	pop	esi
; Line 945
	pop	ebp
	ret	8
$LN79@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@7
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@7:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$codecvt@DDH@std@@MAE@XZ
_TEXT	SEGMENT
??1?$codecvt@DDH@std@@MAE@XZ PROC			; std::codecvt<char,char,int>::~codecvt<char,char,int>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 859
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1?$codecvt@DDH@std@@MAE@XZ ENDP			; std::codecvt<char,char,int>::~codecvt<char,char,int>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
__Lock$101735 = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T101711 = 8						; size = 4
__Filename$ = 8						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ebx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 218
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 220
	cmp	DWORD PTR [ebx+84], 0
	jne	$LN1@open
	mov	eax, DWORD PTR __Filename$[ebp]
	push	64					; 00000040H
	push	2
	push	eax
	call	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z	; std::_Fiopen
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN1@open
; Line 223
	push	1
	push	eax
	mov	ecx, ebx
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 224
	lea	edi, DWORD PTR $T101711[ebp]
	mov	eax, ebx
	call	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	add	esp, 4
	push	eax
	mov	ecx, ebx
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edi, DWORD PTR $T101711[ebp]
	test	edi, edi
	je	SHORT $LN9@open
	push	0
	lea	ecx, DWORD PTR __Lock$101735[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN11@open
	cmp	eax, -1
	jae	SHORT $LN11@open
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN11@open:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$101735[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN9@open
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN9@open:
; Line 225
	mov	eax, ebx
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@open:
; Line 221
	xor	eax, eax
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T101711[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = esi
; __Newsize$ = edi
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1988
	push	ebp
	mov	ebp, esp
; Line 1989
	cmp	BYTE PTR __Built$[ebp], 0
	je	SHORT $LN11@Tidy@4
; Line 1991
	cmp	DWORD PTR [esi+20], 8
	jb	SHORT $LN11@Tidy@4
; Line 1993
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1994
	test	edi, edi
	je	SHORT $LN7@Tidy@4
; Line 1995
	lea	eax, DWORD PTR [edi+edi]
	push	eax
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy@4:
; Line 1996
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN11@Tidy@4:
; Line 1999
	xor	ecx, ecx
	mov	DWORD PTR [esi+20], 7
	mov	DWORD PTR [esi+16], edi
	mov	WORD PTR [esi+edi*2], cx
; Line 2000
	pop	ebp
	ret	4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 894
	mov	ebx, DWORD PTR __Roff$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	edi, ebx
	jae	SHORT $LN5@assign@2
; Line 895
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN83@assign@2:
$LN5@assign@2:
; Line 897
	mov	eax, DWORD PTR __Count$[ebp]
	sub	edi, ebx
	cmp	eax, edi
	jae	SHORT $LN4@assign@2
; Line 898
	mov	edi, eax
$LN4@assign@2:
; Line 900
	cmp	esi, ecx
	jne	SHORT $LN3@assign@2
; Line 901
	push	-1
	add	edi, ebx
	push	edi
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	ebx
	push	0
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
$LN3@assign@2:
; Line 902
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN20@assign@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN84@assign@2:
$LN20@assign@2:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN19@assign@2
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN78@assign@2
$LN82@assign@2:
; Line 904
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN64@assign@2
	mov	ecx, DWORD PTR [ecx]
$LN64@assign@2:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN68@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@assign@2
; Line 902
$LN19@assign@2:
	test	edi, edi
	jne	SHORT $LN82@assign@2
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN58@assign@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 902
$LN58@assign@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 904
$LN68@assign@2:
	mov	eax, esi
$LN69@assign@2:
	push	edi
	add	ecx, ebx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 905
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN76@assign@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 905
$LN76@assign@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN78@assign@2:
; Line 907
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
$LN80@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 845
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 846
	mov	ebx, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append
; Line 847
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN83@append:
$LN2@append:
; Line 850
	test	ebx, ebx
	je	$LN77@append
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN13@append
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN84@append:
$LN13@append:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN12@append
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	$LN79@append
$LN82@append:
; Line 852
	mov	ecx, DWORD PTR [esi+16]
	cmp	ebx, 1
	jne	SHORT $LN56@append
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN61@append
	mov	eax, DWORD PTR [esi]
	mov	dl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	jmp	SHORT $LN69@append
; Line 850
$LN12@append:
	test	edi, edi
	jne	SHORT $LN82@append
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN51@append
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 855
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 856
	pop	ebp
	ret	8
; Line 850
$LN51@append:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 856
	pop	ebp
	ret	8
; Line 852
$LN61@append:
	mov	dl, BYTE PTR __Ch$[ebp]
	mov	eax, esi
	mov	BYTE PTR [eax+ecx], dl
	jmp	SHORT $LN69@append
$LN56@append:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN67@append
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN68@append
$LN67@append:
	mov	eax, esi
$LN68@append:
	movsx	edx, BYTE PTR __Ch$[ebp]
	push	ebx
	push	edx
	add	eax, ecx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN69@append:
; Line 853
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN75@append
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 855
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 856
	pop	ebp
	ret	8
; Line 853
$LN75@append:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN79@append:
	pop	edi
$LN77@append:
; Line 855
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 856
	pop	ebp
	ret	8
$LN80@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
; Line 608
	mov	eax, DWORD PTR __Ch$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Count$[ebp]
	push	eax
	push	ecx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 609
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; __Right$ = ecx
; __Roff$ = eax
; Line 573
	push	-1
	push	eax
	push	ecx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 574
	mov	eax, esi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	lea	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [eax-8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-8], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT
__Lock$102384 = -4					; size = 4
___flags$ = 8						; size = 4
??_Glocale@std@@QAEPAXI@Z PROC				; std::locale::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN7@scalar@8
	push	0
	lea	ecx, DWORD PTR __Lock$102384[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN9@scalar@8
	cmp	eax, -1
	jae	SHORT $LN9@scalar@8
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@scalar@8:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$102384[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN13@scalar@8
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@scalar@8:
	pop	esi
$LN7@scalar@8:
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN12@scalar@8
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@scalar@8:
	pop	edi
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glocale@std@@QAEPAXI@Z ENDP				; std::locale::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN9@scalar@9
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar@9:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	lea	esi, DWORD PTR [ecx-8]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edx+eax-8], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN13@scalar@10
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@10:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 550
	push	ebp
	mov	ebp, esp
; Line 551
	mov	eax, DWORD PTR __Loc$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	add	esp, 4
	push	eax
	mov	ecx, esi
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	pop	esi
; Line 552
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
__Dest$91136 = -60					; size = 4
$T102919 = -56						; size = 4
__Src$91137 = -52					; size = 4
__Ch$91135 = -45					; size = 1
__Str$91131 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 425
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax]
	xor	edx, edx
	cmp	eax, edx
	je	SHORT $LN18@uflow@2
	mov	ecx, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edi+48]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, eax
	cmp	eax, ecx
	jae	SHORT $LN18@uflow@2
; Line 427
	mov	eax, DWORD PTR [edi+48]
	dec	DWORD PTR [eax]
	mov	edi, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [edi]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [edi], edx
	movzx	eax, BYTE PTR [eax]
	jmp	$LN14@uflow@2
$LN18@uflow@2:
; Line 428
	cmp	DWORD PTR [edi+84], edx
; Line 429
	je	$LN277@uflow@2
; Line 430
	mov	ecx, DWORD PTR [edi+16]
	lea	esi, DWORD PTR [edi+72]
	cmp	DWORD PTR [ecx], esi
	jne	SHORT $LN41@uflow@2
	mov	eax, DWORD PTR [edi+64]
	mov	esi, DWORD PTR [edi+60]
	mov	DWORD PTR [ecx], esi
	mov	ecx, DWORD PTR [edi+32]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR [edi+48]
	sub	eax, eax
	mov	DWORD PTR [ecx], eax
$LN41@uflow@2:
; Line 431
	cmp	DWORD PTR [edi+68], edx
	jne	SHORT $LN15@uflow@2
; Line 435
	mov	edi, DWORD PTR [edi+84]
	push	edi
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	je	$LN277@uflow@2
	movzx	eax, al
	jmp	$LN14@uflow@2
$LN15@uflow@2:
; Line 439
	mov	DWORD PTR __Str$91131[ebp+20], 15	; 0000000fH
	mov	DWORD PTR __Str$91131[ebp+16], edx
	mov	BYTE PTR __Str$91131[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], edx
; Line 446
	mov	edx, DWORD PTR [edi+84]
	push	edx
	call	_fgetc
	mov	ebx, eax
	add	esp, 4
; Line 448
	cmp	ebx, -1
	je	$LN291@uflow@2
	npad	1
$LL13@uflow@2:
; Line 451
	mov	eax, DWORD PTR __Str$91131[ebp+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 1
	jbe	$LN292@uflow@2
	lea	esi, DWORD PTR [eax+1]
	cmp	esi, -2					; fffffffeH
	ja	$LN292@uflow@2
	mov	ecx, DWORD PTR __Str$91131[ebp+20]
	cmp	ecx, esi
	jae	SHORT $LN90@uflow@2
	push	eax
	push	esi
	lea	ecx, DWORD PTR __Str$91131[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Str$91131[ebp+20]
	mov	eax, DWORD PTR __Str$91131[ebp+16]
	test	esi, esi
	je	SHORT $LN155@uflow@2
$LN303@uflow@2:
	cmp	ecx, 16					; 00000010H
	mov	ecx, DWORD PTR __Str$91131[ebp]
	jae	SHORT $LN140@uflow@2
	lea	ecx, DWORD PTR __Str$91131[ebp]
$LN140@uflow@2:
	mov	BYTE PTR [ecx+eax], bl
	cmp	DWORD PTR __Str$91131[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$91131[ebp]
	mov	DWORD PTR __Str$91131[ebp+16], esi
	jae	SHORT $LN154@uflow@2
	lea	eax, DWORD PTR __Str$91131[ebp]
$LN154@uflow@2:
	mov	BYTE PTR [eax+esi], 0
$LN304@uflow@2:
	mov	eax, DWORD PTR __Str$91131[ebp+16]
	mov	ecx, DWORD PTR __Str$91131[ebp+20]
$LN155@uflow@2:
; Line 454
	mov	edx, DWORD PTR __Str$91131[ebp]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN162@uflow@2
	mov	DWORD PTR $T102919[ebp], edx
	jmp	SHORT $LN163@uflow@2
; Line 451
$LN90@uflow@2:
	test	esi, esi
	jne	SHORT $LN303@uflow@2
	mov	eax, DWORD PTR __Str$91131[ebp]
	mov	DWORD PTR __Str$91131[ebp+16], esi
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN130@uflow@2
	lea	eax, DWORD PTR __Str$91131[ebp]
$LN130@uflow@2:
	mov	BYTE PTR [eax], 0
	jmp	SHORT $LN304@uflow@2
; Line 454
$LN162@uflow@2:
	lea	esi, DWORD PTR __Str$91131[ebp]
	mov	DWORD PTR $T102919[ebp], esi
$LN163@uflow@2:
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN184@uflow@2
	lea	edx, DWORD PTR __Str$91131[ebp]
$LN184@uflow@2:
	mov	ecx, DWORD PTR [edi+68]
	mov	esi, DWORD PTR [ecx]
	lea	ebx, DWORD PTR __Dest$91136[ebp]
	push	ebx
	lea	ebx, DWORD PTR __Ch$91135[ebp+1]
	push	ebx
	lea	ebx, DWORD PTR __Ch$91135[ebp]
	push	ebx
	lea	ebx, DWORD PTR __Src$91137[ebp]
	push	ebx
	mov	ebx, DWORD PTR $T102919[ebp]
	add	ebx, eax
	mov	eax, DWORD PTR [esi+16]
	push	ebx
	push	edx
	lea	edx, DWORD PTR [edi+76]
	push	edx
	call	eax
	test	eax, eax
	js	$LN1@uflow@2
	cmp	eax, 1
	jle	SHORT $LN8@uflow@2
	cmp	eax, 3
	jne	$LN1@uflow@2
; Line 471
	cmp	DWORD PTR __Str$91131[ebp+16], 1
	jb	SHORT $LN4@uflow@2
; Line 474
	cmp	DWORD PTR __Str$91131[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$91131[ebp]
	jae	SHORT $LN249@uflow@2
	lea	eax, DWORD PTR __Str$91131[ebp]
$LN249@uflow@2:
	push	1
	push	eax
	lea	ecx, DWORD PTR __Ch$91135[ebp]
	push	1
	push	ecx
	call	_memcpy_s
; Line 477
	movzx	esi, BYTE PTR __Ch$91135[ebp]
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR __Str$91131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	$LN14@uflow@2
$LN8@uflow@2:
; Line 458
	lea	ecx, DWORD PTR __Ch$91135[ebp]
	cmp	DWORD PTR __Dest$91136[ebp], ecx
	jne	SHORT $LN295@uflow@2
; Line 467
	cmp	DWORD PTR __Str$91131[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$91131[ebp]
	jae	SHORT $LN228@uflow@2
	lea	eax, DWORD PTR __Str$91131[ebp]
$LN228@uflow@2:
	mov	edx, DWORD PTR __Src$91137[ebp]
	sub	edx, eax
	push	edx
	push	0
	lea	ecx, DWORD PTR __Str$91131[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
$LN4@uflow@2:
; Line 446
	mov	eax, DWORD PTR [edi+84]
	push	eax
	call	_fgetc
	mov	ebx, eax
	add	esp, 4
; Line 448
	cmp	ebx, -1
	jne	$LL13@uflow@2
$LN291@uflow@2:
; Line 449
	lea	ecx, DWORD PTR __Str$91131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	SHORT $LN277@uflow@2
$LN292@uflow@2:
; Line 451
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN305@uflow@2:
$LN295@uflow@2:
; Line 460
	cmp	DWORD PTR __Str$91131[ebp+20], 16	; 00000010H
	mov	esi, DWORD PTR __Str$91131[ebp]
	jae	SHORT $LN205@uflow@2
	lea	esi, DWORD PTR __Str$91131[ebp]
$LN205@uflow@2:
	sub	esi, DWORD PTR __Src$91137[ebp]
	add	esi, DWORD PTR __Str$91131[ebp+16]
; Line 461
	test	esi, esi
	jle	SHORT $LN5@uflow@2
$LN6@uflow@2:
; Line 462
	mov	eax, DWORD PTR __Src$91137[ebp]
	mov	edx, DWORD PTR [edi+84]
	movsx	ecx, BYTE PTR [esi+eax-1]
	dec	esi
	push	edx
	push	ecx
	call	_ungetc
	add	esp, 8
	test	esi, esi
	jg	SHORT $LN6@uflow@2
$LN5@uflow@2:
; Line 463
	movzx	esi, BYTE PTR __Ch$91135[ebp]
	lea	ecx, DWORD PTR __Str$91131[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@uflow@2
$LN1@uflow@2:
; Line 480
	cmp	DWORD PTR __Str$91131[ebp+20], 16	; 00000010H
	jb	SHORT $LN277@uflow@2
	mov	edx, DWORD PTR __Str$91131[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN277@uflow@2:
	or	eax, -1
$LN14@uflow@2:
; Line 484
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN301@uflow@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$91131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Src$90987 = -56					; size = 4
__Dest$90988 = -52					; size = 4
__Ch$90986 = -48					; size = 1
__Str$90989 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 323
	mov	ebx, DWORD PTR __Meta$[ebp]
; Line 324
	xor	eax, eax
	mov	esi, ecx
	cmp	ebx, -1
	je	$LN14@overflow
; Line 326
	mov	ecx, DWORD PTR [esi+36]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, eax
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR [esi+52]
	mov	edi, DWORD PTR [ecx]
	add	edi, edx
	cmp	edx, edi
	jae	SHORT $LN18@overflow
; Line 328
	dec	DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi], ecx
	mov	BYTE PTR [eax], bl
; Line 329
	mov	eax, ebx
	jmp	$LN14@overflow
$LN18@overflow:
; Line 331
	cmp	DWORD PTR [esi+84], eax
; Line 332
	je	$LN270@overflow
; Line 333
	mov	edx, DWORD PTR [esi+16]
	lea	edi, DWORD PTR [esi+72]
	cmp	DWORD PTR [edx], edi
	jne	SHORT $LN57@overflow
	mov	ecx, DWORD PTR [esi+64]
	mov	edi, DWORD PTR [esi+60]
	mov	DWORD PTR [edx], edi
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR [esi+48]
	sub	ecx, ecx
	mov	DWORD PTR [edx], ecx
$LN57@overflow:
; Line 334
	cmp	DWORD PTR [esi+68], eax
	jne	SHORT $LN15@overflow
; Line 336
	mov	esi, DWORD PTR [esi+84]
	movsx	eax, bl
	push	esi
	push	eax
	call	_fputc
	add	esp, 8
	cmp	eax, -1
	je	$LN270@overflow
	mov	eax, ebx
	jmp	$LN14@overflow
$LN15@overflow:
; Line 344
	mov	ecx, 15					; 0000000fH
	mov	edx, eax
	mov	BYTE PTR __Str$90989[ebp], al
	mov	BYTE PTR __Ch$90986[ebp], bl
	mov	DWORD PTR __Str$90989[ebp+20], ecx
	mov	DWORD PTR __Str$90989[ebp], edx
	mov	DWORD PTR __Str$90989[ebp+4], eax
	mov	DWORD PTR __Str$90989[ebp+16], 8
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN168@overflow
	lea	edx, DWORD PTR __Str$90989[ebp]
$LN168@overflow:
	mov	BYTE PTR [edx+8], al
	mov	DWORD PTR __$EHRec$[ebp+8], eax
$LN273@overflow:
	mov	eax, DWORD PTR __Str$90989[ebp]
	mov	ebx, DWORD PTR __Str$90989[ebp+20]
$LN13@overflow:
; Line 348
	mov	edx, eax
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN199@overflow
	lea	edx, DWORD PTR __Str$90989[ebp]
	mov	eax, edx
$LN199@overflow:
	add	edx, DWORD PTR __Str$90989[ebp+16]
	mov	ecx, DWORD PTR [esi+68]
	mov	edi, DWORD PTR [ecx]
	lea	ebx, DWORD PTR __Dest$90988[ebp]
	push	ebx
	push	edx
	push	eax
	lea	edx, DWORD PTR __Src$90987[ebp]
	push	edx
	lea	eax, DWORD PTR __Ch$90986[ebp+1]
	push	eax
	lea	edx, DWORD PTR __Ch$90986[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+76]
	push	eax
	mov	eax, DWORD PTR [edi+20]
	call	eax
	test	eax, eax
	js	$LN1@overflow
	cmp	eax, 1
	jg	SHORT $LN264@overflow
; Line 353
	mov	ebx, DWORD PTR __Str$90989[ebp+20]
	mov	eax, DWORD PTR __Str$90989[ebp]
	mov	ecx, eax
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN220@overflow
	lea	ecx, DWORD PTR __Str$90989[ebp]
$LN220@overflow:
	mov	edi, DWORD PTR __Dest$90988[ebp]
	sub	edi, ecx
; Line 355
	je	SHORT $LN8@overflow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN239@overflow
	lea	eax, DWORD PTR __Str$90989[ebp]
$LN239@overflow:
	mov	ecx, DWORD PTR [esi+84]
	push	ecx
	push	edi
	push	1
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	edi, eax
	jne	SHORT $LN1@overflow
	mov	ebx, DWORD PTR __Str$90989[ebp+20]
	mov	eax, DWORD PTR __Str$90989[ebp]
$LN8@overflow:
; Line 359
	lea	edx, DWORD PTR __Ch$90986[ebp]
	mov	BYTE PTR [esi+73], 1
	cmp	DWORD PTR __Src$90987[ebp], edx
	jne	SHORT $LN266@overflow
; Line 362
	test	edi, edi
	jne	$LN13@overflow
; Line 364
	cmp	DWORD PTR __Str$90989[ebp+16], 32	; 00000020H
; Line 365
	lea	ecx, DWORD PTR __Str$90989[ebp]
	jae	SHORT $LN4@overflow
	push	edi
	push	8
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 377
	jmp	$LN273@overflow
$LN264@overflow:
; Line 348
	cmp	eax, 3
	jne	SHORT $LN1@overflow
; Line 373
	mov	eax, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR __Ch$90986[ebp]
	push	eax
	push	ecx
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	test	al, al
	je	SHORT $LN25@overflow
	mov	esi, DWORD PTR __Meta$[ebp]
	lea	ecx, DWORD PTR __Str$90989[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow
$LN25@overflow:
	lea	ecx, DWORD PTR __Str$90989[ebp]
	or	esi, -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow
$LN266@overflow:
; Line 360
	lea	ecx, DWORD PTR __Str$90989[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN14@overflow
$LN1@overflow:
; Line 376
	lea	ecx, DWORD PTR __Str$90989[ebp]
$LN4@overflow:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN270@overflow:
	or	eax, -1
$LN14@overflow:
; Line 379
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
	lea	ecx, DWORD PTR __Str$90989[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 754
	cmp	DWORD PTR [esi+20], 8
	jb	SHORT $LN13@basic_stri@2
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@basic_stri@2:
	xor	ecx, ecx
	mov	DWORD PTR [esi+20], 7
	mov	DWORD PTR [esi+16], 0
	mov	WORD PTR [esi], cx
; Line 755
	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::snextc, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
; Line 163
	push	esi
	mov	esi, eax
; Line 167
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN17@snextc
	mov	ecx, DWORD PTR [esi+48]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, 1
	jle	SHORT $LN5@snextc
	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi]
	inc	eax
	mov	DWORD PTR [esi], eax
	movzx	eax, BYTE PTR [eax]
	pop	esi
; Line 168
	ret	0
$LN5@snextc:
; Line 167
	test	eax, eax
	je	SHORT $LN17@snextc
	mov	edx, DWORD PTR [esi+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN17@snextc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	jmp	SHORT $LN18@snextc
$LN17@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	mov	ecx, esi
	call	edx
$LN18@snextc:
	cmp	eax, -1
	jne	SHORT $LN3@snextc
	or	eax, eax
	pop	esi
; Line 168
	ret	0
$LN3@snextc:
; Line 167
	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN35@snextc
	mov	ecx, DWORD PTR [esi+48]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN35@snextc
	mov	edx, DWORD PTR [eax]
	movzx	eax, BYTE PTR [edx]
	pop	esi
; Line 168
	ret	0
; Line 167
$LN35@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+24]
	mov	ecx, esi
	pop	esi
	jmp	edx
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::snextc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
__Lock$104284 = -8					; size = 4
_this$ = -4						; size = 4
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx
; Line 80
	mov	ebx, DWORD PTR [esi+56]
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	test	ebx, ebx
	je	SHORT $LN6@basic_stre@2
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN12@basic_stre@2
	push	0
	lea	ecx, DWORD PTR __Lock$104284[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN14@basic_stre@2
	cmp	eax, -1
	jae	SHORT $LN14@basic_stre@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN14@basic_stre@2:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$104284[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN18@basic_stre@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@basic_stre@2:
	mov	esi, DWORD PTR _this$[ebp]
$LN12@basic_stre@2:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN6@basic_stre@2:
; Line 81
	lea	ecx, DWORD PTR [esi+4]
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
$T104295 = -4						; size = 4
__Off$ = 8						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1848
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
; Line 1849
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR $T104295[ebp], eax
	mov	BYTE PTR [esi], al
	mov	eax, DWORD PTR __Off$[ebp]
	push	-1
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
; Line 1850
	mov	esp, ebp
	pop	ebp
	ret	4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; __Right$ = eax
; Line 545
	push	-1
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	eax, esi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?Final@MD5@@QAEXXZ
_TEXT	SEGMENT
_bits$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
?Final@MD5@@QAEXXZ PROC					; MD5::Final, COMDAT
; _this$ = ecx
; File c:\users\javis\documents\github\autoscan\launcher\launcher\md5.h
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 301
	xor	ecx, ecx
	lea	eax, DWORD PTR [esi+16]
	npad	6
$LL7@Final:
	movzx	edx, BYTE PTR [eax]
	mov	BYTE PTR _bits$[ebp+ecx], dl
	movzx	edx, BYTE PTR [eax+1]
	mov	BYTE PTR _bits$[ebp+ecx+1], dl
	movzx	edx, BYTE PTR [eax+2]
	mov	BYTE PTR _bits$[ebp+ecx+2], dl
	movzx	edx, BYTE PTR [eax+3]
	mov	BYTE PTR _bits$[ebp+ecx+3], dl
	add	ecx, 4
	add	eax, 4
	cmp	ecx, 8
	jb	SHORT $LL7@Final
; Line 304
	mov	ecx, DWORD PTR [esi+16]
	shr	ecx, 3
	and	ecx, 63					; 0000003fH
; Line 305
	mov	eax, 56					; 00000038H
	cmp	ecx, 56					; 00000038H
	jb	SHORT $LN26@Final
	mov	eax, 120				; 00000078H
$LN26@Final:
	sub	eax, ecx
; Line 306
	push	OFFSET _PADDING
	call	?Update@MD5@@QAEXPAEI@Z			; MD5::Update
; Line 309
	lea	eax, DWORD PTR _bits$[ebp]
	push	eax
	mov	eax, 8
	call	?Update@MD5@@QAEXPAEI@Z			; MD5::Update
	lea	ecx, DWORD PTR [esi+89]
	lea	eax, DWORD PTR [esi+2]
	mov	edi, 4
	npad	9
; Line 312
$LL12@Final:
	movzx	edx, BYTE PTR [eax-2]
	mov	BYTE PTR [ecx-1], dl
	movzx	edx, BYTE PTR [eax-1]
	mov	BYTE PTR [ecx], dl
	movzx	edx, BYTE PTR [eax]
	mov	BYTE PTR [ecx+1], dl
	movzx	edx, BYTE PTR [eax+1]
	mov	BYTE PTR [ecx+2], dl
	add	eax, 4
	add	ecx, 4
	dec	edi
	jne	SHORT $LL12@Final
; Line 315
	push	88					; 00000058H
	push	edi
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
	lea	ebx, DWORD PTR [esi+104]
; Line 317
$LL17@Final:
	movzx	eax, BYTE PTR [esi+edi+88]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	ebx
	call	_sprintf
	inc	edi
	add	esp, 12					; 0000000cH
	add	ebx, 2
	cmp	edi, 16					; 00000010H
	jl	SHORT $LL17@Final
; Line 318
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?Final@MD5@@QAEXXZ ENDP					; MD5::Final
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0failure@ios_base@std@@QAE@ABV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	push	edi
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0failure@ios_base@std@@QAE@ABV012@@Z ENDP		; std::ios_base::failure::failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT
??1failure@ios_base@std@@UAE@XZ PROC			; std::ios_base::failure::~failure, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1failure@ios_base@std@@UAE@XZ ENDP			; std::ios_base::failure::~failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfailure@ios_base@std@@UAEPAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN13@scalar@11
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@11:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gfailure@ios_base@std@@UAEPAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getloc@ios_base@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT
__Lock$104563 = 8					; size = 4
___$ReturnUdt$ = 8					; size = 4
?getloc@ios_base@std@@QBE?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 451
	push	ebp
	mov	ebp, esp
; Line 452
	mov	eax, DWORD PTR [ecx+48]
	push	esi
	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	lea	ecx, DWORD PTR __Lock$104563[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@getloc@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@getloc@2:
	lea	ecx, DWORD PTR __Lock$104563[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	edi
	pop	esi
; Line 453
	pop	ebp
	ret	4
?getloc@ios_base@std@@QBE?AVlocale@2@XZ ENDP		; std::ios_base::getloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z
_TEXT	SEGMENT
$T104576 = -4						; size = 4
__Message$ = 8						; size = 4
__Errcode$ = 12						; size = 4
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z PROC	; std::ios_base::failure::failure, COMDAT
; _this$ = ecx
; Line 237
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	ebx
	mov	ebx, DWORD PTR [eax+4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR __Message$[ebp]
	lea	ecx, DWORD PTR $T104576[esp+16]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T104576[esp+20], eax
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi+12], edi
; Line 238
	pop	edi
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ENDP	; std::ios_base::failure::failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$ctype@_W@std@@MAE@XZ
_TEXT	SEGMENT
??1?$ctype@_W@std@@MAE@XZ PROC				; std::ctype<wchar_t>::~ctype<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 2574
	push	esi
	mov	esi, ecx
; Line 2575
	cmp	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@_W@std@@6B@
	je	SHORT $LN8@ctype
; Line 2576
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	add	esp, 4
$LN8@ctype:
; Line 2577
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
??1?$ctype@_W@std@@MAE@XZ ENDP				; std::ctype<wchar_t>::~ctype<wchar_t>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$ctype@_W@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
$T104630 = -16						; size = 16
__Lobj$ = 8						; size = 4
__Refs$ = 12						; size = 4
??0?$ctype@_W@std@@QAE@ABV_Locinfo@1@I@Z PROC		; std::ctype<wchar_t>::ctype<wchar_t>, COMDAT
; _this$ = ecx
; Line 2559
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	mov	eax, DWORD PTR __Refs$[ebp]
	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx
; Line 2560
	lea	ecx, DWORD PTR $T104630[esp+24]
	push	ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@_W@std@@6B@
	call	__Getctype
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], edx
	mov	eax, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], eax
	call	__Getcvt
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], edx
; Line 2561
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ctype@_W@std@@QAE@ABV_Locinfo@1@I@Z ENDP		; std::ctype<wchar_t>::ctype<wchar_t>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT
??1?$ctype@D@std@@MAE@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT
; _this$ = ecx
; Line 2394
	push	esi
	mov	esi, ecx
; Line 2395
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN13@ctype@2
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	add	esp, 4
; Line 2396
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
$LN13@ctype@2:
; Line 2395
	jns	SHORT $LN12@ctype@2
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN12@ctype@2:
; Line 2396
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
??1?$ctype@D@std@@MAE@XZ ENDP				; std::ctype<char>::~ctype<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
$T104680 = -16						; size = 16
__Lobj$ = 8						; size = 4
__Refs$ = 12						; size = 4
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z PROC		; std::ctype<char>::ctype<char>, COMDAT
; _this$ = ecx
; Line 2365
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Refs$[ebp]
	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx
; Line 2366
	lea	ecx, DWORD PTR $T104680[ebp]
	push	ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	call	__Getctype
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [esi+20], eax
	add	esp, 4
; Line 2367
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z ENDP		; std::ctype<char>::ctype<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gctype_base@std@@UAEPAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@12
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@12:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gctype_base@std@@UAEPAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gcodecvt_base@std@@UAEPAXI@Z PROC			; std::codecvt_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@13
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@13:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gcodecvt_base@std@@UAEPAXI@Z ENDP			; std::codecvt_base::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx
; __Newcap$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1540
	push	esi
	mov	esi, ecx
	push	edi
; Line 1541
	mov	edi, DWORD PTR [esi+16]
	cmp	edi, eax
	ja	SHORT $LN11@reserve
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN11@reserve
; Line 1544
	push	1
	push	eax
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN11@reserve
; Line 1545
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN9@reserve
	mov	esi, DWORD PTR [esi]
$LN9@reserve:
	mov	BYTE PTR [esi+edi], 0
$LN11@reserve:
; Line 1547
	pop	edi
	pop	esi
	ret	0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = esi
; __Count$ = eax
; Line 799
	push	ebp
	mov	ebp, esp
; Line 800
	mov	edx, DWORD PTR __Roff$[ebp]
	push	ebx
	mov	ebx, eax
	mov	eax, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [eax+16]
	cmp	eax, edx
	jae	SHORT $LN4@append@2
; Line 801
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN85@append@2:
$LN4@append@2:
; Line 802
	sub	eax, edx
; Line 803
	cmp	eax, ebx
	jae	SHORT $LN3@append@2
; Line 804
	mov	ebx, eax
$LN3@append@2:
; Line 805
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append@2
; Line 806
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN86@append@2:
$LN2@append@2:
; Line 808
	test	ebx, ebx
	je	$LN79@append@2
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN21@append@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN87@append@2:
$LN21@append@2:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN20@append@2
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Roff$[ebp]
	test	edi, edi
	je	SHORT $LN81@append@2
$LN84@append@2:
; Line 811
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN65@append@2
	mov	ecx, DWORD PTR [ecx]
$LN65@append@2:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN69@append@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN70@append@2
; Line 808
$LN20@append@2:
	test	edi, edi
	jne	SHORT $LN84@append@2
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN59@append@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 814
	mov	eax, esi
	pop	ebx
; Line 815
	pop	ebp
	ret	8
; Line 808
$LN59@append@2:
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 815
	pop	ebp
	ret	8
; Line 811
$LN69@append@2:
	mov	eax, esi
$LN70@append@2:
	add	ecx, edx
	mov	edx, DWORD PTR [esi+16]
	push	ebx
	push	ecx
	add	edx, eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 812
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN77@append@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 814
	mov	eax, esi
	pop	ebx
; Line 815
	pop	ebp
	ret	8
; Line 812
$LN77@append@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN81@append@2:
	pop	edi
$LN79@append@2:
; Line 814
	mov	eax, esi
	pop	ebx
; Line 815
	pop	ebp
	ret	8
$LN82@append@2:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z
_TEXT	SEGMENT
$T104947 = -16						; size = 8
$T105062 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Count$ = 12						; size = 4
__Dest$ = 16						; size = 8
?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped, COMDAT
; __Ptr$ = eax
; __Kseparator$ = ebx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1549
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	edi, eax
	npad	6
$LL5@Putgrouped:
; Line 1553
	mov	esi, DWORD PTR __Count$[ebp]
	push	esi
	push	0
	push	edi
	call	_memchr
	add	esp, 12					; 0000000cH
; Line 1554
	test	eax, eax
	je	SHORT $LN8@Putgrouped
	sub	eax, edi
	mov	esi, eax
$LN8@Putgrouped:
; Line 1556
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T104947[ebp]
	push	edx
	mov	eax, esi
	mov	ecx, edi
	call	?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	add	esp, 12					; 0000000cH
; Line 1557
	add	edi, esi
	sub	DWORD PTR __Count$[ebp], esi
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1558
	je	SHORT $LN44@Putgrouped
; Line 1560
	test	bl, bl
	je	SHORT $LN4@Putgrouped
; Line 1561
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T105062[ebp], ecx
	test	esi, esi
	je	SHORT $LN19@Putgrouped
	mov	edx, DWORD PTR [esi+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN25@Putgrouped
	mov	eax, DWORD PTR [esi+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN25@Putgrouped
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [ecx], bl
	movzx	eax, bl
	jmp	SHORT $LN26@Putgrouped
$LN25@Putgrouped:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+12]
	movzx	ecx, bl
	push	ecx
	mov	ecx, esi
	call	edx
$LN26@Putgrouped:
	cmp	eax, -1
	jne	SHORT $LN11@Putgrouped
$LN19@Putgrouped:
	mov	BYTE PTR $T105062[ebp], 1
$LN11@Putgrouped:
	mov	eax, DWORD PTR $T105062[ebp]
	mov	DWORD PTR __Dest$[ebp], eax
	mov	DWORD PTR __Dest$[ebp+4], esi
$LN4@Putgrouped:
; Line 1550
	inc	edi
	dec	DWORD PTR __Count$[ebp]
	jmp	$LL5@Putgrouped
$LN44@Putgrouped:
; Line 1563
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 1564
	pop	edi
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx], edx
	mov	eax, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T105166 = -32						; size = 12
$T105149 = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Newres$ = 12						; size = 4
__Newsize$ = 12						; size = 4
__Oldlen$ = 16						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1919
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
; Line 1920
	mov	esi, eax
	or	esi, 7
; Line 1921
	cmp	esi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN9@Copy@2
; Line 1922
	mov	esi, eax
	jmp	SHORT $LN39@Copy@2
$LN9@Copy@2:
; Line 1923
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy@2
; Line 1925
	mov	eax, 2147483646				; 7ffffffeH
	sub	eax, ecx
; Line 1927
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy@2
; Line 1929
	mov	esi, 2147483646				; 7ffffffeH
$LN39@Copy@2:
; Line 1932
	xor	eax, eax
; Line 1933
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy@2
	cmp	ecx, 2147483647				; 7fffffffH
	ja	SHORT $LN46@Copy@2
	add	ecx, ecx
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy@2
$LN47@Copy@2:
	mov	ebx, eax
	jmp	SHORT $LN19@Copy@2
$LN46@Copy@2:
	lea	edx, DWORD PTR $T105149[ebp]
	push	edx
	lea	ecx, DWORD PTR $T105166[ebp]
	mov	DWORD PTR $T105149[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T105166[ebp]
	push	eax
	mov	DWORD PTR $T105166[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN118@Copy@2:
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:
; Line 1935
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1937
	lea	ecx, DWORD PTR [eax+1]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Newres$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1942
	mov	eax, $LN113@Copy@2
	ret	0
$LN113@Copy@2:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
	mov	ebx, DWORD PTR __Ptr$[ebp]
$LN19@Copy@2:
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	test	ecx, ecx
	je	SHORT $LN80@Copy@2
; Line 1945
	cmp	DWORD PTR [edi+20], 8
	jb	SHORT $LN78@Copy@2
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN79@Copy@2
$LN78@Copy@2:
	mov	eax, edi
$LN79@Copy@2:
	add	ecx, ecx
	push	ecx
	push	eax
	push	ebx
	call	_memcpy
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	add	esp, 12					; 0000000cH
$LN80@Copy@2:
; Line 1946
	cmp	DWORD PTR [edi+20], 8
	jb	SHORT $LN94@Copy@2
	mov	edx, DWORD PTR [edi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	add	esp, 4
$LN94@Copy@2:
; Line 1947
	mov	DWORD PTR [edi], ebx
; Line 1948
	mov	DWORD PTR [edi+20], esi
; Line 1949
	mov	DWORD PTR [edi+16], ecx
	cmp	esi, 8
	jb	SHORT $LN108@Copy@2
	mov	edi, ebx
$LN108@Copy@2:
	xor	edx, edx
	mov	WORD PTR [edi+ecx*2], dx
; Line 1950
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:
; Line 1939
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 8
	jb	SHORT $LN66@Copy@2
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN66@Copy@2:
	xor	ecx, ecx
; Line 1940
	push	ecx
	mov	DWORD PTR [esi+20], 7
	mov	DWORD PTR [esi+16], 0
	push	ecx
	mov	WORD PTR [esi], cx
	call	__CxxThrowException@8
$LN119@Copy@2:
$LN117@Copy@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; __Right$ = eax
; Line 888
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 889
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; __Ptr$ = eax
; Line 818
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, eax
	push	esi
	mov	esi, ecx
; Line 824
	test	ebx, ebx
	je	SHORT $LN88@append@3
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN13@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN14@append@3
$LN13@append@3:
	mov	eax, esi
$LN14@append@3:
	cmp	ebx, eax
	jb	SHORT $LN88@append@3
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN17@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN18@append@3
$LN17@append@3:
	mov	eax, esi
$LN18@append@3:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN88@append@3
; Line 825
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN21@append@3
	mov	eax, DWORD PTR [esi]
	sub	ebx, eax
	mov	eax, DWORD PTR __Count$[ebp]
	push	ebx
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
	pop	ebx
; Line 836
	pop	ebp
	ret	4
; Line 825
$LN21@append@3:
	mov	eax, esi
	sub	ebx, eax
	mov	eax, DWORD PTR __Count$[ebp]
	push	ebx
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
	pop	ebx
; Line 836
	pop	ebp
	ret	4
$LN88@append@3:
; Line 826
	mov	eax, DWORD PTR [esi+16]
	mov	edx, DWORD PTR __Count$[ebp]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, edx
	ja	SHORT $LN2@append@3
; Line 827
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN93@append@3:
$LN2@append@3:
; Line 830
	test	edx, edx
	je	$LN85@append@3
	push	edi
	lea	edi, DWORD PTR [eax+edx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN31@append@3
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN94@append@3:
$LN31@append@3:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN30@append@3
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	SHORT $LN89@append@3
$LN92@append@3:
; Line 832
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN75@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN76@append@3
; Line 830
$LN30@append@3:
	test	edi, edi
	jne	SHORT $LN92@append@3
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN69@append@3
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 835
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 836
	pop	ebp
	ret	4
; Line 830
$LN69@append@3:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 836
	pop	ebp
	ret	4
; Line 832
$LN75@append@3:
	mov	eax, esi
$LN76@append@3:
	push	edx
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	push	ebx
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 833
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN83@append@3
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 835
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 836
	pop	ebp
	ret	4
; Line 833
$LN83@append@3:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN89@append@3:
	pop	edi
$LN85@append@3:
; Line 835
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 836
	pop	ebp
	ret	4
$LN90@append@3:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	__Count$GSCopy$
PUBLIC	__Buf$GSCopy$
PUBLIC	__Iosbase$GSCopy$
PUBLIC	__Fill$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z$1
__ehfuncinfo$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z
_TEXT	SEGMENT
$T105591 = -92						; size = 8
__Punct_fac$ = -88					; size = 4
$T105580 = -84						; size = 4
__Iosbase$GSCopy$ = -80					; size = 4
$T105589 = -76						; size = 8
__Pg$92203 = -72					; size = 4
$T105590 = -68						; size = 8
__Lock$105616 = -64					; size = 4
__Prefix$ = -64						; size = 4
__Buf$GSCopy$ = -60					; size = 4
__Count$GSCopy$ = -56					; size = 4
__Fill$GSCopy$ = -49					; size = 1
__Grouping$ = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Fill$ = 12						; size = 1
__Count$ = 16						; size = 4
__Dest$ = 20						; size = 8
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput, COMDAT
; __Iosbase$ = ecx
; __Buf$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1528
	mov	al, BYTE PTR __Fill$[ebp]
	mov	ebx, DWORD PTR __Count$[ebp]
	mov	BYTE PTR __Fill$GSCopy$[ebp], al
	lea	eax, DWORD PTR $T105580[ebp]
	push	eax
	mov	DWORD PTR __Iosbase$GSCopy$[ebp], ecx
	mov	DWORD PTR __Buf$GSCopy$[ebp], edx
	mov	DWORD PTR __Count$GSCopy$[ebp], ebx
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	DWORD PTR __Punct_fac$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T105580[ebp]
	test	eax, eax
	je	SHORT $LN25@Iput
; Line 1481
	push	0
	lea	ecx, DWORD PTR __Lock$105616[ebp]
	mov	edi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN27@Iput
	cmp	eax, -1
	jae	SHORT $LN27@Iput
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN27@Iput:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$105616[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN25@Iput
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN25@Iput:
; Line 1482
	mov	ecx, DWORD PTR __Punct_fac$[ebp]
	lea	esi, DWORD PTR __Grouping$[ebp]
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
; Line 1485
	mov	edi, DWORD PTR __Buf$GSCopy$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	al, BYTE PTR [edi]
	cmp	al, 43					; 0000002bH
	je	SHORT $LN13@Iput
	cmp	al, 45					; 0000002dH
	je	SHORT $LN13@Iput
	cmp	al, 48					; 00000030H
	jne	SHORT $LN15@Iput
	mov	al, BYTE PTR [edi+1]
	cmp	al, 120					; 00000078H
	je	SHORT $LN14@Iput
	cmp	al, 88					; 00000058H
	jne	SHORT $LN15@Iput
$LN14@Iput:
	mov	DWORD PTR __Prefix$[ebp], 2
	jmp	SHORT $LN17@Iput
$LN15@Iput:
	mov	DWORD PTR __Prefix$[ebp], 0
	jmp	SHORT $LN17@Iput
$LN13@Iput:
	mov	DWORD PTR __Prefix$[ebp], 1
$LN17@Iput:
; Line 1487
	mov	ecx, DWORD PTR __Grouping$[ebp+20]
	mov	edx, DWORD PTR __Grouping$[ebp]
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN36@Iput
	lea	eax, DWORD PTR __Grouping$[ebp]
$LN36@Iput:
	cmp	BYTE PTR [eax], 127			; 0000007fH
	je	SHORT $LN8@Iput
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN42@Iput
	lea	eax, DWORD PTR __Grouping$[ebp]
$LN42@Iput:
	cmp	BYTE PTR [eax], 0
	jle	SHORT $LN8@Iput
; Line 1489
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN47@Iput
	mov	DWORD PTR __Pg$92203[ebp], edx
	jmp	SHORT $LN48@Iput
$LN47@Iput:
	lea	ecx, DWORD PTR __Grouping$[ebp]
	mov	DWORD PTR __Pg$92203[ebp], ecx
$LN48@Iput:
; Line 1492
	mov	edx, DWORD PTR __Pg$92203[ebp]
	mov	al, BYTE PTR [edx]
	mov	esi, ebx
	cmp	al, 127					; 0000007fH
	je	SHORT $LN8@Iput
$LL9@Iput:
	test	al, al
	jle	SHORT $LN92@Iput
	mov	ecx, esi
	sub	ecx, DWORD PTR __Prefix$[ebp]
	movsx	eax, al
	cmp	eax, ecx
	jae	SHORT $LN92@Iput
; Line 1494
	sub	esi, eax
; Line 1497
	mov	eax, ebx
	sub	eax, esi
	inc	eax
	push	eax
	add	edi, esi
	push	edi
	push	eax
	mov	eax, DWORD PTR __Buf$GSCopy$[ebp]
	lea	ecx, DWORD PTR [eax+esi+1]
	push	ecx
	call	_memmove_s
; Line 1501
	mov	eax, DWORD PTR __Pg$92203[ebp]
	add	esp, 16					; 00000010H
	mov	BYTE PTR [edi], 0
	inc	ebx
	cmp	BYTE PTR [eax+1], 0
	jle	SHORT $LN4@Iput
	inc	eax
	mov	DWORD PTR __Pg$92203[ebp], eax
$LN4@Iput:
; Line 1492
	mov	al, BYTE PTR [eax]
	mov	edi, DWORD PTR __Buf$GSCopy$[ebp]
	cmp	al, 127					; 0000007fH
	jne	SHORT $LL9@Iput
$LN92@Iput:
; Line 1500
	mov	DWORD PTR __Count$GSCopy$[ebp], ebx
$LN8@Iput:
; Line 1508
	mov	eax, DWORD PTR __Iosbase$GSCopy$[ebp]
	cmp	DWORD PTR [eax+36], 0
	mov	esi, DWORD PTR [eax+32]
	jl	SHORT $LN18@Iput
	jg	SHORT $LN85@Iput
	test	esi, esi
	je	SHORT $LN18@Iput
$LN85@Iput:
	cmp	esi, ebx
	jbe	SHORT $LN18@Iput
	sub	esi, ebx
	jmp	SHORT $LN19@Iput
$LN18@Iput:
	xor	esi, esi
$LN19@Iput:
; Line 1511
	mov	eax, DWORD PTR [eax+20]
	and	eax, 448				; 000001c0H
; Line 1513
	cmp	eax, 64					; 00000040H
	je	SHORT $LN1@Iput
	cmp	eax, 256				; 00000100H
	je	SHORT $LN84@Iput
; Line 1515
	mov	edx, DWORD PTR __Dest$[ebp+4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	edx
	push	eax
; Line 1516
	jmp	SHORT $LN94@Iput
$LN84@Iput:
; Line 1520
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	eax
	mov	eax, DWORD PTR __Prefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T105589[ebp]
	push	edx
	mov	ecx, edi
	call	?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
; Line 1521
	mov	ecx, DWORD PTR __Prefix$[ebp]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 12					; 0000000cH
	add	edi, ecx
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1522
	mov	edx, DWORD PTR [eax]
	sub	ebx, ecx
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	DWORD PTR __Buf$GSCopy$[ebp], edi
	mov	DWORD PTR __Count$GSCopy$[ebp], ebx
	push	edx
$LN94@Iput:
	mov	bl, BYTE PTR __Fill$GSCopy$[ebp]
	mov	eax, esi
	lea	edi, DWORD PTR $T105590[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
	mov	ebx, DWORD PTR __Count$GSCopy$[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	add	esp, 8
	xor	esi, esi
	mov	DWORD PTR __Dest$[ebp+4], edx
$LN1@Iput:
; Line 1526
	mov	ecx, DWORD PTR __Punct_fac$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	ecx
	push	edx
	push	ebx
	lea	ecx, DWORD PTR $T105591[ebp]
	mov	bl, al
	mov	eax, DWORD PTR __Buf$GSCopy$[ebp]
	push	ecx
	call	?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
	mov	ecx, DWORD PTR [eax]
; Line 1527
	mov	edx, DWORD PTR __Iosbase$GSCopy$[ebp]
; Line 1528
	mov	bl, BYTE PTR __Fill$GSCopy$[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	eax, DWORD PTR [eax+4]
	xor	edi, edi
	push	eax
	mov	DWORD PTR __Dest$[ebp+4], eax
	mov	DWORD PTR [edx+32], edi
	mov	DWORD PTR [edx+36], edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	eax, esi
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	add	esp, 24					; 00000018H
	cmp	DWORD PTR __Grouping$[ebp+20], 16	; 00000010H
	jb	SHORT $LN86@Iput
	mov	edx, DWORD PTR __Grouping$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN86@Iput:
	mov	eax, edi
; Line 1529
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z$0:
	lea	ecx, DWORD PTR $T105580[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z$1:
	lea	ecx, DWORD PTR __Grouping$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
PUBLIC	__Count$GSCopy$
PUBLIC	__Buf$GSCopy$
PUBLIC	__Iosbase$GSCopy$
PUBLIC	__Afterpoint$GSCopy$
PUBLIC	__Trailing$GSCopy$
PUBLIC	__Fill$GSCopy$
PUBLIC	__Beforepoint$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$2
__ehfuncinfo$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z
_TEXT	SEGMENT
$T105788 = -132						; size = 4
__Iosbase$GSCopy$ = -128				; size = 4
$T105806 = -124						; size = 8
$T105805 = -124						; size = 8
$T105804 = -124						; size = 8
$T105801 = -124						; size = 8
$T105800 = -124						; size = 8
$T105799 = -124						; size = 8
$T105798 = -124						; size = 8
__Punct_fac$ = -120					; size = 4
$T105797 = -116						; size = 8
$T105796 = -116						; size = 8
$T105795 = -116						; size = 8
$T105794 = -116						; size = 8
$T105793 = -116						; size = 8
tv840 = -112						; size = 4
__Pointptr$ = -112					; size = 4
__Afterpoint$GSCopy$ = -108				; size = 4
$T105823 = -104						; size = 4
__Prefix$ = -104					; size = 4
__Enders$ = -100					; size = 3
__Beforepoint$GSCopy$ = -96				; size = 4
__Trailing$GSCopy$ = -92				; size = 4
__Lock$105832 = -88					; size = 4
__Fillcount$ = -88					; size = 4
__Eptr$ = -88						; size = 4
__Count$GSCopy$ = -84					; size = 4
__Buf$GSCopy$ = -80					; size = 4
__Kseparator$ = -74					; size = 1
__Fill$GSCopy$ = -73					; size = 1
__Grouping$ = -72					; size = 28
__Groupstring$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Fill$ = 12						; size = 1
__Buf$ = 16						; size = 4
__Afterpoint$ = 20					; size = 4
__Trailing$ = 24					; size = 4
__Count$ = 28						; size = 4
__Dest$ = 32						; size = 8
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput, COMDAT
; __Iosbase$ = ecx
; __Beforepoint$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1333
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1337
	mov	al, BYTE PTR __Fill$[ebp]
	mov	ebx, DWORD PTR __Buf$[ebp]
	mov	DWORD PTR __Beforepoint$GSCopy$[ebp], edx
	mov	edx, DWORD PTR __Trailing$[ebp]
	mov	BYTE PTR __Fill$GSCopy$[ebp], al
	mov	eax, DWORD PTR __Afterpoint$[ebp]
	mov	DWORD PTR __Trailing$GSCopy$[ebp], edx
	mov	DWORD PTR __Afterpoint$GSCopy$[ebp], eax
	mov	eax, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR $T105788[ebp]
	push	edx
	mov	DWORD PTR __Iosbase$GSCopy$[ebp], ecx
	mov	DWORD PTR __Buf$GSCopy$[ebp], ebx
	mov	DWORD PTR __Count$GSCopy$[ebp], eax
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T105788[ebp]
	mov	DWORD PTR __Punct_fac$[ebp], edi
	test	eax, eax
	je	SHORT $LN31@Fput
; Line 1335
	mov	esi, eax
	push	0
	lea	ecx, DWORD PTR __Lock$105832[ebp]
	mov	DWORD PTR $T105823[ebp], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN33@Fput
	cmp	eax, -1
	jae	SHORT $LN33@Fput
	dec	eax
	mov	DWORD PTR [esi+4], eax
$LN33@Fput:
	mov	esi, DWORD PTR [esi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$105832[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, DWORD PTR $T105823[ebp]
	je	SHORT $LN31@Fput
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN31@Fput:
; Line 1336
	lea	esi, DWORD PTR __Grouping$[ebp]
	mov	ecx, edi
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
	mov	esi, 1
	mov	DWORD PTR __$EHRec$[ebp+8], esi
; Line 1337
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
; Line 1338
	xor	ecx, ecx
	mov	BYTE PTR __Kseparator$[ebp], al
	mov	DWORD PTR __Groupstring$[ebp+20], 15	; 0000000fH
	mov	DWORD PTR __Groupstring$[ebp+16], ecx
	mov	BYTE PTR __Groupstring$[ebp], cl
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1340
	mov	al, BYTE PTR [ebx]
	cmp	al, 43					; 0000002bH
	je	SHORT $LN19@Fput
	mov	DWORD PTR __Prefix$[ebp], ecx
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN20@Fput
$LN19@Fput:
	mov	DWORD PTR __Prefix$[ebp], esi
$LN20@Fput:
; Line 1343
	call	_localeconv
	mov	eax, DWORD PTR [eax]
; Line 1348
	mov	esi, DWORD PTR __Count$GSCopy$[ebp]
	mov	cl, BYTE PTR [eax]
	push	esi
	push	101					; 00000065H
	push	ebx
	mov	BYTE PTR __Enders$[ebp], cl
	mov	WORD PTR __Enders$[ebp+1], 101		; 00000065H
	call	_memchr
; Line 1350
	movsx	edx, BYTE PTR __Enders$[ebp]
	add	esp, 12					; 0000000cH
	push	esi
	push	edx
	push	ebx
	mov	DWORD PTR __Eptr$[ebp], eax
	call	_memchr
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Pointptr$[ebp], edi
; Line 1351
	test	edi, edi
	jne	SHORT $LN16@Fput
; Line 1352
	mov	DWORD PTR __Trailing$GSCopy$[ebp], eax
$LN16@Fput:
; Line 1354
	mov	ecx, DWORD PTR __Grouping$[ebp+20]
	mov	edx, DWORD PTR __Grouping$[ebp]
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN72@Fput
	lea	eax, DWORD PTR __Grouping$[ebp]
$LN72@Fput:
	cmp	BYTE PTR [eax], 127			; 0000007fH
	je	$LN97@Fput
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN78@Fput
	lea	eax, DWORD PTR __Grouping$[ebp]
$LN78@Fput:
	cmp	BYTE PTR [eax], 0
	jle	$LN97@Fput
; Line 1356
	push	esi
	mov	eax, ebx
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 1357
	mov	esi, DWORD PTR __Eptr$[ebp]
	test	esi, esi
	jne	SHORT $LN14@Fput
; Line 1358
	mov	eax, DWORD PTR __Trailing$GSCopy$[ebp]
	push	48					; 00000030H
	push	eax
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 1359
	jmp	SHORT $LN13@Fput
$LN14@Fput:
; Line 1361
	test	edi, edi
	jne	SHORT $LN12@Fput
; Line 1363
	mov	ecx, DWORD PTR __Beforepoint$GSCopy$[ebp]
	push	48					; 00000030H
	push	ecx
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 1364
	mov	DWORD PTR __Beforepoint$GSCopy$[ebp], edi
$LN12@Fput:
; Line 1366
	mov	edx, DWORD PTR __Trailing$GSCopy$[ebp]
	push	48					; 00000030H
	mov	edi, esi
	push	edx
	sub	edi, ebx
	lea	esi, DWORD PTR __Groupstring$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	edi, DWORD PTR __Pointptr$[ebp]
$LN13@Fput:
; Line 1371
	push	48					; 00000030H
	test	edi, edi
	jne	SHORT $LN11@Fput
	mov	eax, DWORD PTR __Beforepoint$GSCopy$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 1372
	jmp	SHORT $LN10@Fput
$LN11@Fput:
; Line 1374
	mov	ecx, DWORD PTR __Afterpoint$GSCopy$[ebp]
	sub	edi, ebx
	mov	DWORD PTR tv840[ebp], edi
	push	ecx
	lea	edi, DWORD PTR [edi+1]
	lea	esi, DWORD PTR __Groupstring$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1375
	mov	edx, DWORD PTR __Beforepoint$GSCopy$[ebp]
	mov	edi, DWORD PTR tv840[ebp]
	push	48					; 00000030H
	push	edx
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1376
	mov	DWORD PTR __Afterpoint$GSCopy$[ebp], 0
$LN10@Fput:
; Line 1380
	mov	ebx, DWORD PTR __Grouping$[ebp]
	mov	eax, 16					; 00000010H
	mov	DWORD PTR __Beforepoint$GSCopy$[ebp], 0
	cmp	DWORD PTR __Grouping$[ebp+20], eax
	jae	SHORT $LN84@Fput
	lea	ebx, DWORD PTR __Grouping$[ebp]
$LN84@Fput:
; Line 1381
	cmp	DWORD PTR __Groupstring$[ebp+20], eax
	mov	eax, DWORD PTR __Groupstring$[ebp]
	jae	SHORT $LN90@Fput
	lea	eax, DWORD PTR __Groupstring$[ebp]
$LN90@Fput:
	lea	ecx, DWORD PTR __Enders$[ebp]
	push	ecx
	push	eax
	call	_strcspn
	mov	edi, eax
; Line 1383
	mov	al, BYTE PTR [ebx]
	add	esp, 8
	cmp	al, 127					; 0000007fH
	je	SHORT $LN8@Fput
$LN9@Fput:
	test	al, al
	jle	SHORT $LN8@Fput
	mov	edx, edi
	sub	edx, DWORD PTR __Prefix$[ebp]
	movsx	eax, al
	cmp	eax, edx
	jae	SHORT $LN8@Fput
; Line 1385
	push	0
	sub	edi, eax
	push	1
	lea	esi, DWORD PTR __Groupstring$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1386
	cmp	BYTE PTR [ebx+1], 0
	jle	SHORT $LN7@Fput
	inc	ebx
$LN7@Fput:
; Line 1383
	mov	al, BYTE PTR [ebx]
	cmp	al, 127					; 0000007fH
	jne	SHORT $LN9@Fput
$LN8@Fput:
; Line 1390
	cmp	DWORD PTR __Groupstring$[ebp+20], 16	; 00000010H
	jb	SHORT $LN95@Fput
	mov	eax, DWORD PTR __Groupstring$[ebp]
	mov	DWORD PTR __Buf$GSCopy$[ebp], eax
	jmp	SHORT $LN96@Fput
$LN95@Fput:
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	mov	DWORD PTR __Buf$GSCopy$[ebp], ecx
$LN96@Fput:
; Line 1392
	mov	edx, DWORD PTR __Groupstring$[ebp+16]
	mov	ebx, DWORD PTR __Buf$GSCopy$[ebp]
	mov	DWORD PTR __Trailing$GSCopy$[ebp], 0
	mov	DWORD PTR __Count$GSCopy$[ebp], edx
	mov	esi, edx
$LN97@Fput:
; Line 1395
	mov	eax, DWORD PTR __Trailing$GSCopy$[ebp]
; Line 1398
	mov	edx, DWORD PTR __Iosbase$GSCopy$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	add	eax, esi
	add	eax, DWORD PTR __Afterpoint$GSCopy$[ebp]
	add	eax, DWORD PTR __Beforepoint$GSCopy$[ebp]
	cmp	DWORD PTR [edx+36], 0
	jl	SHORT $LN21@Fput
	jg	SHORT $LN159@Fput
	test	ecx, ecx
	je	SHORT $LN21@Fput
$LN159@Fput:
	cmp	ecx, eax
	jbe	SHORT $LN21@Fput
	sub	ecx, eax
	mov	edi, ecx
	mov	DWORD PTR __Fillcount$[ebp], edi
	jmp	SHORT $LN22@Fput
$LN21@Fput:
	mov	DWORD PTR __Fillcount$[ebp], 0
	mov	edi, DWORD PTR __Fillcount$[ebp]
$LN22@Fput:
; Line 1400
	mov	eax, DWORD PTR [edx+20]
	and	eax, 448				; 000001c0H
; Line 1402
	cmp	eax, 64					; 00000040H
	je	$LN4@Fput
	cmp	eax, 256				; 00000100H
	je	SHORT $LN158@Fput
; Line 1404
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	bl, BYTE PTR __Fill$GSCopy$[ebp]
	push	ecx
	mov	eax, edi
	push	edx
	lea	edi, DWORD PTR $T105793[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1405
	jmp	SHORT $LN167@Fput
$LN158@Fput:
; Line 1409
	cmp	DWORD PTR __Prefix$[ebp], 0
	jbe	SHORT $LN3@Fput
; Line 1411
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T105794[ebp]
	push	edx
	mov	eax, 1
	mov	ecx, ebx
	call	?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
	mov	ecx, DWORD PTR [eax]
; Line 1412
	inc	ebx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	dec	esi
	mov	DWORD PTR __Dest$[ebp+4], edx
	mov	DWORD PTR __Buf$GSCopy$[ebp], ebx
	mov	DWORD PTR __Count$GSCopy$[ebp], esi
$LN3@Fput:
; Line 1414
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	bl, BYTE PTR __Fill$GSCopy$[ebp]
	push	eax
	mov	eax, edi
	push	ecx
	lea	edi, DWORD PTR $T105795[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], eax
$LN167@Fput:
; Line 1415
	mov	esi, DWORD PTR __Count$GSCopy$[ebp]
	mov	ebx, DWORD PTR __Buf$GSCopy$[ebp]
	mov	DWORD PTR __Fillcount$[ebp], 0
	add	esp, 8
$LN4@Fput:
; Line 1419
	movsx	ecx, BYTE PTR __Enders$[ebp]
	push	esi
	push	ecx
	push	ebx
	call	_memchr
	add	esp, 12					; 0000000cH
; Line 1420
	test	eax, eax
	je	$LN2@Fput
; Line 1423
	mov	edx, DWORD PTR __Dest$[ebp+4]
	sub	eax, ebx
	mov	bl, BYTE PTR __Kseparator$[ebp]
	lea	esi, DWORD PTR [eax+1]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR __Buf$GSCopy$[ebp]
	lea	ecx, DWORD PTR [esi-1]
	push	ecx
	lea	edx, DWORD PTR $T105796[ebp]
	push	edx
	call	?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1424
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Beforepoint$GSCopy$[ebp]
	push	ecx
	push	edx
	mov	bl, 48					; 00000030H
	lea	edi, DWORD PTR $T105797[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
; Line 1425
	mov	ecx, DWORD PTR __Punct_fac$[ebp]
	mov	DWORD PTR __Dest$[ebp+4], edx
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 24					; 00000018H
	call	edx
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	bl, al
	mov	eax, DWORD PTR __Dest$[ebp+4]
	push	eax
	push	ecx
	mov	eax, 1
	lea	edi, DWORD PTR $T105798[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], ecx
; Line 1426
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	push	eax
	mov	eax, DWORD PTR __Afterpoint$GSCopy$[ebp]
	mov	bl, 48					; 00000030H
	lea	edi, DWORD PTR $T105799[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
; Line 1427
	add	DWORD PTR __Buf$GSCopy$[ebp], esi
	mov	ebx, DWORD PTR __Buf$GSCopy$[ebp]
	add	esp, 16					; 00000010H
	sub	DWORD PTR __Count$GSCopy$[ebp], esi
	mov	esi, DWORD PTR __Count$GSCopy$[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
$LN2@Fput:
; Line 1431
	push	esi
	push	101					; 00000065H
	push	ebx
	call	_memchr
	add	esp, 12					; 0000000cH
; Line 1432
	test	eax, eax
	je	$LN1@Fput
; Line 1435
	mov	ecx, DWORD PTR __Dest$[ebp]
	sub	eax, ebx
	mov	bl, BYTE PTR __Kseparator$[ebp]
	lea	esi, DWORD PTR [eax+1]
	mov	eax, DWORD PTR __Dest$[ebp+4]
	push	eax
	push	ecx
	lea	edx, DWORD PTR [esi-1]
	push	edx
	lea	eax, DWORD PTR $T105800[ebp]
	push	eax
	mov	eax, DWORD PTR __Buf$GSCopy$[ebp]
	call	?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1436
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Trailing$GSCopy$[ebp]
	push	ecx
	push	edx
	mov	bl, 48					; 00000030H
	lea	edi, DWORD PTR $T105801[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
; Line 1438
	mov	ecx, DWORD PTR __Iosbase$GSCopy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 24					; 00000018H
	test	BYTE PTR [ecx+20], 4
	mov	DWORD PTR __Dest$[ebp+4], edx
	mov	DWORD PTR __Trailing$GSCopy$[ebp], 0
	mov	ecx, OFFSET ??_C@_01DDCIFGEA@E?$AA@
	jne	SHORT $LN24@Fput
	mov	ecx, OFFSET ??_C@_01KGKMHCOC@e?$AA@
$LN24@Fput:
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	push	eax
	lea	edx, DWORD PTR $T105804[ebp]
	push	edx
	mov	eax, 1
	call	?_Putc@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putc
	mov	ecx, DWORD PTR [eax]
; Line 1439
	add	DWORD PTR __Buf$GSCopy$[ebp], esi
	add	esp, 12					; 0000000cH
	sub	DWORD PTR __Count$GSCopy$[ebp], esi
	mov	esi, DWORD PTR __Count$GSCopy$[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
$LN1@Fput:
; Line 1443
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	bl, BYTE PTR __Kseparator$[ebp]
	push	eax
	mov	eax, DWORD PTR __Buf$GSCopy$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T105805[ebp]
	push	esi
	push	edx
	call	?_Putgrouped@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDID@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Putgrouped
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Dest$[ebp+4], edx
; Line 1444
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Trailing$GSCopy$[ebp]
	push	ecx
	push	edx
	mov	bl, 48					; 00000030H
	lea	edi, DWORD PTR $T105806[ebp]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
; Line 1445
	mov	edx, DWORD PTR __Iosbase$GSCopy$[ebp]
; Line 1446
	mov	bl, BYTE PTR __Fill$GSCopy$[ebp]
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	DWORD PTR __Dest$[ebp+4], eax
	mov	eax, DWORD PTR __Fillcount$[ebp]
	xor	esi, esi
	push	ecx
	mov	DWORD PTR [edx+32], esi
	mov	DWORD PTR [edx+36], esi
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	esi, 16					; 00000010H
	add	esp, 32					; 00000020H
	cmp	DWORD PTR __Groupstring$[ebp+20], esi
	jb	SHORT $LN123@Fput
	mov	eax, DWORD PTR __Groupstring$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN123@Fput:
	xor	eax, eax
	mov	DWORD PTR __Groupstring$[ebp+20], 15	; 0000000fH
	mov	DWORD PTR __Groupstring$[ebp+16], eax
	mov	BYTE PTR __Groupstring$[ebp], al
	cmp	DWORD PTR __Grouping$[ebp+20], esi
	jb	SHORT $LN160@Fput
	mov	ecx, DWORD PTR __Grouping$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN160@Fput:
	mov	eax, edi
; Line 1447
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$0:
	lea	ecx, DWORD PTR $T105788[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$1:
	lea	ecx, DWORD PTR __Grouping$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z$2:
	lea	ecx, DWORD PTR __Groupstring$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1959
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1960
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, eax
	cmp	ebx, 2147483646				; 7ffffffeH
	jbe	SHORT $LN6@Grow@2
; Line 1961
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN51@Grow@2:
$LN6@Grow@2:
; Line 1962
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow@2
; Line 1963
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	push	esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN5@Grow@2:
; Line 1964
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow@2
	cmp	ebx, 8
	jae	SHORT $LN3@Grow@2
; Line 1966
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow@2
	mov	edi, ebx
$LN9@Grow@2:
	cmp	eax, 8
	jb	SHORT $LN32@Grow@2
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow@2
	lea	ecx, DWORD PTR [edi+edi]
	push	ecx
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow@2:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN32@Grow@2:
	xor	edx, edx
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 7
; Line 1969
	xor	ecx, ecx
	mov	WORD PTR [esi+edi*2], dx
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN3@Grow@2:
; Line 1967
	test	ebx, ebx
	jne	SHORT $LN48@Grow@2
; Line 1968
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 8
	jb	SHORT $LN46@Grow@2
	mov	esi, DWORD PTR [esi]
$LN46@Grow@2:
	xor	eax, eax
	mov	WORD PTR [esi], ax
$LN48@Grow@2:
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN50@Grow@2:
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 911
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 917
	mov	ebx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN85@assign@3
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN12@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@assign@3
$LN12@assign@3:
	mov	eax, esi
$LN13@assign@3:
	cmp	ebx, eax
	jb	SHORT $LN85@assign@3
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN16@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@assign@3
$LN16@assign@3:
	mov	eax, esi
$LN17@assign@3:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN85@assign@3
; Line 918
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN20@assign@3
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 918
$LN20@assign@3:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
$LN85@assign@3:
	push	edi
; Line 920
	mov	edi, DWORD PTR __Count$[ebp]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN27@assign@3
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN89@assign@3:
$LN27@assign@3:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN26@assign@3
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN82@assign@3
$LN88@assign@3:
; Line 922
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN72@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN73@assign@3
; Line 920
$LN26@assign@3:
	test	edi, edi
	jne	SHORT $LN88@assign@3
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN65@assign@3
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 925
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 920
$LN65@assign@3:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 922
$LN72@assign@3:
	mov	eax, esi
$LN73@assign@3:
	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 923
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN80@assign@3
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 925
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 923
$LN80@assign@3:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN82@assign@3:
; Line 925
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
$LN86@assign@3:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; __Right$ = eax
; Line 764
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 765
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@DDH@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$codecvt@DDH@std@@MAEPAXI@Z PROC			; std::codecvt<char,char,int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN10@scalar@14
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@14:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$codecvt@DDH@std@@MAEPAXI@Z ENDP			; std::codecvt<char,char,int>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z
_TEXT	SEGMENT
__Buf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 4
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1298
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
; Line 1302
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	mov	edi, DWORD PTR __Iosbase$[ebp]
	push	ecx
	push	edx
	push	eax
	push	OFFSET ??_C@_02BBAHNLBA@?$CFp?$AA@
	lea	eax, DWORD PTR __Buf$[esp+96]
	push	64					; 00000040H
	push	eax
	call	_sprintf_s
	mov	ecx, DWORD PTR __Fill$[ebp]
	add	esp, 16					; 00000010H
	push	eax
	push	ecx
	push	esi
	lea	edx, DWORD PTR __Buf$[esp+100]
	mov	ecx, edi
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
; Line 1303
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	add	esp, 20					; 00000014H
	pop	edi
	mov	eax, esi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBX@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__real@38aa95a5b7f87a0f
PUBLIC	__real@4202a05f20000000
PUBLIC	__real@4733426172c74d82
PUBLIC	__real@0000000000000000
PUBLIC	__Iosbase$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	__fltused:DWORD
;	COMDAT __real@38aa95a5b7f87a0f
CONST	SEGMENT
__real@38aa95a5b7f87a0f DQ 038aa95a5b7f87a0fr	; 1e-035
CONST	ENDS
;	COMDAT __real@4202a05f20000000
CONST	SEGMENT
__real@4202a05f20000000 DQ 04202a05f20000000r	; 1e+010
CONST	ENDS
;	COMDAT __real@4733426172c74d82
CONST	SEGMENT
__real@4733426172c74d82 DQ 04733426172c74d82r	; 1e+035
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DO@Z
_TEXT	SEGMENT
__Signed$91909 = -141					; size = 1
__Significance$ = -140					; size = 4
__Iosbase$GSCopy$ = -136				; size = 4
___$ReturnUdt$GSCopy$ = -132				; size = 4
__Fmt$ = -128						; size = 8
__Buf$ = -120						; size = 108
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 8
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DO@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1257
	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+180], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	push	ebx
; Line 1293
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+184], eax
	mov	eax, DWORD PTR [ecx+28]
	push	esi
	mov	esi, DWORD PTR [ecx+24]
	push	edi
	mov	DWORD PTR __Iosbase$GSCopy$[esp+192], ecx
	test	eax, eax
	jg	SHORT $LN13@do_put
; Line 1261
	jl	SHORT $LN43@do_put
	test	esi, esi
	jne	SHORT $LN13@do_put
$LN43@do_put:
	test	DWORD PTR [ecx+20], 8192		; 00002000H
	jne	SHORT $LN13@do_put
	mov	esi, 6
	xor	eax, eax
$LN13@do_put:
	mov	ecx, eax
; Line 1263
	test	ecx, ecx
	jl	SHORT $LN15@do_put
	jg	SHORT $LN44@do_put
	cmp	esi, 36					; 00000024H
	jbe	SHORT $LN15@do_put
$LN44@do_put:
	mov	DWORD PTR __Significance$[esp+192], 36	; 00000024H
	jmp	SHORT $LN16@do_put
$LN15@do_put:
	mov	DWORD PTR __Significance$[esp+192], esi
$LN16@do_put:
; Line 1264
	mov	eax, DWORD PTR __Significance$[esp+192]
	cdq
	sub	esi, eax
	sbb	ecx, edx
; Line 1268
	mov	edx, DWORD PTR __Iosbase$GSCopy$[esp+192]
	mov	edx, DWORD PTR [edx+20]
	mov	eax, edx
	and	eax, 12288				; 00003000H
	xor	ebx, ebx
	xor	edi, edi
	cmp	eax, 8192				; 00002000H
	jne	$LN48@do_put
; Line 1270
	fldz
	fld	QWORD PTR __Val$[ebp]
	fcom	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN17@do_put
	mov	BYTE PTR __Signed$91909[esp+192], 1
; Line 1272
	fchs
$LN9@do_put:
; Line 1274
	fld	QWORD PTR __real@4733426172c74d82
	fcom	ST(1)
	fnstsw	ax
	fld	QWORD PTR __real@4202a05f20000000
	test	ah, 65					; 00000041H
	jnp	SHORT $LN8@do_put
$LN55@do_put:
	fstp	ST(1)
	jmp	SHORT $LN6@do_put
$LN17@do_put:
; Line 1270
	mov	BYTE PTR __Signed$91909[esp+192], bl
; Line 1271
	jmp	SHORT $LN9@do_put
$LN61@do_put:
; Line 1274
	fxch	ST(1)
$LN8@do_put:
	cmp	ebx, 5000				; 00001388H
	jae	SHORT $LN55@do_put
; Line 1275
	fdiv	ST(2), ST(0)
	add	ebx, 10					; 0000000aH
	fxch	ST(1)
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jnp	SHORT $LN61@do_put
; Line 1274
	fstp	ST(0)
$LN6@do_put:
; Line 1277
	fxch	ST(2)
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN63@do_put
; Line 1279
	test	ecx, ecx
	jl	SHORT $LN63@do_put
	jg	SHORT $LN47@do_put
	cmp	esi, 10					; 0000000aH
	jb	SHORT $LN63@do_put
$LN47@do_put:
	fld	QWORD PTR __real@38aa95a5b7f87a0f
	jmp	SHORT $LN45@do_put
$LN86@do_put:
	fxch	ST(1)
$LN45@do_put:
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN74@do_put
	cmp	edi, 5000				; 00001388H
	jae	SHORT $LN74@do_put
; Line 1282
	add	esi, -10				; fffffff6H
	fxch	ST(1)
	adc	ecx, -1
	fmul	ST(0), ST(2)
	add	edi, 10					; 0000000aH
	test	ecx, ecx
	jg	SHORT $LN86@do_put
; Line 1279
	jl	SHORT $LN85@do_put
	cmp	esi, 10					; 0000000aH
	jae	SHORT $LN86@do_put
$LN85@do_put:
	fstp	ST(1)
$LN63@do_put:
; Line 1285
	cmp	BYTE PTR __Signed$91909[esp+192], 0
	fstp	ST(1)
	je	SHORT $LN1@do_put
; Line 1286
	fchs
	jmp	SHORT $LN1@do_put
$LN74@do_put:
; Line 1279
	fstp	ST(0)
	jmp	SHORT $LN63@do_put
$LN48@do_put:
; Line 1286
	fld	QWORD PTR __Val$[ebp]
$LN1@do_put:
; Line 1293
	mov	BYTE PTR __Fmt$[esp+192], 37		; 00000025H
	lea	eax, DWORD PTR __Fmt$[esp+193]
	test	dl, 32					; 00000020H
	je	SHORT $LN31@do_put
	mov	BYTE PTR __Fmt$[esp+193], 43		; 0000002bH
	lea	eax, DWORD PTR __Fmt$[esp+194]
$LN31@do_put:
	test	dl, 16					; 00000010H
	je	SHORT $LN30@do_put
	mov	BYTE PTR [eax], 35			; 00000023H
	inc	eax
$LN30@do_put:
	and	edx, 12288				; 00003000H
	mov	WORD PTR [eax], 10798			; 00002a2eH
	mov	BYTE PTR [eax+2], 76			; 0000004cH
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN36@do_put
	mov	cl, 102					; 00000066H
	jmp	SHORT $LN35@do_put
$LN36@do_put:
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN34@do_put
	mov	cl, 97					; 00000061H
	jmp	SHORT $LN35@do_put
$LN34@do_put:
	cmp	edx, 4096				; 00001000H
	setne	cl
	lea	ecx, DWORD PTR [ecx+ecx+101]
$LN35@do_put:
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	BYTE PTR [eax+3], cl
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	push	ecx
	push	edx
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	BYTE PTR [eax+4], 0
	mov	eax, DWORD PTR __Significance$[esp+208]
	push	eax
	lea	ecx, DWORD PTR __Fmt$[esp+212]
	push	ecx
	lea	edx, DWORD PTR __Buf$[esp+216]
	push	108					; 0000006cH
	push	edx
	call	_sprintf_s
	mov	ecx, DWORD PTR __Fill$[ebp]
	add	esp, 24					; 00000018H
	push	eax
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$GSCopy$[esp+208]
	push	edi
	lea	eax, DWORD PTR __Buf$[esp+212]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR __Iosbase$GSCopy$[esp+220]
	push	esi
	mov	edx, ebx
	call	?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
; Line 1294
	mov	ecx, DWORD PTR __$ArrayPad$[esp+224]
	add	esp, 32					; 00000020H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DO@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	__Iosbase$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DN@Z
_TEXT	SEGMENT
__Signed$91886 = -141					; size = 1
__Significance$ = -140					; size = 4
__Iosbase$GSCopy$ = -136				; size = 4
___$ReturnUdt$GSCopy$ = -132				; size = 4
__Fmt$ = -128						; size = 8
__Buf$ = -120						; size = 108
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 8
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DN@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1215
	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+180], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	push	ebx
; Line 1252
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+184], eax
	mov	eax, DWORD PTR [ecx+28]
	push	esi
	mov	esi, DWORD PTR [ecx+24]
	push	edi
	mov	DWORD PTR __Iosbase$GSCopy$[esp+192], ecx
	test	eax, eax
	jg	SHORT $LN13@do_put@2
; Line 1219
	jl	SHORT $LN43@do_put@2
	test	esi, esi
	jne	SHORT $LN13@do_put@2
$LN43@do_put@2:
	test	DWORD PTR [ecx+20], 8192		; 00002000H
	jne	SHORT $LN13@do_put@2
	mov	esi, 6
	xor	eax, eax
$LN13@do_put@2:
	mov	ecx, eax
; Line 1221
	test	ecx, ecx
	jl	SHORT $LN15@do_put@2
	jg	SHORT $LN44@do_put@2
	cmp	esi, 36					; 00000024H
	jbe	SHORT $LN15@do_put@2
$LN44@do_put@2:
	mov	DWORD PTR __Significance$[esp+192], 36	; 00000024H
	jmp	SHORT $LN16@do_put@2
$LN15@do_put@2:
	mov	DWORD PTR __Significance$[esp+192], esi
$LN16@do_put@2:
; Line 1222
	mov	eax, DWORD PTR __Significance$[esp+192]
; Line 1227
	fld	QWORD PTR __Val$[ebp]
	cdq
	sub	esi, eax
	sbb	ecx, edx
	mov	edx, DWORD PTR __Iosbase$GSCopy$[esp+192]
	mov	edx, DWORD PTR [edx+20]
	mov	eax, edx
	and	eax, 12288				; 00003000H
	xor	ebx, ebx
	xor	edi, edi
	cmp	eax, 8192				; 00002000H
	jne	$LN1@do_put@2
	fld	QWORD PTR __real@3fe0000000000000
	fmul	ST(0), ST(1)
	fld	ST(1)
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN1@do_put@2
; Line 1229
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN17@do_put@2
; Line 1231
	fxch	ST(1)
	mov	BYTE PTR __Signed$91886[esp+192], 1
	fchs
	jmp	SHORT $LN9@do_put@2
$LN17@do_put@2:
; Line 1229
	mov	BYTE PTR __Signed$91886[esp+192], bl
; Line 1245
	fxch	ST(1)
$LN9@do_put@2:
; Line 1233
	fld	QWORD PTR __real@4733426172c74d82
	fcom	ST(1)
	fnstsw	ax
	fld	QWORD PTR __real@4202a05f20000000
	test	ah, 65					; 00000041H
	jnp	SHORT $LN8@do_put@2
$LN58@do_put@2:
	fstp	ST(1)
	jmp	SHORT $LN6@do_put@2
$LN64@do_put@2:
	fxch	ST(1)
$LN8@do_put@2:
	cmp	ebx, 5000				; 00001388H
	jae	SHORT $LN58@do_put@2
; Line 1234
	fdiv	ST(2), ST(0)
	add	ebx, 10					; 0000000aH
	fxch	ST(1)
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jnp	SHORT $LN64@do_put@2
; Line 1233
	fstp	ST(0)
$LN6@do_put@2:
; Line 1236
	fxch	ST(2)
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN66@do_put@2
; Line 1238
	test	ecx, ecx
	jl	SHORT $LN66@do_put@2
	jg	SHORT $LN47@do_put@2
	cmp	esi, 10					; 0000000aH
	jb	SHORT $LN66@do_put@2
$LN47@do_put@2:
	fld	QWORD PTR __real@38aa95a5b7f87a0f
	jmp	SHORT $LN45@do_put@2
$LN89@do_put@2:
	fxch	ST(1)
$LN45@do_put@2:
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN77@do_put@2
	cmp	edi, 5000				; 00001388H
	jae	SHORT $LN77@do_put@2
; Line 1241
	add	esi, -10				; fffffff6H
	fxch	ST(1)
	adc	ecx, -1
	fmul	ST(0), ST(2)
	add	edi, 10					; 0000000aH
	test	ecx, ecx
	jg	SHORT $LN89@do_put@2
; Line 1238
	jl	SHORT $LN88@do_put@2
	cmp	esi, 10					; 0000000aH
	jae	SHORT $LN89@do_put@2
$LN88@do_put@2:
	fstp	ST(1)
$LN66@do_put@2:
; Line 1244
	cmp	BYTE PTR __Signed$91886[esp+192], 0
	fstp	ST(1)
	je	SHORT $LN1@do_put@2
; Line 1245
	fchs
$LN1@do_put@2:
; Line 1252
	mov	BYTE PTR __Fmt$[esp+192], 37		; 00000025H
	lea	eax, DWORD PTR __Fmt$[esp+193]
	test	dl, 32					; 00000020H
	je	SHORT $LN31@do_put@2
	mov	BYTE PTR __Fmt$[esp+193], 43		; 0000002bH
	lea	eax, DWORD PTR __Fmt$[esp+194]
$LN31@do_put@2:
	test	dl, 16					; 00000010H
	je	SHORT $LN30@do_put@2
	mov	BYTE PTR [eax], 35			; 00000023H
	inc	eax
$LN30@do_put@2:
	and	edx, 12288				; 00003000H
	mov	WORD PTR [eax], 10798			; 00002a2eH
	cmp	edx, 8192				; 00002000H
	jne	SHORT $LN36@do_put@2
	mov	cl, 102					; 00000066H
	jmp	SHORT $LN35@do_put@2
$LN77@do_put@2:
; Line 1238
	fstp	ST(0)
	jmp	SHORT $LN66@do_put@2
; Line 1252
$LN36@do_put@2:
	cmp	edx, 12288				; 00003000H
	jne	SHORT $LN34@do_put@2
	mov	cl, 97					; 00000061H
	jmp	SHORT $LN35@do_put@2
$LN34@do_put@2:
	cmp	edx, 4096				; 00001000H
	setne	cl
	lea	ecx, DWORD PTR [ecx+ecx+101]
$LN35@do_put@2:
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	BYTE PTR [eax+2], cl
	mov	ecx, DWORD PTR __Dest$[ebp+4]
	push	ecx
	push	edx
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	BYTE PTR [eax+3], 0
	mov	eax, DWORD PTR __Significance$[esp+208]
	push	eax
	lea	ecx, DWORD PTR __Fmt$[esp+212]
	push	ecx
	lea	edx, DWORD PTR __Buf$[esp+216]
	push	108					; 0000006cH
	push	edx
	call	_sprintf_s
	mov	ecx, DWORD PTR __Fill$[ebp]
	add	esp, 24					; 00000018H
	push	eax
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$GSCopy$[esp+208]
	push	edi
	lea	eax, DWORD PTR __Buf$[esp+212]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR __Iosbase$GSCopy$[esp+220]
	push	esi
	mov	edx, ebx
	call	?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPBDIIII@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
; Line 1253
	mov	ecx, DWORD PTR __$ArrayPad$[esp+224]
	add	esp, 32					; 00000020H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DN@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z
_TEXT	SEGMENT
__Fmt$ = -80						; size = 8
__Buf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 8
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1204
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
; Line 1209
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Iosbase$[ebp]
	mov	edx, DWORD PTR [ebx+20]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	push	eax
	mov	eax, DWORD PTR __Val$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	push	eax
	push	ecx
	mov	edi, OFFSET ??_C@_02CLHGNPPK@Lu?$AA@
	lea	eax, DWORD PTR __Fmt$[esp+112]
	call	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
	push	eax
	lea	edx, DWORD PTR __Buf$[esp+116]
	push	64					; 00000040H
	push	edx
	call	_sprintf_s
	add	esp, 20					; 00000014H
	push	eax
	mov	eax, DWORD PTR __Fill$[ebp]
	push	eax
	push	esi
	lea	edx, DWORD PTR __Buf$[esp+116]
	mov	ecx, ebx
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
; Line 1210
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 20					; 00000014H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_J@Z
_TEXT	SEGMENT
__Fmt$ = -80						; size = 8
__Buf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 8
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_J@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1194
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
; Line 1199
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Iosbase$[ebp]
	mov	edx, DWORD PTR [ebx+20]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	push	eax
	mov	eax, DWORD PTR __Val$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	push	eax
	push	ecx
	mov	edi, OFFSET ??_C@_02HIKPPMOK@Ld?$AA@
	lea	eax, DWORD PTR __Fmt$[esp+112]
	call	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
	push	eax
	lea	edx, DWORD PTR __Buf$[esp+116]
	push	64					; 00000040H
	push	edx
	call	_sprintf_s
	add	esp, 20					; 00000014H
	push	eax
	mov	eax, DWORD PTR __Fill$[ebp]
	push	eax
	push	esi
	lea	edx, DWORD PTR __Buf$[esp+116]
	mov	ecx, ebx
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
; Line 1200
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 20					; 00000014H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_J@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z
_TEXT	SEGMENT
__Fmt$ = -80						; size = 6
__Buf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 4
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1183
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
; Line 1188
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Iosbase$[ebp]
	mov	edx, DWORD PTR [ebx+20]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	ecx
	push	eax
	mov	edi, OFFSET ??_C@_02BDDLJJBK@lu?$AA@
	lea	eax, DWORD PTR __Fmt$[esp+108]
	call	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
	push	eax
	lea	ecx, DWORD PTR __Buf$[esp+112]
	push	64					; 00000040H
	push	ecx
	call	_sprintf_s
	mov	edx, DWORD PTR __Fill$[ebp]
	add	esp, 16					; 00000010H
	push	eax
	push	edx
	push	esi
	lea	edx, DWORD PTR __Buf$[esp+116]
	mov	ecx, ebx
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
; Line 1189
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 20					; 00000014H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z
_TEXT	SEGMENT
__Fmt$ = -80						; size = 6
__Buf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 4
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
; Line 1178
	mov	eax, DWORD PTR __Dest$[ebp+4]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Iosbase$[ebp]
	mov	edx, DWORD PTR [ebx+20]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	ecx
	push	eax
	mov	edi, OFFSET ??_C@_02EAOCLKAK@ld?$AA@
	lea	eax, DWORD PTR __Fmt$[esp+108]
	call	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAPADPADPBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
	push	eax
	lea	ecx, DWORD PTR __Buf$[esp+112]
	push	64					; 00000040H
	push	ecx
	call	_sprintf_s
	mov	edx, DWORD PTR __Fill$[ebp]
	add	esp, 16					; 00000010H
	push	eax
	push	edx
	push	esi
	lea	edx, DWORD PTR __Buf$[esp+116]
	mov	ecx, ebx
	call	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DPADI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
; Line 1179
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 20					; 00000014H
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
__Dest$91696 = -48					; size = 4
__Str$91700 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ebx, ecx
; Line 588
	cmp	DWORD PTR [ebx+68], 0
	je	$LN14@Endwrite
	cmp	BYTE PTR [ebx+73], 0
	je	$LN14@Endwrite
; Line 594
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	call	edx
	cmp	eax, -1
; Line 595
	je	$LN304@Endwrite
; Line 597
	mov	ecx, 15					; 0000000fH
	xor	eax, eax
	mov	BYTE PTR __Str$91700[ebp], 0
	mov	DWORD PTR __Str$91700[ebp+20], ecx
	mov	DWORD PTR __Str$91700[ebp], eax
	mov	DWORD PTR __Str$91700[ebp+4], eax
	mov	DWORD PTR __Str$91700[ebp+16], 8
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN126@Endwrite
	lea	eax, DWORD PTR __Str$91700[ebp]
$LN126@Endwrite:
	mov	BYTE PTR [eax+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN303@Endwrite:
	mov	edi, DWORD PTR __Str$91700[ebp+20]
	mov	eax, DWORD PTR __Str$91700[ebp]
$LN11@Endwrite:
; Line 600
	mov	edx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN157@Endwrite
	lea	edx, DWORD PTR __Str$91700[ebp]
	mov	eax, edx
$LN157@Endwrite:
	add	edx, DWORD PTR __Str$91700[ebp+16]
	mov	ecx, DWORD PTR [ebx+68]
	mov	esi, DWORD PTR [ecx]
	lea	edi, DWORD PTR __Dest$91696[ebp]
	push	edi
	push	edx
	push	eax
	lea	eax, DWORD PTR [ebx+76]
	push	eax
	mov	eax, DWORD PTR [esi+24]
	call	eax
	sub	eax, 0
	je	SHORT $LN7@Endwrite
	dec	eax
	je	SHORT $LN6@Endwrite
	sub	eax, 2
; Line 622
	lea	ecx, DWORD PTR __Str$91700[ebp]
	je	$LN2@Endwrite
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	xor	al, al
	jmp	$LN13@Endwrite
$LN7@Endwrite:
; Line 603
	mov	BYTE PTR [ebx+73], 0
$LN6@Endwrite:
; Line 607
	mov	edi, DWORD PTR __Str$91700[ebp+20]
	mov	eax, DWORD PTR __Str$91700[ebp]
	mov	edx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN178@Endwrite
	lea	edx, DWORD PTR __Str$91700[ebp]
$LN178@Endwrite:
	mov	esi, DWORD PTR __Dest$91696[ebp]
	sub	esi, edx
; Line 609
	je	SHORT $LN5@Endwrite
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN197@Endwrite
	lea	eax, DWORD PTR __Str$91700[ebp]
$LN197@Endwrite:
	mov	ecx, DWORD PTR [ebx+84]
	push	ecx
	push	esi
	push	1
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jne	$LN290@Endwrite
	mov	edi, DWORD PTR __Str$91700[ebp+20]
	mov	eax, DWORD PTR __Str$91700[ebp]
$LN5@Endwrite:
; Line 611
	cmp	BYTE PTR [ebx+73], 0
	je	$LN291@Endwrite
; Line 613
	test	esi, esi
	jne	$LN11@Endwrite
; Line 614
	mov	ecx, DWORD PTR __Str$91700[ebp+16]
	or	edx, -1
	sub	edx, ecx
	cmp	edx, 8
	jbe	$LN292@Endwrite
	lea	esi, DWORD PTR [ecx+8]
	cmp	esi, -2					; fffffffeH
	ja	$LN292@Endwrite
	cmp	edi, esi
	jae	SHORT $LN222@Endwrite
	push	ecx
	push	esi
	lea	ecx, DWORD PTR __Str$91700[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edi, DWORD PTR __Str$91700[ebp+20]
	mov	eax, DWORD PTR __Str$91700[ebp]
	test	esi, esi
	je	$LN11@Endwrite
$LN302@Endwrite:
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN278@Endwrite
	lea	ecx, DWORD PTR __Str$91700[ebp]
$LN278@Endwrite:
	mov	edx, DWORD PTR __Str$91700[ebp+16]
	xor	eax, eax
	mov	DWORD PTR [ecx+edx], eax
	mov	DWORD PTR [ecx+edx+4], eax
	cmp	DWORD PTR __Str$91700[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$91700[ebp]
	mov	DWORD PTR __Str$91700[ebp+16], esi
	jae	SHORT $LN286@Endwrite
	lea	eax, DWORD PTR __Str$91700[ebp]
$LN286@Endwrite:
	mov	BYTE PTR [eax+esi], 0
; Line 623
	jmp	$LN303@Endwrite
; Line 614
$LN222@Endwrite:
	test	esi, esi
	jne	SHORT $LN302@Endwrite
	mov	DWORD PTR __Str$91700[ebp+16], esi
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN262@Endwrite
	lea	eax, DWORD PTR __Str$91700[ebp]
$LN262@Endwrite:
	mov	BYTE PTR [eax], 0
	jmp	$LN303@Endwrite
$LN290@Endwrite:
; Line 610
	lea	ecx, DWORD PTR __Str$91700[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN304@Endwrite:
	xor	al, al
	jmp	SHORT $LN13@Endwrite
$LN291@Endwrite:
; Line 612
	lea	ecx, DWORD PTR __Str$91700[ebp]
$LN2@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@Endwrite:
; Line 589
	mov	al, 1
$LN13@Endwrite:
; Line 625
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN292@Endwrite:
; Line 614
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN305@Endwrite:
$LN298@Endwrite:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
	lea	ecx, DWORD PTR __Str$91700[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
; Function compile flags: /Ogtp
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; Line 292
	push	ebx
	push	esi
	mov	esi, ecx
; Line 294
	xor	ebx, ebx
	push	edi
	mov	edi, esi
	cmp	DWORD PTR [esi+84], ebx
; Line 296
	je	SHORT $LN18@close
; Line 298
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	jne	SHORT $LN2@close
; Line 299
	xor	edi, edi
$LN2@close:
; Line 300
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	_fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@close
$LN18@close:
; Line 301
	xor	edi, edi
$LN1@close:
; Line 303
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], ecx
	mov	BYTE PTR [esi+80], bl
	mov	BYTE PTR [esi+73], bl
	lea	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], edx
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], ecx
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], edx
	lea	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], ecx
	mov	DWORD PTR [eax], ebx
	mov	edx, DWORD PTR [esi+36]
	mov	DWORD PTR [edx], ebx
	mov	eax, DWORD PTR [esi+52]
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], ebx
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], ebx
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [esi+84], ebx
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
; Line 304
	mov	eax, edi
	pop	edi
	mov	DWORD PTR [esi+68], ebx
	mov	DWORD PTR [esi+76], ecx
	pop	esi
	pop	ebx
; Line 305
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
__File$ = 8						; size = 4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
; Line 153
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	xor	edx, edx
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], ecx
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+80], dl
	mov	BYTE PTR [esi+73], dl
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], ecx
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __File$[ebp]
	cmp	eax, edx
	je	SHORT $LN13@basic_file
	lea	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx
	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], eax
	mov	DWORD PTR [esi+48], ecx
	mov	DWORD PTR [esi+52], ecx
$LN13@basic_file:
	mov	DWORD PTR [esi+84], eax
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [esi+76], ecx
	mov	DWORD PTR [esi+68], edx
; Line 154
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 929
	push	ebp
	mov	ebp, esp
	push	esi
; Line 931
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@assign@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@assign@4
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 932
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 714
	cmp	esi, edi
	je	SHORT $LN45@assign@5
; Line 721
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN33@assign@5
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN33@assign@5:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
; Line 722
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN2@assign@5
; Line 724
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@5
$LN2@assign@5:
; Line 727
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
; Line 728
	mov	DWORD PTR [edi], 0
$LN1@assign@5:
; Line 730
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 731
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
; Line 733
	mov	DWORD PTR [edi+16], 0
; Line 734
	mov	DWORD PTR [edi+20], 0
$LN45@assign@5:
; Line 736
	mov	eax, esi
; Line 737
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0
__ehfuncinfo$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Lock$108133 = -20					; size = 4
$T108118 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ebx, ecx
	mov	DWORD PTR _this$[ebp], ebx
	mov	DWORD PTR [ebx], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR [ebx+56]
	mov	DWORD PTR $T108118[ebp], eax
	test	eax, eax
	je	SHORT $LN9@scalar@15
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	je	SHORT $LN15@scalar@15
	push	0
	lea	ecx, DWORD PTR __Lock$108133[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN17@scalar@15
	cmp	eax, -1
	jae	SHORT $LN17@scalar@15
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN17@scalar@15:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$108133[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN22@scalar@15
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN22@scalar@15:
	mov	eax, DWORD PTR $T108118[ebp]
$LN15@scalar@15:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar@15:
	lea	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN21@scalar@15
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@scalar@15:
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 512
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
; Line 513
	mov	eax, DWORD PTR __Pos$[ebp+8]
	push	ebx
; Line 514
	mov	ebx, DWORD PTR __Pos$[ebp+4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Pos$[ebp+12]
	mov	DWORD PTR __Fileposition$[esp+24], ecx
; Line 519
	xor	ecx, ecx
	push	edi
	mov	edi, DWORD PTR __Pos$[ebp]
	mov	DWORD PTR __Fileposition$[esp+24], eax
	cmp	DWORD PTR [esi+84], ecx
	je	$LN2@seekpos
	mov	ecx, esi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN16@seekpos
	mov	eax, DWORD PTR [esi+84]
	lea	edx, DWORD PTR __Fileposition$[esp+24]
	push	edx
	push	eax
	call	_fsetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
	mov	ecx, edi
	or	ecx, ebx
	je	SHORT $LN1@seekpos
	mov	edx, DWORD PTR [esi+84]
	push	1
	push	ebx
	push	edi
	push	edx
	call	__fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN16@seekpos
$LN1@seekpos:
	mov	ecx, DWORD PTR [esi+84]
	lea	eax, DWORD PTR __Fileposition$[esp+24]
	push	eax
	push	ecx
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
; Line 522
	mov	edx, DWORD PTR __Pos$[ebp+16]
; Line 524
	mov	ecx, esi
	mov	DWORD PTR [esi+76], edx
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 525
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+24]
	mov	edx, DWORD PTR __Fileposition$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN16@seekpos:
; Line 525
	xor	ecx, ecx
$LN2@seekpos:
; Line 520
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB
; Line 527
	pop	edi
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	pop	esi
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx
; Line 495
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+72]
	push	edi
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN21@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN21@seekoff
	cmp	DWORD PTR [esi+68], 0
	jne	SHORT $LN21@seekoff
; Line 496
	mov	ebx, DWORD PTR __Off$[ebp]
	mov	edi, DWORD PTR __Off$[ebp+4]
	add	ebx, -1
	adc	edi, -1
	jmp	SHORT $LN5@seekoff
$LN21@seekoff:
	mov	edi, DWORD PTR __Off$[ebp+4]
	mov	ebx, DWORD PTR __Off$[ebp]
$LN5@seekoff:
; Line 501
	cmp	DWORD PTR [esi+84], 0
	je	$LN3@seekoff
	mov	ecx, esi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	$LN3@seekoff
	mov	edx, ebx
	or	edx, edi
	jne	SHORT $LN1@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN2@seekoff
$LN1@seekoff:
	mov	eax, DWORD PTR __Way$[ebp]
	mov	ecx, DWORD PTR [esi+84]
	push	eax
	push	edi
	push	ebx
	push	ecx
	call	__fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN3@seekoff
$LN2@seekoff:
	mov	eax, DWORD PTR [esi+84]
	lea	edx, DWORD PTR __Fileposition$[esp+24]
	push	edx
	push	eax
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@seekoff
; Line 504
	mov	ecx, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN17@seekoff
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN17@seekoff:
; Line 505
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+24]
	mov	edx, DWORD PTR __Fileposition$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 507
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN3@seekoff:
; Line 502
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB
; Line 507
	pop	edi
	mov	DWORD PTR [eax+4], ecx
	xor	ecx, ecx
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$1
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Lock$108293 = -20					; size = 4
$T108278 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 143
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 144
	cmp	DWORD PTR [esi+84], 0
	je	SHORT $LN11@basic_file@2
; Line 145
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN11@basic_file@2
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN11@basic_file@2:
; Line 146
	cmp	BYTE PTR [esi+80], 0
	je	SHORT $LN1@basic_file@2
; Line 147
	mov	ecx, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file@2:
; Line 148
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR [esi+56]
	mov	DWORD PTR $T108278[ebp], eax
	test	eax, eax
	je	SHORT $LN18@basic_file@2
	mov	ebx, DWORD PTR [eax]
	test	ebx, ebx
	je	SHORT $LN24@basic_file@2
	push	0
	lea	ecx, DWORD PTR __Lock$108293[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN26@basic_file@2
	cmp	eax, -1
	jae	SHORT $LN26@basic_file@2
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN26@basic_file@2:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$108293[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, ebx
	je	SHORT $LN30@basic_file@2
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN30@basic_file@2:
	mov	eax, DWORD PTR $T108278[ebp]
$LN24@basic_file@2:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@basic_file@2:
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 1071
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR [esi-96]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi-96], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
; Line 1072
	lea	ecx, DWORD PTR [esi-92]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	edx, DWORD PTR [esi-96]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+esi-96], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; __Ptr$ = edx
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 768
	push	ebp
	mov	ebp, esp
; Line 769
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	7
$LL7@operator@5:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL7@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, esi
	push	eax
	push	edx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
; Line 770
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 709
	cmp	esi, edi
	je	SHORT $LN49@operator@6
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN37@operator@6
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@operator@6:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN6@operator@6
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@operator@6
$LN6@operator@6:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [edi], 0
$LN5@operator@6:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [edi+16], 0
	mov	DWORD PTR [edi+20], 0
$LN49@operator@6:
	mov	eax, esi
; Line 710
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 702
	push	ebx
; Line 703
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
; Line 704
	cmp	esi, edi
	je	SHORT $LN75@basic_stri@3
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN63@basic_stri@3
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN63@basic_stri@3:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN32@basic_stri@3
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN31@basic_stri@3
$LN32@basic_stri@3:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [edi], ebx
$LN31@basic_stri@3:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR [edi+20], ebx
$LN75@basic_stri@3:
; Line 705
	mov	eax, esi
	pop	ebx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
; Line 594
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, edx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
$LL31@basic_stri@4:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL31@basic_stri@4
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
; Line 595
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z ; ANSIToUTF8
; Function compile flags: /Ogtp
;	COMDAT ?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z
_TEXT	SEGMENT
$T108758 = -4						; size = 4
_nLength2$ = -4						; size = 4
_nLength$ = -4						; size = 4
?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z PROC ; ANSIToUTF8, COMDAT
; ___$ReturnUdt$ = ebx
; _pszCode$ = eax
; File c:\users\javis\documents\github\autoscan\launcher\launcher\scandir.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 372
	push	0
	mov	esi, eax
	push	0
	push	esi
	mov	DWORD PTR $T108758[ebp], 0
	call	DWORD PTR __imp__lstrlenA@4
	push	eax
	push	esi
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
; Line 373
	push	eax
	push	0
	mov	DWORD PTR _nLength$[ebp], eax
	call	DWORD PTR __imp__SysAllocStringLen@8
	mov	edi, eax
; Line 374
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	push	edi
	push	esi
	call	DWORD PTR __imp__lstrlenA@4
	push	eax
	push	esi
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
; Line 377
	push	0
	push	0
	push	0
	push	0
	push	-1
	push	edi
	push	0
	push	65001					; 0000fde9H
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	DWORD PTR _nLength2$[ebp], eax
; Line 378
	inc	eax
	push	eax
	call	_malloc
; Line 379
	mov	ecx, DWORD PTR _nLength2$[ebp]
	add	esp, 4
	push	0
	push	0
	push	ecx
	mov	esi, eax
	push	esi
	push	-1
	push	edi
	push	0
	push	65001					; 0000fde9H
	call	DWORD PTR __imp__WideCharToMultiByte@32
; Line 381
	mov	eax, esi
	mov	DWORD PTR [ebx+20], 15			; 0000000fH
	mov	DWORD PTR [ebx+16], 0
	mov	BYTE PTR [ebx], 0
	lea	edi, DWORD PTR [eax+1]
$LL35@ANSIToUTF8:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL35@ANSIToUTF8
	sub	eax, edi
	push	eax
	push	esi
	mov	ecx, ebx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	mov	eax, ebx
	pop	esi
; Line 382
	mov	esp, ebp
	pop	ebp
	ret	0
?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z ENDP ; ANSIToUTF8
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ$0
__ehfuncinfo$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T108879 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR [ecx]
	lea	esi, DWORD PTR [ecx+96]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T108879[ebp], esi
	mov	DWORD PTR [ecx+esi-96], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	lea	ecx, DWORD PTR [esi-92]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR [esi-96]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+esi-96], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ$0:
	mov	ecx, DWORD PTR $T108879[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?digestFile@MD5@@QAEPADPAD@Z
_TEXT	SEGMENT
_buffer$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
?digestFile@MD5@@QAEPADPAD@Z PROC			; MD5::digestFile, COMDAT
; _this$ = ecx
; File c:\users\javis\documents\github\autoscan\launcher\launcher\md5.h
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 1028				; 00000404H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	eax, DWORD PTR _filename$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
; Line 351
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi], 1732584193		; 67452301H
	mov	DWORD PTR [esi+4], -271733879		; efcdab89H
	mov	DWORD PTR [esi+8], -1732584194		; 98badcfeH
	mov	DWORD PTR [esi+12], 271733878		; 10325476H
	call	_fopen
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@digestFile
; Line 353
	push	edi
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	1
	push	eax
	call	_fread
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN1@digestFile
$LL2@digestFile:
; Line 354
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?Update@MD5@@QAEXPAEI@Z			; MD5::Update
	push	edi
	push	1024					; 00000400H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	1
	push	edx
	call	_fread
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LL2@digestFile
$LN1@digestFile:
; Line 355
	mov	ecx, esi
	call	?Final@MD5@@QAEXXZ			; MD5::Final
; Line 357
	push	edi
	call	_fclose
	add	esp, 4
$LN10@digestFile:
; Line 361
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	lea	eax, DWORD PTR [esi+104]
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?digestFile@MD5@@QAEPADPAD@Z ENDP			; MD5::digestFile
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH_N@Z
_TEXT	SEGMENT
$T109004 = -24						; size = 4
$T108968 = -24						; size = 4
$T108932 = -24						; size = 4
$T108913 = -20						; size = 20
$T108911 = -20						; size = 20
$T108909 = -20						; size = 20
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?clear@ios_base@std@@QAEXH_N@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 310
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
; Line 311
	mov	eax, DWORD PTR __State$[ebp]
	and	eax, 23					; 00000017H
	sub	esp, 24					; 00000018H
	mov	DWORD PTR [ecx+12], eax
; Line 312
	mov	ecx, DWORD PTR [ecx+16]
	and	ecx, eax
	push	esi
	push	edi
	je	$LN1@clear
; Line 314
	cmp	BYTE PTR __Reraise$[ebp], 0
	je	SHORT $LN6@clear
; Line 315
	push	0
	push	0
	call	__CxxThrowException@8
$LN57@clear:
$LN6@clear:
; Line 317
	mov	esi, 1
	test	cl, 4
	je	SHORT $LN4@clear
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	mov	edi, eax
	lea	eax, DWORD PTR $T108932[esp+32]
	push	eax
	lea	ecx, DWORD PTR $T108909[esp+36]
	mov	DWORD PTR $T108932[esp+36], OFFSET ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	ecx, DWORD PTR $T108909[esp+36]
	push	ecx
	mov	DWORD PTR $T108909[esp+52], esi
	mov	DWORD PTR $T108909[esp+56], edi
	mov	DWORD PTR $T108909[esp+40], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN58@clear:
$LN4@clear:
; Line 318
	test	cl, 2
	je	SHORT $LN2@clear
; Line 319
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	lea	edx, DWORD PTR $T108968[esp+32]
	push	edx
	lea	ecx, DWORD PTR $T108911[esp+36]
	mov	edi, eax
	mov	DWORD PTR $T108968[esp+36], OFFSET ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	eax, DWORD PTR $T108911[esp+36]
	push	eax
	mov	DWORD PTR $T108911[esp+52], esi
	mov	DWORD PTR $T108911[esp+56], edi
	mov	DWORD PTR $T108911[esp+40], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN59@clear:
$LN2@clear:
; Line 321
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	lea	ecx, DWORD PTR $T109004[esp+32]
	push	ecx
	lea	ecx, DWORD PTR $T108913[esp+36]
	mov	edi, eax
	mov	DWORD PTR $T109004[esp+36], OFFSET ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	edx, DWORD PTR $T108913[esp+36]
	push	edx
	mov	DWORD PTR $T108913[esp+52], esi
	mov	DWORD PTR $T108913[esp+56], edi
	mov	DWORD PTR $T108913[esp+40], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN60@clear:
$LN1@clear:
; Line 322
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN56@clear:
?clear@ios_base@std@@QAEXH_N@Z ENDP			; std::ios_base::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ctype@_W@std@@MAEPAXI@Z PROC			; std::ctype<wchar_t>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@_W@std@@6B@
	je	SHORT $LN4@scalar@16
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	add	esp, 4
$LN4@scalar@16:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN11@scalar@16
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@16:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$ctype@_W@std@@MAEPAXI@Z ENDP			; std::ctype<wchar_t>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T109051 = -52						; size = 36
$T109055 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T109050 = 8						; size = 4
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::ctype<wchar_t>::_Getcat, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 2565
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2566
	mov	edi, DWORD PTR __Ppf$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T109055[ebp], ebx
	test	edi, edi
	je	SHORT $LN18@Getcat@4
	cmp	DWORD PTR [edi], ebx
	jne	SHORT $LN18@Getcat@4
; Line 2568
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T109050[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@4
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN14@Getcat@4
	mov	eax, ecx
	jmp	SHORT $LN15@Getcat@4
$LN14@Getcat@4:
	add	eax, 28					; 0000001cH
$LN15@Getcat@4:
	push	eax
	lea	ecx, DWORD PTR $T109051[ebp]
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	push	0
	push	eax
	mov	ecx, esi
	mov	ebx, 1
	call	??0?$ctype@_W@std@@QAE@ABV_Locinfo@1@I@Z ; std::ctype<wchar_t>::ctype<wchar_t>
	jmp	SHORT $LN5@Getcat@4
$LN4@Getcat@4:
	xor	eax, eax
$LN5@Getcat@4:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [edi], eax
	test	bl, 1
	je	SHORT $LN18@Getcat@4
	lea	ecx, DWORD PTR $T109051[ebp]
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN18@Getcat@4:
; Line 2569
	mov	eax, 2
; Line 2570
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T109050[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::ctype<wchar_t>::_Getcat
; Function compile flags: /Ogtp
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ctype@D@std@@MAEPAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN16@scalar@17
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	jmp	SHORT $LN17@scalar@17
$LN16@scalar@17:
	jns	SHORT $LN6@scalar@17
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
$LN17@scalar@17:
	add	esp, 4
$LN6@scalar@17:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN15@scalar@17
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@scalar@17:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$ctype@D@std@@MAEPAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocinfo
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T109121 = -68						; size = 36
$T109179 = -32						; size = 16
$T109125 = -16						; size = 4
$T109120 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
; Line 2371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2372
	mov	eax, DWORD PTR __Ppf$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T109125[ebp], ebx
	test	eax, eax
	je	$LN28@Getcat@5
	cmp	DWORD PTR [eax], ebx
	jne	$LN28@Getcat@5
; Line 2374
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T109120[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@5
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN14@Getcat@5
	mov	eax, ecx
	jmp	SHORT $LN15@Getcat@5
$LN14@Getcat@5:
	add	eax, 28					; 0000001cH
$LN15@Getcat@5:
	push	eax
	lea	ecx, DWORD PTR $T109121[ebp]
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	lea	ecx, DWORD PTR $T109179[ebp]
	push	ecx
	mov	ebx, 1
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	call	__Getctype
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], edx
	mov	eax, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], eax
	jmp	SHORT $LN5@Getcat@5
$LN4@Getcat@5:
	xor	esi, esi
$LN5@Getcat@5:
	mov	ecx, DWORD PTR __Ppf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [ecx], esi
	test	bl, 1
	je	SHORT $LN28@Getcat@5
	lea	ecx, DWORD PTR $T109121[ebp]
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN28@Getcat@5:
; Line 2375
	mov	eax, 2
; Line 2376
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T109120[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::ctype<char>::_Getcat
; Function compile flags: /Ogtp
;	COMDAT ?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve, COMDAT
; _this$ = ecx
; __Newcap$ = eax
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 1540
	push	esi
	mov	esi, ecx
	push	edi
; Line 1541
	mov	edi, DWORD PTR [esi+16]
	cmp	edi, eax
	ja	SHORT $LN11@reserve@2
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN11@reserve@2
; Line 1544
	push	1
	push	eax
	mov	eax, esi
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	test	al, al
	je	SHORT $LN11@reserve@2
; Line 1545
	cmp	DWORD PTR [esi+20], 8
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN9@reserve@2
	mov	esi, DWORD PTR [esi]
$LN9@reserve@2:
	xor	eax, eax
	mov	WORD PTR [esi+edi*2], ax
$LN11@reserve@2:
; Line 1547
	pop	edi
	pop	esi
	ret	0
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z
_TEXT	SEGMENT
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = esi
; __Ch$ = ebx
; Line 846
	mov	ecx, DWORD PTR [esi+16]
	or	eax, -1
	sub	eax, ecx
	cmp	eax, 1
	ja	SHORT $LN88@append@4
; Line 847
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN92@append@4:
$LN88@append@4:
	push	edi
; Line 850
	lea	edi, DWORD PTR [ecx+1]
	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN13@append@4
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN93@append@4:
$LN13@append@4:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN12@append@4
	push	ecx
	push	edi
	push	esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	test	edi, edi
	je	SHORT $LN84@append@4
$LN91@append@4:
; Line 852
	mov	ecx, DWORD PTR [esi+16]
	mov	edx, 8
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN63@append@4
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN64@append@4
; Line 850
$LN12@append@4:
	test	edi, edi
	jne	SHORT $LN91@append@4
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 8
	jb	SHORT $LN53@append@4
	mov	eax, DWORD PTR [esi]
	xor	ecx, ecx
	mov	WORD PTR [eax], cx
; Line 855
	mov	eax, esi
	pop	edi
; Line 856
	ret	0
; Line 850
$LN53@append@4:
	mov	eax, esi
	xor	ecx, ecx
	mov	WORD PTR [eax], cx
	pop	edi
; Line 856
	ret	0
; Line 852
$LN63@append@4:
	mov	eax, esi
$LN64@append@4:
	mov	WORD PTR [eax+ecx*2], bx
; Line 853
	mov	DWORD PTR [esi+16], edi
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN82@append@4
	mov	eax, DWORD PTR [esi]
	xor	edx, edx
	mov	WORD PTR [eax+edi*2], dx
; Line 855
	mov	eax, esi
	pop	edi
; Line 856
	ret	0
; Line 853
$LN82@append@4:
	mov	eax, esi
	xor	edx, edx
	mov	WORD PTR [eax+edi*2], dx
$LN84@append@4:
; Line 855
	mov	eax, esi
	pop	edi
; Line 856
	ret	0
$LN89@append@4:
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
; Line 655
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
; Line 660
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
; Line 661
	mov	edi, DWORD PTR [esi+16]
	cmp	edi, eax
	ja	SHORT $LN33@Construct
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN33@Construct
	push	1
	push	eax
	mov	eax, esi
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	test	al, al
	je	SHORT $LN33@Construct
	cmp	DWORD PTR [esi+20], 8
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN31@Construct
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN32@Construct
$LN31@Construct:
	mov	eax, esi
$LN32@Construct:
	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN33@Construct:
; Line 663
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR __First$[ebp]
	npad	5
; Line 664
$LL37@Construct:
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Construct
; Line 665
	movsx	bx, BYTE PTR [eax]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	mov	eax, DWORD PTR __First$[ebp]
	inc	eax
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LL37@Construct
__catch$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$0:
; Line 667
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 8
	jb	SHORT $LN62@Construct
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN62@Construct:
	xor	eax, eax
; Line 668
	push	eax
	mov	DWORD PTR [esi+20], 7
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	WORD PTR [esi], ax
	call	__CxxThrowException@8
$LN78@Construct:
$LN1@Construct:
; Line 670
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN77@Construct:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = esi
; __Right$ = eax
; Line 794
	push	0
	push	eax
	or	eax, -1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 795
	ret	0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; __Ptr$ = eax
; Line 839
	push	ebp
	mov	ebp, esp
; Line 841
	mov	ecx, eax
	push	esi
	lea	esi, DWORD PTR [ecx+1]
	npad	7
$LL5@append@5:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL5@append@5
	sub	ecx, esi
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
; Line 842
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; __Ptr$ = eax
; Line 783
	push	ebp
	mov	ebp, esp
; Line 784
	mov	ecx, eax
	push	esi
	lea	esi, DWORD PTR [ecx+1]
	npad	7
$LL7@operator@7:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL7@operator@7
	sub	ecx, esi
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
; Line 785
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = esi
; __Right$ = eax
; Line 779
	push	0
	push	eax
	or	eax, -1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 780
	ret	0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
$T109703 = 12						; size = 1
__Last$ = 12						; size = 4
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi
; Line 621
	push	ebp
	mov	ebp, esp
; Line 622
	xor	eax, eax
	mov	DWORD PTR [esi+20], 7
	mov	DWORD PTR [esi+16], 0
	mov	WORD PTR [esi], ax
; Line 623
	mov	ecx, DWORD PTR $T109703[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Line 624
	mov	eax, esi
	pop	ebp
	ret	8
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z
_TEXT	SEGMENT
$T109780 = -4						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; ___$ReturnUdt$ = esi
; __Left$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 146
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	edi
	xor	ebx, ebx
; Line 147
	push	1
	mov	eax, OFFSET ??_C@_01KICIPPFI@?2?$AA@
	mov	DWORD PTR $T109780[ebp], ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	edi, eax
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
	cmp	esi, edi
	je	SHORT $LN85@operator@8
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN73@operator@8
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN73@operator@8:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN42@operator@8
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN41@operator@8
$LN42@operator@8:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [edi], ebx
$LN41@operator@8:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR [edi+20], ebx
$LN85@operator@8:
	pop	edi
	mov	eax, esi
	pop	ebx
; Line 148
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T110086 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR $T110086[ebp], 0
; Line 65
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
; Line 69
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR $T110086[ebp], 1
	lea	edi, DWORD PTR [eax+1]
	npad	6
$LL57@operator@9:
; Line 66
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL57@operator@9
	sub	eax, edi
	mov	edi, DWORD PTR [esi+16]
	add	eax, edx
	cmp	edi, eax
	ja	SHORT $LN45@operator@9
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN45@operator@9
	push	1
	push	eax
	mov	ecx, esi
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN45@operator@9
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN43@operator@9
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN44@operator@9
$LN43@operator@9:
	mov	eax, esi
$LN44@operator@9:
	mov	BYTE PTR [eax+edi], 0
$LN45@operator@9:
; Line 67
	mov	ecx, DWORD PTR __Left$[ebp]
	push	0
	push	ecx
	or	eax, -1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 68
	mov	edi, DWORD PTR __Right$[ebp]
	mov	eax, edi
	lea	edx, DWORD PTR [eax+1]
	npad	2
$LL58@operator@9:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL58@operator@9
	sub	eax, edx
	push	eax
	mov	eax, edi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 69
	mov	eax, esi
; Line 70
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
	mov	eax, DWORD PTR $T110086[ebp]
	and	eax, 1
	je	$LN4@operator@9
	and	DWORD PTR $T110086[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@operator@9:
	ret	0
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T110258 = -36						; size = 12
__Lock$92597 = -24					; size = 4
__Lock$110266 = -20					; size = 4
__Psave$92598 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Lock$110288 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$92597[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A, 0 ; std::ctype<wchar_t>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
	mov	DWORD PTR __Psave$92598[ebp], ebx
	jne	SHORT $LN11@use_facet@4
	push	0
	lea	ecx, DWORD PTR __Lock$110266[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A, 0 ; std::ctype<wchar_t>::id
	jne	SHORT $LN10@use_facet@4
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A, eax ; std::ctype<wchar_t>::id
$LN10@use_facet@4:
	lea	ecx, DWORD PTR __Lock$110266[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@4:
; Line 510
	mov	edi, DWORD PTR __Loc$[ebp]
	mov	esi, DWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A ; std::ctype<wchar_t>::id
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@4
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@4
$LN30@use_facet@4:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@4
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@4
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@4
$LN20@use_facet@4:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@4
$LN16@use_facet@4:
	mov	esi, ecx
$LN15@use_facet@4:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@4
$LN31@use_facet@4:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet@4
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@4
$LN4@use_facet@4:
; Line 516
	lea	eax, DWORD PTR __Psave$92598[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<wchar_t>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@4
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T110258[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T110258[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet@4:
$LN2@use_facet@4:
; Line 528
	mov	esi, DWORD PTR __Psave$92598[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$110288[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@4
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@4:
	lea	ecx, DWORD PTR __Lock$110288[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@4:
; Line 536
	lea	ecx, DWORD PTR __Lock$92597[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$92597[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T110308 = -36						; size = 12
__Lock$92482 = -24					; size = 4
__Lock$110316 = -20					; size = 4
__Psave$92483 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Lock$110338 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$92482[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	DWORD PTR __Psave$92483[ebp], ebx
	jne	SHORT $LN11@use_facet@5
	push	0
	lea	ecx, DWORD PTR __Lock$110316[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	jne	SHORT $LN10@use_facet@5
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, eax ; std::ctype<char>::id
$LN10@use_facet@5:
	lea	ecx, DWORD PTR __Lock$110316[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@5:
; Line 510
	mov	edi, DWORD PTR __Loc$[ebp]
	mov	esi, DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@5
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@5
$LN30@use_facet@5:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@5
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@5
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@5
$LN20@use_facet@5:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@5
$LN16@use_facet@5:
	mov	esi, ecx
$LN15@use_facet@5:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@5
$LN31@use_facet@5:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet@5
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@5
$LN4@use_facet@5:
; Line 516
	lea	eax, DWORD PTR __Psave$92483[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@5
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T110308[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T110308[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet@5:
$LN2@use_facet@5:
; Line 528
	mov	esi, DWORD PTR __Psave$92483[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$110338[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::ctype<char> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@5
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@5:
	lea	ecx, DWORD PTR __Lock$110338[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@5:
; Line 536
	lea	ecx, DWORD PTR __Lock$92482[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$92482[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0
__ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
_TEXT	SEGMENT
__Lock$110380 = -20					; size = 4
$T110358 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Byte$ = 8						; size = 1
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 125
	lea	eax, DWORD PTR $T110358[ebp]
	push	eax
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edi, DWORD PTR $T110358[ebp]
	add	esp, 4
	mov	ebx, eax
	test	edi, edi
	je	SHORT $LN7@widen
	push	0
	lea	ecx, DWORD PTR __Lock$110380[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN9@widen
	cmp	eax, -1
	jae	SHORT $LN9@widen
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@widen:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$110380[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN7@widen
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN7@widen:
; Line 126
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR __Byte$[ebp]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	ecx, ebx
	call	edx
; Line 127
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0:
	lea	ecx, DWORD PTR $T110358[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
; Function compile flags: /Ogtp
;	COMDAT ?do_truename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T110398 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?do_truename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_truename, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 183
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 184
	mov	ecx, DWORD PTR [ecx+20]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, ecx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR $T110398[ebp], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
	npad	7
$LL35@do_truenam:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL35@do_truenam
	sub	eax, edi
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	mov	eax, esi
	pop	esi
; Line 185
	mov	esp, ebp
	pop	ebp
	ret	4
?do_truename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_truename
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_falsename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T110510 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?do_falsename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_falsename, COMDAT
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 179
	mov	ecx, DWORD PTR [ecx+16]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, ecx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR $T110510[ebp], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
	npad	7
$LL35@do_falsena:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL35@do_falsena
	sub	eax, edi
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	mov	eax, esi
	pop	esi
; Line 180
	mov	esp, ebp
	pop	ebp
	ret	4
?do_falsename@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_falsename
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_grouping@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T110622 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?do_grouping@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_grouping, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 174
	mov	ecx, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, ecx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR $T110622[ebp], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
	npad	7
$LL35@do_groupin:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL35@do_groupin
	sub	eax, edi
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	mov	eax, esi
	pop	esi
; Line 175
	mov	esp, ebp
	pop	ebp
	ret	4
?do_grouping@?$numpunct@D@std@@MBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_grouping
_TEXT	ENDS
PUBLIC	__Fill$GSCopy$
PUBLIC	__Iosbase$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$3
__ehfuncinfo$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z
_TEXT	SEGMENT
__Fill$GSCopy$ = -108					; size = 1
__Punct_fac$91773 = -104				; size = 4
$T110734 = -100						; size = 4
___$ReturnUdt$GSCopy$ = -96				; size = 4
__Lock$110769 = -92					; size = 4
$T110737 = -92						; size = 8
__Iosbase$GSCopy$ = -84					; size = 4
$T110738 = -84						; size = 8
__Str$91780 = -76					; size = 28
$T91839 = -48						; size = 28
$T91837 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Dest$ = 12						; size = 8
__Iosbase$ = 20						; size = 4
__Fill$ = 24						; size = 1
__Val$ = 28						; size = 1
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xlocnum
; Line 1143
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+108], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+124]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR __Iosbase$[ebp]
; Line 1145
	test	DWORD PTR [ebx+20], 16384		; 00004000H
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1167
	mov	al, BYTE PTR __Fill$[ebp]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+124], esi
	mov	DWORD PTR __Iosbase$GSCopy$[esp+124], ebx
	mov	BYTE PTR __Fill$GSCopy$[esp+124], al
	jne	SHORT $LN5@do_put@3
; Line 1146
	movzx	eax, BYTE PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+28]
	push	eax
	mov	eax, DWORD PTR __Fill$GSCopy$[esp+128]
	push	eax
	mov	eax, DWORD PTR __Dest$[ebp+4]
	push	ebx
	push	eax
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	push	esi
	call	edx
	mov	eax, esi
	jmp	$LN4@do_put@3
$LN5@do_put@3:
; Line 1149
	lea	eax, DWORD PTR $T110734[esp+124]
	push	eax
	mov	ecx, ebx
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[esp+132], 0
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	DWORD PTR __$EHRec$[esp+132], -1
	mov	edi, DWORD PTR $T110734[esp+124]
	mov	DWORD PTR __Punct_fac$91773[esp+124], eax
	test	edi, edi
	je	SHORT $LN19@do_put@3
	push	0
	lea	ecx, DWORD PTR __Lock$110769[esp+128]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN21@do_put@3
	cmp	eax, -1
	jae	SHORT $LN21@do_put@3
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN21@do_put@3:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$110769[esp+124]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN19@do_put@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN19@do_put@3:
; Line 1150
	mov	DWORD PTR __Str$91780[esp+144], 15	; 0000000fH
	mov	DWORD PTR __Str$91780[esp+140], 0
	mov	BYTE PTR __Str$91780[esp+124], 0
; Line 1151
	cmp	BYTE PTR __Val$[ebp], 0
; Line 1152
	mov	ecx, DWORD PTR __Punct_fac$91773[esp+124]
	mov	DWORD PTR __$EHRec$[esp+132], 1
	lea	esi, DWORD PTR $T91837[esp+124]
	je	SHORT $LN3@do_put@3
	call	?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
	mov	edi, eax
	lea	esi, DWORD PTR __Str$91780[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 2
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	esi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[esp+132], 1
	cmp	DWORD PTR $T91837[esp+144], esi
	jb	SHORT $LN83@do_put@3
	mov	ecx, DWORD PTR $T91837[esp+124]
	push	ecx
; Line 1153
	jmp	SHORT $LN144@do_put@3
$LN3@do_put@3:
; Line 1154
	call	?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
	mov	edi, eax
	lea	esi, DWORD PTR __Str$91780[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 3
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	esi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[esp+132], 1
	cmp	DWORD PTR $T91839[esp+144], esi
	jb	SHORT $LN83@do_put@3
	mov	edx, DWORD PTR $T91839[esp+124]
	push	edx
$LN144@do_put@3:
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN83@do_put@3:
; Line 1158
	cmp	DWORD PTR [ebx+36], 0
	mov	edi, DWORD PTR [ebx+32]
	mov	eax, DWORD PTR __Str$91780[esp+140]
	jl	SHORT $LN8@do_put@3
	jg	SHORT $LN139@do_put@3
	test	edi, edi
	je	SHORT $LN8@do_put@3
$LN139@do_put@3:
	cmp	edi, eax
	jbe	SHORT $LN8@do_put@3
	sub	edi, eax
	jmp	SHORT $LN9@do_put@3
$LN8@do_put@3:
	xor	edi, edi
$LN9@do_put@3:
; Line 1160
	mov	ecx, DWORD PTR [ebx+20]
	and	ecx, 448				; 000001c0H
	cmp	ecx, 64					; 00000040H
	je	SHORT $LN1@do_put@3
; Line 1162
	mov	edx, DWORD PTR __Dest$[ebp+4]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	bl, BYTE PTR __Fill$GSCopy$[esp+124]
	push	edx
	push	eax
	mov	eax, edi
	lea	edi, DWORD PTR $T110737[esp+132]
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	mov	ecx, DWORD PTR [eax]
; Line 1163
	mov	ebx, DWORD PTR __Iosbase$GSCopy$[esp+132]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Str$91780[esp+148]
	add	esp, 8
	mov	DWORD PTR __Dest$[ebp+4], edx
	xor	edi, edi
$LN1@do_put@3:
; Line 1165
	mov	ecx, DWORD PTR __Str$91780[esp+124]
	cmp	DWORD PTR __Str$91780[esp+144], esi
	jae	SHORT $LN114@do_put@3
	lea	ecx, DWORD PTR __Str$91780[esp+124]
$LN114@do_put@3:
	mov	edx, DWORD PTR __Dest$[ebp+4]
	push	edx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	edx, DWORD PTR $T110738[esp+132]
	push	edx
	call	?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PBDI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	eax, DWORD PTR [eax+4]
	add	esp, 12					; 0000000cH
; Line 1166
	xor	edx, edx
; Line 1167
	push	eax
	mov	DWORD PTR __Dest$[ebp+4], eax
	mov	DWORD PTR [ebx+32], edx
	mov	DWORD PTR [ebx+36], edx
	mov	bl, BYTE PTR __Fill$GSCopy$[esp+128]
	mov	eax, edi
	mov	edi, DWORD PTR ___$ReturnUdt$GSCopy$[esp+128]
	push	ecx
	call	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@DI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
	add	esp, 8
	cmp	DWORD PTR __Str$91780[esp+144], esi
	jb	SHORT $LN127@do_put@3
	mov	eax, DWORD PTR __Str$91780[esp+124]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN127@do_put@3:
	mov	eax, edi
$LN4@do_put@3:
; Line 1169
	mov	ecx, DWORD PTR __$EHRec$[esp+124]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$0:
	lea	ecx, DWORD PTR $T110734[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$1:
	lea	ecx, DWORD PTR __Str$91780[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$2:
	lea	ecx, DWORD PTR $T91837[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z$3:
	lea	ecx, DWORD PTR $T91839[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-108]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AAVios_base@2@D_N@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 42
	push	ebp
	mov	ebp, esp
; Line 44
	cmp	DWORD PTR [ecx+56], 0
	mov	eax, DWORD PTR __State$[ebp]
	jne	SHORT $LN4@clear@2
	or	eax, 4
$LN4@clear@2:
	mov	edx, DWORD PTR __Reraise$[ebp]
	push	edx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 45
	pop	ebp
	ret	8
?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
; Line 44
	cmp	DWORD PTR [ecx+56], 0
	mov	eax, DWORD PTR __State$[ebp]
	jne	SHORT $LN4@clear@3
	or	eax, 4
$LN4@clear@3:
	mov	edx, DWORD PTR __Reraise$[ebp]
	push	edx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 45
	pop	ebp
	ret	8
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@18
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@18:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0
__ehfuncinfo$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
$T111183 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	lea	edi, DWORD PTR [ecx-96]
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	lea	esi, DWORD PTR [edi+96]
	mov	DWORD PTR $T111183[ebp], esi
	mov	DWORD PTR [ecx+esi-96], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	lea	ecx, DWORD PTR [esi-92]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR [esi-96]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+esi-96], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN17@scalar@19
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@scalar@19:
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR $T111183[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
; Line 55
	mov	edx, DWORD PTR __State$[ebp]
	test	edx, edx
	je	SHORT $LN6@setstate
; Line 56
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN8@setstate
	or	eax, 4
$LN8@setstate:
	mov	edx, DWORD PTR __Reraise$[ebp]
	push	edx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN6@setstate:
; Line 57
	pop	ebp
	ret	8
?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT
?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 572
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	push	edi
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN1@flush
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN1@flush
; Line 573
	mov	edi, 4
$LN1@flush:
; Line 574
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN21@flush
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN19@flush
	or	eax, 4
$LN19@flush:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN21@flush:
; Line 575
	mov	eax, esi
	pop	edi
; Line 576
	ret	0
?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 54
	push	ebp
	mov	ebp, esp
; Line 55
	mov	edx, DWORD PTR __State$[ebp]
	test	edx, edx
	je	SHORT $LN6@setstate@2
; Line 56
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN8@setstate@2
	or	eax, 4
$LN8@setstate@2:
	mov	edx, DWORD PTR __Reraise$[ebp]
	push	edx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN6@setstate@2:
; Line 57
	pop	ebp
	ret	8
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 570
	push	ecx
	push	esi
	mov	esi, ecx
; Line 572
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	push	edi
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN1@flush@2
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN1@flush@2
; Line 573
	mov	edi, 4
$LN1@flush@2:
; Line 574
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN21@flush@2
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN19@flush@2
	or	eax, 4
$LN19@flush@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN21@flush@2:
; Line 576
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
?clear@ios_base@std@@QAEXH@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 325
	push	ebp
	mov	ebp, esp
; Line 326
	mov	eax, DWORD PTR __State$[ebp]
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 327
	pop	ebp
	ret	4
?clear@ios_base@std@@QAEXH@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ$0
__tryblocktable$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
; Line 157
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 158
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+4]
	test	BYTE PTR [eax+edi+20], 2
	je	SHORT $LN8@Osfx
; Line 159
	xor	esi, esi
	test	BYTE PTR [eax+edi+12], 6
	jne	SHORT $LN11@Osfx
	mov	eax, DWORD PTR [eax+edi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN11@Osfx
	mov	esi, 4
$LN11@Osfx:
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, edi
	test	esi, esi
	je	SHORT $LN8@Osfx
	mov	eax, DWORD PTR [ecx+12]
	or	eax, esi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN29@Osfx
	or	eax, 4
$LN29@Osfx:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN8@Osfx:
; Line 162
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ$0:
; Line 161
	mov	eax, $LN8@Osfx
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0
__tryblocktable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$2
__ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
; Line 157
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 158
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+4]
	test	BYTE PTR [eax+edi+20], 2
	je	SHORT $LN8@Osfx@2
; Line 159
	xor	esi, esi
	test	BYTE PTR [eax+edi+12], 6
	jne	SHORT $LN11@Osfx@2
	mov	eax, DWORD PTR [eax+edi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN11@Osfx@2
	mov	esi, 4
$LN11@Osfx@2:
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, edi
	test	esi, esi
	je	SHORT $LN8@Osfx@2
	mov	eax, DWORD PTR [ecx+12]
	or	eax, esi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN29@Osfx@2
	or	eax, 4
$LN29@Osfx@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN8@Osfx@2:
; Line 162
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0:
; Line 161
	mov	eax, $LN8@Osfx@2
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 123
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN1@sentry@2
; Line 124
	mov	ecx, DWORD PTR [esi]
	call	?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
$LN1@sentry@2:
; Line 129
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN5@sentry@2
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN5@sentry@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT
; __Ostr$ = ebx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+ebx+56]
	xor	edi, edi
	cmp	ecx, edi
	je	SHORT $LN5@sentry@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN5@sentry@3:
	mov	DWORD PTR __$EHRec$[ebp+8], edi
; Line 115
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax+ebx+12], edi
	jne	SHORT $LN36@sentry@3
	mov	esi, DWORD PTR [eax+ebx+60]
	cmp	esi, edi
	je	SHORT $LN36@sentry@3
; Line 116
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN20@sentry@3
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN20@sentry@3
	mov	edi, 4
$LN20@sentry@3:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN36@sentry@3
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN38@sentry@3
	or	eax, 4
$LN38@sentry@3:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN36@sentry@3:
; Line 117
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax+ebx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	sete	cl
	mov	BYTE PTR [eax+4], cl
; Line 118
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 123
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN1@sentry@4
; Line 124
	mov	ecx, DWORD PTR [esi]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN1@sentry@4:
; Line 129
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN5@sentry@4
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN5@sentry@4:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; __Ostr$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edi], esi
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN5@sentry@5
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN5@sentry@5:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 115
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], 0
	jne	SHORT $LN1@sentry@5
	mov	eax, DWORD PTR [eax+esi+60]
	test	eax, eax
	je	SHORT $LN1@sentry@5
; Line 116
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN1@sentry@5:
; Line 117
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+esi+12], 0
; Line 118
	mov	eax, edi
	sete	dl
	mov	BYTE PTR [edi+4], dl
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Ipfx, COMDAT
; _this$ = esi
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 116
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+esi+12]
	add	ecx, esi
	test	eax, eax
	jne	SHORT $LN1@Ipfx
; Line 119
	mov	ecx, DWORD PTR [ecx+60]
	test	ecx, ecx
	je	SHORT $LL7@Ipfx
; Line 120
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
	npad	3
$LL7@Ipfx:
; Line 141
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, esi
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN1@Ipfx
; Line 142
	mov	al, 1
; Line 146
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@Ipfx:
; Line 144
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 2
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN137@Ipfx
	or	eax, 4
$LN137@Ipfx:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 145
	xor	al, al
; Line 146
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
; Function compile flags: /Ogtp
;	COMDAT ?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::close, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 1109
	push	ecx
; Line 1110
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	eax, eax
	jne	SHORT $LN9@close@2
; Line 1111
	mov	eax, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 2
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN11@close@2
	or	eax, 4
$LN11@close@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN9@close@2:
	pop	ecx
; Line 1112
	ret	0
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::close
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z
_TEXT	SEGMENT
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::open, COMDAT
; __Filename$ = eax
; Line 1087
	push	ebx
; Line 1088
	push	eax
	mov	ebx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN2@open@2
; Line 1089
	mov	ecx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 2
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN12@open@2
	or	eax, 4
; Line 1091
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 1092
	pop	ebx
	ret	0
$LN2@open@2:
; Line 1091
	mov	edx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+56]
	neg	eax
	sbb	eax, eax
	and	eax, -4					; fffffffcH
	add	eax, 4
$LN12@open@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 1092
	pop	ebx
	ret	0
?open@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAEXPBDHH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::open
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edi], OFFSET ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A ; std::cin
	mov	eax, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[ecx+56]
	test	ecx, ecx
	je	SHORT $LN4@sentry@6
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN4@sentry@6:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 100
	mov	esi, DWORD PTR [edi]
	call	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
	mov	BYTE PTR [edi+4], al
; Line 101
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$14 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$0
__tryblocktable$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$14
__ehfuncinfo$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	DD	01H
	DD	FLAT:__tryblocktable$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
__Ok$ = -32						; size = 8
__Meta$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_istream<char,std::char_traits<char> >::get, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\istream
; Line 502
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 506
	mov	eax, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	xor	ebx, ebx
	mov	DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A+8, ebx
	mov	DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A+12, ebx
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[ecx+56]
	xor	edi, edi
	mov	esi, OFFSET ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A ; std::cin
	mov	DWORD PTR __Meta$[ebp], ebx
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, ebx
	je	SHORT $LN16@get
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN16@get:
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	call	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
	mov	BYTE PTR __Ok$[ebp+4], al
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 508
	cmp	al, bl
	jne	SHORT $LN5@get
; Line 509
	or	esi, -1
; Line 510
	jmp	$LN12@get
$LN5@get:
; Line 512
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 513
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[edx+56]
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], ebx
	je	SHORT $LN31@get
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], ebx
	jle	SHORT $LN31@get
	mov	eax, DWORD PTR [eax]
	movzx	esi, BYTE PTR [eax]
	mov	DWORD PTR __Meta$[ebp], esi
	jmp	SHORT $LN32@get
$LN31@get:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	esi, eax
	mov	DWORD PTR __Meta$[ebp], eax
$LN32@get:
; Line 515
	cmp	esi, -1
	jne	SHORT $LN2@get
; Line 516
	lea	edi, DWORD PTR [esi+4]
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN12@get
$LN2@get:
; Line 519
	mov	eax, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[ecx+56]
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], ebx
	je	SHORT $LN49@get
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], ebx
	jle	SHORT $LN49@get
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	inc	DWORD PTR [ecx]
	jmp	SHORT $LN50@get
$LN49@get:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN50@get:
; Line 520
	add	DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A+8, 1
	adc	DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A+12, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN12@get
__catch$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$0:
; Line 522
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, OFFSET ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A ; std::cin
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN66@get
	or	eax, 4
$LN66@get:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN144@get
	ret	0
$LN144@get:
	mov	esi, DWORD PTR __Meta$[ebp]
	xor	ebx, ebx
	mov	edi, ebx
$LN12@get:
; Line 525
	mov	edx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, OFFSET ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A ; std::cin
	cmp	edi, ebx
	je	SHORT $LN128@get
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], ebx
	jne	SHORT $LN130@get
	or	eax, 4
$LN130@get:
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN128@get:
; Line 526
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A[ecx+56]
	cmp	ecx, ebx
	je	SHORT $LN143@get
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN143@get:
	mov	eax, esi
; Line 527
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$3:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__ehhandler$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::get
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$12
__catchsym$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$13 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$0
__tryblocktable$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$13
__ehfuncinfo$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
_TEXT	SEGMENT
__Ok$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 525
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]
; Line 527
	lea	eax, DWORD PTR __Ok$[ebp]
	xor	esi, esi
	push	eax
	mov	DWORD PTR __State$[ebp], esi
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[ebp+12], edi
; Line 529
	cmp	BYTE PTR __Ok$[ebp+4], 0
	jne	SHORT $LN4@put
; Line 530
	lea	esi, DWORD PTR [edi+4]
; Line 531
	jmp	$LN11@put
$LN4@put:
; Line 533
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 535
	mov	ecx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+ebx+56]
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN18@put
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], edi
	jle	SHORT $LN18@put
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+2]
	mov	DWORD PTR [ecx], edx
	mov	ecx, 10					; 0000000aH
	mov	WORD PTR [eax], cx
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	jmp	SHORT $LN11@put
$LN18@put:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	push	10					; 0000000aH
	call	eax
	movzx	eax, ax
	mov	ecx, 65535				; 0000ffffH
	cmp	cx, ax
	jne	SHORT $LN1@put
; Line 536
	mov	esi, 4
$LN1@put:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	jmp	SHORT $LN11@put
__catch$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$0:
; Line 537
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN41@put
	or	eax, 4
$LN41@put:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN121@put
	ret	0
$LN121@put:
	mov	ebx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __State$[ebp]
$LN11@put:
; Line 540
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, ebx
	test	esi, esi
	je	SHORT $LN103@put
	mov	eax, DWORD PTR [ecx+12]
	or	eax, esi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN105@put
	or	eax, 4
$LN105@put:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN103@put:
; Line 541
	mov	DWORD PTR __$EHRec$[ebp+12], 3
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN107@put
	mov	ecx, DWORD PTR __Ok$[ebp]
	call	?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
$LN107@put:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	test	ecx, ecx
	je	SHORT $LN119@put
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN119@put:
	mov	eax, ebx
; Line 542
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	ret	0
__unwindfunclet$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z$12:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$13
__catchsym$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$14 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$0
__tryblocktable$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$14
__ehfuncinfo$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
_TEXT	SEGMENT
__Ok$ = -32						; size = 8
__State$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ch$ = 8						; size = 1
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::put, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 525
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; Line 527
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN16@put@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN16@put@2:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], edi
	jne	SHORT $LN12@put@2
	mov	eax, DWORD PTR [eax+esi+60]
	cmp	eax, edi
	je	SHORT $LN12@put@2
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN12@put@2:
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax+esi+12], edi
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	ebx, 1
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
; Line 529
	test	cl, cl
	jne	SHORT $LN4@put@2
; Line 530
	lea	edi, DWORD PTR [ebx+3]
; Line 531
	jmp	SHORT $LN11@put@2
$LN4@put@2:
; Line 533
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 535
	mov	ecx, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN41@put@2
	mov	eax, DWORD PTR [ecx+52]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN41@put@2
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax], cl
	movzx	eax, cl
	jmp	SHORT $LN42@put@2
$LN41@put@2:
	movzx	eax, BYTE PTR __Ch$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN42@put@2:
	cmp	eax, -1
	jne	SHORT $LN1@put@2
; Line 536
	lea	edi, DWORD PTR [eax+5]
$LN1@put@2:
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	jmp	SHORT $LN11@put@2
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$0:
; Line 537
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN64@put@2
	or	eax, 4
$LN64@put@2:
	mov	ebx, 1
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	eax, $LN144@put@2
	ret	0
$LN144@put@2:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR __State$[ebp]
$LN11@put@2:
; Line 540
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN126@put@2
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN128@put@2
	or	eax, 4
$LN128@put@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN126@put@2:
; Line 541
	mov	DWORD PTR __$EHRec$[ebp+12], 4
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN130@put@2
	mov	ecx, esi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN130@put@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN142@put@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN142@put@2:
	mov	eax, esi
; Line 542
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$3:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z$13:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::put
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$15
__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$16 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$0
__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$16
__ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
	DD	01H
	DD	FLAT:__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
_TEXT	SEGMENT
$T112978 = -52						; size = 8
__Ok$ = -44						; size = 8
__Nput_fac$90445 = -36					; size = 4
$T113092 = -32						; size = 1
__Lock$113078 = -32					; size = 4
$T112975 = -28						; size = 4
__State$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
$T112979 = 12						; size = 8
__Val$ = 12						; size = 8
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 387
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
; Line 389
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN18@operator@10
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN18@operator@10:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], edi
	jne	SHORT $LN14@operator@10
	mov	eax, DWORD PTR [eax+esi+60]
	cmp	eax, edi
	je	SHORT $LN14@operator@10
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN14@operator@10:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+esi+12], edi
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 391
	test	cl, cl
	je	$LN13@operator@10
; Line 393
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR $T112975[ebp]
	push	edx
	add	ecx, esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ebx, DWORD PTR $T112975[ebp]
	mov	DWORD PTR __Nput_fac$90445[ebp], eax
	test	ebx, ebx
	je	SHORT $LN42@operator@10
	push	0
	lea	ecx, DWORD PTR __Lock$113078[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN44@operator@10
	cmp	eax, -1
	jae	SHORT $LN44@operator@10
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN44@operator@10:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$113078[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, ebx
	je	SHORT $LN42@operator@10
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN42@operator@10:
; Line 395
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 397
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+esi+56]
	mov	ebx, DWORD PTR __Val$[ebp+4]
	mov	cl, BYTE PTR [ecx+esi+64]
	push	ebx
	mov	ebx, DWORD PTR __Val$[ebp]
	push	ebx
	mov	BYTE PTR $T113092[ebp], cl
	mov	ebx, DWORD PTR $T113092[ebp]
	mov	ecx, DWORD PTR __Nput_fac$90445[ebp]
	mov	edi, DWORD PTR [ecx]
	push	ebx
	add	eax, esi
	push	eax
	push	edx
	mov	BYTE PTR $T112978[ebp], 0
	mov	edx, DWORD PTR $T112978[ebp]
	push	edx
	mov	edx, DWORD PTR [edi+16]
	lea	eax, DWORD PTR $T112979[ebp]
	push	eax
	call	edx
	cmp	BYTE PTR $T112979[ebp], 0
	je	SHORT $LN1@operator@10
; Line 398
	mov	DWORD PTR __State$[ebp], 4
$LN1@operator@10:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN13@operator@10
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$0:
; Line 399
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN65@operator@10
	or	eax, 4
$LN65@operator@10:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN147@operator@10
	ret	0
$LN147@operator@10:
	mov	esi, DWORD PTR _this$[ebp]
$LN13@operator@10:
; Line 402
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN127@operator@10
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN129@operator@10
	or	eax, 4
$LN129@operator@10:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN127@operator@10:
; Line 403
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN131@operator@10
	mov	ecx, esi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN131@operator@10:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN143@operator@10
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN143@operator@10:
	mov	eax, esi
; Line 404
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$4:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$3:
	lea	ecx, DWORD PTR $T112975[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z$15:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$15
__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$16 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$0
__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$16
__ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	DD	01H
	DD	FLAT:__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
$T113314 = -48						; size = 8
$T113313 = -48						; size = 8
__Ok$ = -40						; size = 8
__Nput_fac$90427 = -32					; size = 4
$T113431 = -28						; size = 1
__Lock$113413 = -28					; size = 4
$T113308 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 281
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
; Line 283
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN20@operator@11
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN20@operator@11:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], edi
	jne	SHORT $LN16@operator@11
	mov	eax, DWORD PTR [eax+esi+60]
	cmp	eax, edi
	je	SHORT $LN16@operator@11
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN16@operator@11:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+esi+12], edi
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 285
	test	cl, cl
	je	$LN15@operator@11
; Line 287
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR $T113308[ebp]
	push	edx
	add	ecx, esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ebx, DWORD PTR $T113308[ebp]
	mov	DWORD PTR __Nput_fac$90427[ebp], eax
	test	ebx, ebx
	je	SHORT $LN44@operator@11
	push	0
	lea	ecx, DWORD PTR __Lock$113413[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN46@operator@11
	cmp	eax, -1
	jae	SHORT $LN46@operator@11
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN46@operator@11:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$113413[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, ebx
	je	SHORT $LN44@operator@11
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN44@operator@11:
; Line 289
	mov	ecx, DWORD PTR [esi]
; Line 296
	mov	ebx, DWORD PTR __Val$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+esi+56]
	push	ebx
	mov	BYTE PTR $T113313[ebp], 0
	mov	cl, BYTE PTR [ecx+esi+64]
	mov	BYTE PTR $T113431[ebp], cl
	mov	ebx, DWORD PTR $T113431[ebp]
	mov	ecx, DWORD PTR __Nput_fac$90427[ebp]
	mov	edi, DWORD PTR [ecx]
	push	ebx
	add	eax, esi
	push	eax
	push	edx
	mov	edx, DWORD PTR $T113313[ebp]
	push	edx
	mov	edx, DWORD PTR [edi+28]
	lea	eax, DWORD PTR $T113314[ebp]
	push	eax
	call	edx
	cmp	BYTE PTR $T113314[ebp], 0
	je	SHORT $LN1@operator@11
; Line 297
	mov	DWORD PTR __State$[ebp], 4
$LN1@operator@11:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN15@operator@11
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$0:
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN69@operator@11
	or	eax, 4
$LN69@operator@11:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN151@operator@11
	ret	0
$LN151@operator@11:
	mov	esi, DWORD PTR _this$[ebp]
$LN15@operator@11:
; Line 301
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN131@operator@11
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN133@operator@11
	or	eax, 4
$LN133@operator@11:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN131@operator@11:
; Line 302
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN135@operator@11
	mov	ecx, esi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN135@operator@11:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN147@operator@11
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN147@operator@11:
	mov	eax, esi
; Line 303
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$4:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$3:
	lea	ecx, DWORD PTR $T113308[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z$15:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$15
__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$16 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$0
__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$16
__ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
	DD	01H
	DD	FLAT:__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT
__Ok$ = -48						; size = 8
$T113651 = -40						; size = 8
$T113764 = -36						; size = 1
__Lock$113750 = -36					; size = 4
$T113650 = -32						; size = 8
$T113741 = -28						; size = 4
$T113647 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 2
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
; Line 263
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN18@operator@12
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN18@operator@12:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], edi
	jne	SHORT $LN14@operator@12
	mov	eax, DWORD PTR [eax+esi+60]
	cmp	eax, edi
	je	SHORT $LN14@operator@12
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN14@operator@12:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+esi+12], edi
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 265
	test	cl, cl
	je	$LN13@operator@12
; Line 267
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR $T113647[ebp]
	push	edx
	add	ecx, esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	edi, DWORD PTR $T113647[ebp]
	mov	ebx, eax
	test	edi, edi
	je	SHORT $LN42@operator@12
	push	0
	lea	ecx, DWORD PTR __Lock$113750[ebp]
	mov	DWORD PTR $T113741[ebp], edi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN44@operator@12
	cmp	eax, -1
	jae	SHORT $LN44@operator@12
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN44@operator@12:
	mov	edi, DWORD PTR [edi+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$113750[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, DWORD PTR $T113741[ebp]
	je	SHORT $LN42@operator@12
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN42@operator@12:
; Line 269
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 271
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+esi+56]
	mov	cl, BYTE PTR [ecx+esi+64]
	mov	edi, DWORD PTR [ebx]
	mov	BYTE PTR $T113764[ebp], cl
	movzx	ecx, WORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T113764[ebp]
	push	ecx
	add	eax, esi
	push	eax
	push	edx
	mov	BYTE PTR $T113650[ebp], 0
	mov	edx, DWORD PTR $T113650[ebp]
	push	edx
	mov	edx, DWORD PTR [edi+24]
	lea	eax, DWORD PTR $T113651[ebp]
	push	eax
	mov	ecx, ebx
	call	edx
	cmp	BYTE PTR $T113651[ebp], 0
	je	SHORT $LN1@operator@12
; Line 272
	mov	DWORD PTR __State$[ebp], 4
$LN1@operator@12:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN13@operator@12
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$0:
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN65@operator@12
	or	eax, 4
$LN65@operator@12:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN147@operator@12
	ret	0
$LN147@operator@12:
	mov	esi, DWORD PTR _this$[ebp]
$LN13@operator@12:
; Line 276
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN127@operator@12
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN129@operator@12
	or	eax, 4
$LN129@operator@12:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN127@operator@12:
; Line 277
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN131@operator@12
	mov	ecx, esi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN131@operator@12:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN143@operator@12
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN143@operator@12:
	mov	eax, esi
; Line 278
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$4:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$3:
	lea	ecx, DWORD PTR $T113647[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z$15:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtp
;	COMDAT ?endl@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@AAV21@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
?endl@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@AAV21@@Z PROC ; std::endl, COMDAT
; Line 1013
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1014
	mov	esi, DWORD PTR __Ostr$[ebp]
	push	edi
	push	esi
	call	?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put
; Line 1015
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN3@endl
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN3@endl
	mov	edi, 4
$LN3@endl:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN23@endl
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN21@endl
	or	eax, 4
$LN21@endl:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN23@endl:
; Line 1016
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1017
	pop	ebp
	ret	0
?endl@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@AAV21@@Z ENDP ; std::endl
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z PROC ; std::endl, COMDAT
; Line 1004
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 1005
	mov	esi, DWORD PTR __Ostr$[ebp]
	push	edi
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
; Line 1006
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN3@endl@2
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN3@endl@2
	mov	edi, 4
$LN3@endl@2:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN23@endl@2
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN21@endl@2
	or	eax, 4
$LN21@endl@2:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN23@endl@2:
; Line 1008
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ecx
	pop	ebp
	ret	0
?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z ENDP ; std::endl
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@ios_base@std@@IAEXXZ
_TEXT	SEGMENT
__Lock$114124 = -8					; size = 4
$T114120 = -4						; size = 4
?_Init@ios_base@std@@IAEXXZ PROC			; std::ios_base::_Init, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\xiosbase
; Line 554
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 555
	xor	edi, edi
; Line 563
	push	edi
	push	edi
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 513			; 00000201H
	mov	DWORD PTR [esi+24], 6
	mov	DWORD PTR [esi+28], edi
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+44], edi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 564
	push	4
	call	??2@YAPAXI@Z				; operator new
	mov	ebx, eax
	add	esp, 4
	cmp	ebx, edi
	je	SHORT $LN3@Init@3
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [ebx], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	edi
	lea	ecx, DWORD PTR __Lock$114124[ebp]
	mov	DWORD PTR $T114120[ebp], eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	ecx, DWORD PTR $T114120[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, -1
	jae	SHORT $LN9@Init@3
	inc	eax
	mov	DWORD PTR [ecx+4], eax
$LN9@Init@3:
	lea	ecx, DWORD PTR __Lock$114124[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	edi
	mov	DWORD PTR [esi+48], ebx
	pop	esi
	pop	ebx
; Line 565
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@Init@3:
; Line 564
	mov	DWORD PTR [esi+48], edi
	pop	edi
	pop	esi
	pop	ebx
; Line 565
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@ios_base@std@@IAEXXZ ENDP			; std::ios_base::_Init
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$13
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$14 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$14
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
$T114155 = -40						; size = 8
$T114151 = -40						; size = 8
__Ok$ = -40						; size = 8
__Size$ = -28						; size = 4
__State$ = -24						; size = 4
__Pad$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Ostr$[ebp]
; Line 498
	mov	eax, DWORD PTR __Str$[ebp]
; Line 500
	mov	ecx, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax+esi+36]
	mov	ecx, DWORD PTR [eax+esi+32]
	mov	DWORD PTR __State$[ebp], 0
	mov	DWORD PTR __Size$[ebp], edi
	test	edx, edx
	jl	SHORT $LN17@operator@13
	jg	SHORT $LN204@operator@13
	test	ecx, ecx
	je	SHORT $LN17@operator@13
$LN204@operator@13:
	mov	DWORD PTR $T114151[ebp], ecx
	mov	DWORD PTR $T114151[ebp+4], edx
	cmp	ecx, edi
	jbe	SHORT $LN17@operator@13
	sub	ecx, edi
	mov	DWORD PTR $T114155[ebp+4], edx
	mov	DWORD PTR __Pad$[ebp], ecx
	jmp	SHORT $LN18@operator@13
$LN17@operator@13:
	mov	DWORD PTR __Pad$[ebp], 0
$LN18@operator@13:
; Line 501
	mov	eax, DWORD PTR [eax+esi+56]
	xor	edi, edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	eax, edi
	je	SHORT $LN36@operator@13
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN36@operator@13:
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+esi+12], edi
	jne	SHORT $LN32@operator@13
	mov	eax, DWORD PTR [eax+esi+60]
	cmp	eax, edi
	je	SHORT $LN32@operator@13
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN32@operator@13:
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax+esi+12], edi
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 503
	test	cl, cl
	jne	SHORT $LN14@operator@13
; Line 504
	mov	ebx, 4
; Line 505
	jmp	$LN22@operator@13
$LN14@operator@13:
; Line 507
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 508
	mov	eax, DWORD PTR [eax+esi+20]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN209@operator@13
	npad	3
$LL10@operator@13:
; Line 509
	cmp	DWORD PTR __Pad$[ebp], edi
	jbe	SHORT $LN208@operator@13
; Line 511
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [eax+esi]
	mov	al, BYTE PTR [ecx+64]
	mov	ecx, DWORD PTR [ecx+56]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], edi
	je	SHORT $LN65@operator@13
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], edi
	jle	SHORT $LN65@operator@13
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], ebx
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN66@operator@13
$LN65@operator@13:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN66@operator@13:
	cmp	eax, -1
	jne	SHORT $LN9@operator@13
; Line 513
	mov	ebx, DWORD PTR __State$[ebp]
	or	ebx, 4
	mov	DWORD PTR __State$[ebp], ebx
; Line 514
	jmp	SHORT $LN8@operator@13
$LN9@operator@13:
; Line 509
	dec	DWORD PTR __Pad$[ebp]
	jmp	SHORT $LL10@operator@13
$LN208@operator@13:
	mov	ebx, DWORD PTR __State$[ebp]
$LN8@operator@13:
; Line 518
	cmp	ebx, edi
	je	SHORT $LN202@operator@13
	npad	5
$LL203@operator@13:
; Line 521
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN2@operator@13
; Line 523
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	mov	al, BYTE PTR [ecx+esi+64]
	mov	ecx, DWORD PTR [ecx+esi+56]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	$LN97@operator@13
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	$LN97@operator@13
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	edi, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	$LN98@operator@13
$LN209@operator@13:
; Line 518
	mov	ebx, DWORD PTR __State$[ebp]
$LN202@operator@13:
	mov	eax, DWORD PTR __Str$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN85@operator@13
	mov	eax, DWORD PTR [eax]
$LN85@operator@13:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+56]
	mov	edx, DWORD PTR [ecx]
	push	edi
	push	DWORD PTR __Size$[ebp]
	push	eax
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR __Size$[ebp]
	jne	SHORT $LN205@operator@13
	cmp	edx, edi
	je	SHORT $LL203@operator@13
$LN205@operator@13:
; Line 519
	mov	ebx, 4
$LN2@operator@13:
; Line 528
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	xor	ecx, ecx
	mov	DWORD PTR [eax+esi+32], ecx
	mov	DWORD PTR [eax+esi+36], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN22@operator@13:
; Line 532
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	test	ebx, ebx
	je	SHORT $LN184@operator@13
	mov	eax, DWORD PTR [ecx+12]
	or	eax, ebx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN186@operator@13
	or	eax, 4
$LN186@operator@13:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN184@operator@13:
; Line 533
	mov	DWORD PTR __$EHRec$[ebp+12], 4
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	mov	edi, DWORD PTR __Ok$[ebp]
	test	al, al
	jne	SHORT $LN188@operator@13
	mov	ecx, edi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN188@operator@13:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+edi+56]
	test	ecx, ecx
	je	SHORT $LN207@operator@13
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN207@operator@13:
	mov	eax, esi
; Line 534
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 523
$LN97@operator@13:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN98@operator@13:
	cmp	eax, -1
	jne	SHORT $LN3@operator@13
; Line 525
	or	ebx, 4
; Line 526
	jmp	$LN2@operator@13
$LN3@operator@13:
; Line 521
	dec	DWORD PTR __Pad$[ebp]
	jmp	$LL203@operator@13
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 529
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN122@operator@13
	or	eax, 4
$LN122@operator@13:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN23@operator@13
	ret	0
$LN23@operator@13:
	mov	esi, DWORD PTR __Ostr$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]
	jmp	$LN22@operator@13
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$13:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$13
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$14 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$14
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
__Ok$ = -40						; size = 8
__Pad$ = -32						; size = 8
tv284 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 767
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Ostr$[ebp]
; Line 771
	mov	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __State$[ebp], 0
	lea	ecx, DWORD PTR [eax+1]
	npad	5
$LL198@operator@14:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL198@operator@14
	sub	eax, ecx
	mov	DWORD PTR tv284[ebp], eax
; Line 773
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+esi+36]
	mov	eax, DWORD PTR [edx+esi+32]
	xor	edi, edi
	test	ecx, ecx
	jl	SHORT $LN17@operator@14
	jg	SHORT $LN199@operator@14
	test	eax, eax
	je	SHORT $LN17@operator@14
$LN199@operator@14:
	cmp	ecx, edi
	jl	SHORT $LN17@operator@14
	jg	SHORT $LN200@operator@14
	cmp	eax, DWORD PTR tv284[ebp]
	jbe	SHORT $LN17@operator@14
$LN200@operator@14:
	sub	eax, DWORD PTR tv284[ebp]
	sbb	ecx, edi
	mov	ebx, eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
	jmp	SHORT $LN18@operator@14
$LN17@operator@14:
	xor	ebx, ebx
	mov	DWORD PTR __Pad$[ebp+4], ebx
$LN18@operator@14:
; Line 774
	mov	edx, DWORD PTR [edx+esi+56]
	mov	DWORD PTR __Ok$[ebp], esi
	test	edx, edx
	je	SHORT $LN36@operator@14
	mov	eax, DWORD PTR [edx]
	mov	ecx, edx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN36@operator@14:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax+esi+12], 0
	jne	SHORT $LN32@operator@14
	mov	eax, DWORD PTR [eax+esi+60]
	test	eax, eax
	je	SHORT $LN32@operator@14
	mov	ecx, eax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN32@operator@14:
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax+esi+12], 0
	sete	cl
	mov	BYTE PTR __Ok$[ebp+4], cl
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 776
	test	cl, cl
	jne	SHORT $LN14@operator@14
; Line 777
	mov	edx, 4
; Line 778
	jmp	$LN22@operator@14
$LN14@operator@14:
; Line 780
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 781
	mov	eax, DWORD PTR [eax+esi+20]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN196@operator@14
	npad	2
$LL10@operator@14:
; Line 782
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	SHORT $LN8@operator@14
	jg	SHORT $LN201@operator@14
	test	ebx, ebx
	je	SHORT $LN8@operator@14
$LN201@operator@14:
; Line 784
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	mov	al, BYTE PTR [ecx+esi+64]
	mov	ecx, DWORD PTR [ecx+esi+56]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN65@operator@14
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN65@operator@14
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	edi, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN66@operator@14
$LN65@operator@14:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN66@operator@14:
	cmp	eax, -1
	jne	$LN9@operator@14
; Line 786
	or	DWORD PTR __State$[ebp], 4
$LN8@operator@14:
; Line 791
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN2@operator@14
$LN196@operator@14:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+56]
	mov	edx, DWORD PTR tv284[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	xor	edi, edi
	push	edi
	push	edx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	eax
	cmp	eax, DWORD PTR tv284[ebp]
	jne	SHORT $LN202@operator@14
	cmp	edx, edi
	je	$LL197@operator@14
$LN202@operator@14:
; Line 792
	mov	DWORD PTR __State$[ebp], 4
$LN2@operator@14:
; Line 802
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	xor	ecx, ecx
	mov	DWORD PTR [eax+esi+32], ecx
	mov	DWORD PTR [eax+esi+36], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN217@operator@14:
	mov	edx, DWORD PTR __State$[ebp]
$LN22@operator@14:
; Line 806
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN178@operator@14
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN180@operator@14
	or	eax, 4
$LN180@operator@14:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN178@operator@14:
; Line 807
	mov	DWORD PTR __$EHRec$[ebp+12], 4
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	mov	edi, DWORD PTR __Ok$[ebp]
	test	al, al
	jne	SHORT $LN182@operator@14
	mov	ecx, edi
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN182@operator@14:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+edi+56]
	test	ecx, ecx
	je	SHORT $LN205@operator@14
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN205@operator@14:
	mov	eax, esi
; Line 808
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@operator@14:
; Line 782
	add	ebx, -1
	adc	DWORD PTR __Pad$[ebp+4], -1
	jmp	$LL10@operator@14
	npad	8
$LL197@operator@14:
; Line 795
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN2@operator@14
	jg	SHORT $LN203@operator@14
	test	ebx, ebx
	je	$LN2@operator@14
$LN203@operator@14:
; Line 797
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	mov	al, BYTE PTR [ecx+esi+64]
	mov	ecx, DWORD PTR [ecx+esi+56]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN91@operator@14
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN91@operator@14
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	edi, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN92@operator@14
$LN91@operator@14:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN92@operator@14:
	cmp	eax, -1
	jne	SHORT $LN3@operator@14
; Line 799
	or	DWORD PTR __State$[ebp], 4
; Line 800
	jmp	$LN2@operator@14
$LN3@operator@14:
; Line 795
	add	ebx, -1
	adc	DWORD PTR __Pad$[ebp+4], -1
	jmp	SHORT $LL197@operator@14
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 803
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN116@operator@14
	or	eax, 4
$LN116@operator@14:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN23@operator@14
	ret	0
$LN23@operator@14:
	mov	esi, DWORD PTR __Ostr$[ebp]
	jmp	$LN217@operator@14
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	ret	0
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$13:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z
_TEXT	SEGMENT
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::init, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ios
; Line 154
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 155
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
; Line 156
	mov	eax, DWORD PTR __Strbuf$[ebp]
; Line 158
	push	32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+60], 0
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
; Line 160
	cmp	DWORD PTR [esi+56], 0
	mov	BYTE PTR [esi+64], al
	jne	SHORT $LN10@init
; Line 161
	mov	eax, DWORD PTR [esi+12]
	or	eax, 4
	push	0
	push	eax
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN10@init:
; Line 163
	cmp	BYTE PTR __Isstd$[ebp], 0
	je	SHORT $LN1@init
; Line 164
	push	esi
	call	?_Addstd@ios_base@std@@SAXPAV12@@Z	; std::ios_base::_Addstd
	add	esp, 4
$LN1@init:
	pop	esi
; Line 165
	pop	ebp
	ret	8
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::init
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0
__ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T115035 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
_$initVBases$ = 16					; size = 4
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files\microsoft visual studio 10.0\vc\include\ostream
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	cmp	DWORD PTR _$initVBases$[ebp], 0
	mov	DWORD PTR $T115035[ebp], 0
	je	SHORT $LN1@basic_ostr
	mov	DWORD PTR [edi], OFFSET ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [edi+8], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T115035[ebp], 1
$LN1@basic_ostr:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+ecx], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
; Line 51
	mov	edx, DWORD PTR [edi]
	mov	esi, DWORD PTR [edx+4]
	add	esi, edi
	mov	ecx, esi
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	mov	eax, DWORD PTR __Strbuf$[ebp]
	push	32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+60], 0
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	cmp	DWORD PTR [esi+56], 0
	mov	BYTE PTR [esi+64], al
	jne	SHORT $LN19@basic_ostr
	mov	eax, DWORD PTR [esi+12]
	or	eax, 4
	push	0
	push	eax
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN19@basic_ostr:
	cmp	BYTE PTR __Isstd$[ebp], 0
	je	SHORT $LN23@basic_ostr
	push	esi
	call	?_Addstd@ios_base@std@@SAXPAV12@@Z	; std::ios_base::_Addstd
	add	esp, 4
$LN23@basic_ostr:
; Line 52
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0:
	mov	eax, DWORD PTR $T115035[ebp]
	and	eax, 1
	je	$LN5@basic_ostr
	and	DWORD PTR $T115035[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_ostr:
	ret	0
__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$1
__ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T115093 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\fstream
; Line 933
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	mov	DWORD PTR $T115093[ebp], ebx
	mov	DWORD PTR _this$[ebp], OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A, OFFSET ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96
	mov	DWORD PTR $T115093[ebp], 1
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96, OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	push	32					; 00000020H
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+152, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+156, ebx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+160, al
	cmp	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+152, ebx
	jne	SHORT $LN30@basic_ofst
	mov	eax, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+108
	or	eax, 4
	push	ebx
	push	eax
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN30@basic_ofst:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A[ecx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4, OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+84, bl
	mov	BYTE PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+77, bl
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+20, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+12
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+24, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+16
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+36, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+28
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+40, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+32
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+52, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+44
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+56, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+48
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+16, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+32, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+48, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+12, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+28, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+44, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+88, ebx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+80, edx
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+72, ebx
; Line 934
	mov	eax, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR $T115093[ebp]
	and	eax, 1
	je	$LN5@basic_ofst
	and	DWORD PTR $T115093[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_ofst:
	ret	0
__unwindfunclet$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	__$ArrayPad$
PUBLIC	?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; searchDir
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12
	DD	02H
	DD	FLAT:__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13
__ehfuncinfo$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
_inAccess$90059 = -1088					; size = 8
_inModi$89946 = -1080					; size = 8
_inModi$90057 = -1072					; size = 8
_inAccess$89948 = -1064					; size = 8
_inCreate$90055 = -1056					; size = 8
_inCreate$89944 = -1048					; size = 8
_FileSize$89874 = -1040					; size = 8
$T117154 = -1028					; size = 1
$T118167 = -1028					; size = 1
$T115240 = -1028					; size = 4
_hFile$ = -1024						; size = 4
_sw$90050 = -1020					; size = 4
_sw$89939 = -1020					; size = 4
$T115239 = -1020					; size = 4
_outModi$90056 = -1016					; size = 16
_outCreate$89943 = -1000				; size = 16
_outAccess$89947 = -984					; size = 16
_outCreate$90054 = -968					; size = 16
_outModi$89945 = -952					; size = 16
_outAccess$90058 = -936					; size = 16
_sfi$90051 = -920					; size = 352
_sfi$89940 = -920					; size = 352
_md5$ = -568						; size = 140
_fileInfo$ = -424					; size = 320
$T89961 = -100						; size = 28
$T89952 = -100						; size = 28
$T89819 = -100						; size = 28
$T89818 = -100						; size = 28
$T89812 = -100						; size = 28
_stemp$90046 = -72					; size = 28
_stemp$89875 = -72					; size = 28
$T89813 = -72						; size = 28
$T89802 = -72						; size = 28
_tempStr$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_basePath$ = 8						; size = 28
_pathWithFile$ = 36					; size = 28
?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; searchDir, COMDAT
; File c:\users\javis\documents\github\autoscan\launcher\launcher\scandir.cpp
; Line 384
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1076				; 00000434H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 385
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	push	edi
	mov	ebx, 15					; 0000000fH
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _tempStr$[ebp]
	mov	DWORD PTR _tempStr$[ebp+20], ebx
	mov	DWORD PTR _tempStr$[ebp+16], edi
	mov	BYTE PTR _tempStr$[ebp], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 390
	push	OFFSET ??_C@_02KHDDNBB@?2?$CK?$AA@
	lea	eax, DWORD PTR _basePath$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T89802[ebp]
	push	ecx
	mov	DWORD PTR _md5$[ebp+20], edi
	mov	DWORD PTR _md5$[ebp+16], edi
	mov	DWORD PTR _md5$[ebp], 1732584193	; 67452301H
	mov	DWORD PTR _md5$[ebp+4], -271733879	; efcdab89H
	mov	DWORD PTR _md5$[ebp+8], -1732584194	; 98badcfeH
	mov	DWORD PTR _md5$[ebp+12], 271733878	; 10325476H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	esi, eax
	lea	edx, DWORD PTR _tempStr$[ebp]
	cmp	edx, esi
	je	SHORT $LN81@searchDir
	cmp	DWORD PTR _tempStr$[ebp+20], 16		; 00000010H
	jb	SHORT $LN111@searchDir
	mov	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN111@searchDir:
	mov	DWORD PTR _tempStr$[ebp+20], ebx
	mov	DWORD PTR _tempStr$[ebp+16], edi
	mov	BYTE PTR _tempStr$[ebp], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jae	SHORT $LN80@searchDir
	mov	eax, DWORD PTR [esi+16]
	inc	eax
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	esi
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN79@searchDir
$LN80@searchDir:
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR _tempStr$[ebp], edx
	mov	DWORD PTR [esi], edi
$LN79@searchDir:
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR _tempStr$[ebp+16], eax
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR _tempStr$[ebp+20], ecx
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
$LN81@searchDir:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T89802[ebp+20], 16		; 00000010H
	jb	SHORT $LN133@searchDir
	mov	edx, DWORD PTR $T89802[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN133@searchDir:
; Line 391
	cmp	DWORD PTR _tempStr$[ebp+20], 16		; 00000010H
	mov	eax, DWORD PTR _tempStr$[ebp]
	jae	SHORT $LN150@searchDir
	lea	eax, DWORD PTR _tempStr$[ebp]
$LN150@searchDir:
	lea	ecx, DWORD PTR _fileInfo$[ebp]
	push	ecx
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _hFile$[ebp], eax
; Line 393
	call	DWORD PTR __imp__GetLastError@0
	npad	11
$LL23@searchDir:
; Line 400
	cmp	BYTE PTR _fileInfo$[ebp+44], 46		; 0000002eH
	je	$LN22@searchDir
; Line 403
	test	BYTE PTR _fileInfo$[ebp], 16		; 00000010H
	je	$LN19@searchDir
; Line 405
	lea	edx, DWORD PTR _fileInfo$[ebp+44]
	push	edx
	lea	eax, DWORD PTR _basePath$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T89812[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	lea	esi, DWORD PTR $T89813[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	edi, eax
	lea	esi, DWORD PTR _tempStr$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	ebx, 16					; 00000010H
	cmp	DWORD PTR $T89813[ebp+20], ebx
	jb	SHORT $LN161@searchDir
	mov	edx, DWORD PTR $T89813[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN161@searchDir:
	xor	esi, esi
	mov	edi, 15					; 0000000fH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	DWORD PTR $T89813[ebp+20], edi
	mov	DWORD PTR $T89813[ebp+16], esi
	mov	BYTE PTR $T89813[ebp], 0
	cmp	DWORD PTR $T89812[ebp+20], ebx
	jb	SHORT $LN183@searchDir
	mov	eax, DWORD PTR $T89812[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN183@searchDir:
; Line 408
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T115239[ebp], esp
	push	-1
	push	esi
	lea	edx, DWORD PTR _pathWithFile$[ebp]
	mov	DWORD PTR [ecx+20], edi
	mov	DWORD PTR [ecx+16], esi
	push	edx
	mov	BYTE PTR [ecx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	DWORD PTR $T115240[ebp], esp
	push	-1
	push	esi
	lea	eax, DWORD PTR _tempStr$[ebp]
	mov	DWORD PTR [ecx+20], edi
	mov	DWORD PTR [ecx+16], esi
	push	eax
	mov	BYTE PTR [ecx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; searchDir
	add	esp, 56					; 00000038H
; Line 411
	jmp	$LN22@searchDir
$LN19@searchDir:
; Line 413
	lea	ecx, DWORD PTR _fileInfo$[ebp+44]
	push	ecx
	lea	edx, DWORD PTR _basePath$[ebp]
	push	edx
	lea	eax, DWORD PTR $T89818[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	esi, eax
	lea	ecx, DWORD PTR _pathWithFile$[ebp]
	cmp	ecx, esi
	je	SHORT $LN253@searchDir
	mov	ebx, 16					; 00000010H
	cmp	DWORD PTR _pathWithFile$[ebp+20], ebx
	jb	SHORT $LN283@searchDir
	mov	edx, DWORD PTR _pathWithFile$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN283@searchDir:
	xor	edi, edi
	mov	DWORD PTR _pathWithFile$[ebp+20], 15	; 0000000fH
	mov	DWORD PTR _pathWithFile$[ebp+16], edi
	mov	BYTE PTR _pathWithFile$[ebp], 0
	cmp	DWORD PTR [esi+20], ebx
	jae	SHORT $LN252@searchDir
	mov	eax, DWORD PTR [esi+16]
	inc	eax
	push	eax
	lea	eax, DWORD PTR _pathWithFile$[ebp]
	push	esi
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN251@searchDir
$LN252@searchDir:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR _pathWithFile$[ebp], ecx
	mov	DWORD PTR [esi], edi
$LN251@searchDir:
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR _pathWithFile$[ebp+16], edx
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR _pathWithFile$[ebp+20], eax
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
$LN253@searchDir:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T89818[ebp+20], 16		; 00000010H
	jb	SHORT $LN305@searchDir
	mov	ecx, DWORD PTR $T89818[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN305@searchDir:
; Line 414
	lea	eax, DWORD PTR _fileInfo$[ebp+44]
	lea	edx, DWORD PTR [eax+1]
$LL973@searchDir:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL973@searchDir
	sub	eax, edx
	push	eax
	lea	edx, DWORD PTR _fileInfo$[ebp+44]
	push	edx
	lea	ecx, DWORD PTR _tempStr$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 416
	mov	eax, DWORD PTR _tempStr$[ebp+16]
	cmp	eax, 1
	jb	SHORT $LN958@searchDir
	dec	eax
	cmp	eax, -1
	jbe	SHORT $LN339@searchDir
	or	eax, -1
$LN339@searchDir:
	mov	edi, DWORD PTR _tempStr$[ebp+20]
	mov	ebx, DWORD PTR _tempStr$[ebp]
	mov	ecx, ebx
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN344@searchDir
	lea	ecx, DWORD PTR _tempStr$[ebp]
$LN344@searchDir:
	lea	esi, DWORD PTR [ecx+eax]
$LL332@searchDir:
	cmp	BYTE PTR [esi], 46			; 0000002eH
	jne	SHORT $LN329@searchDir
	movzx	eax, BYTE PTR [esi]
	sub	eax, 46					; 0000002eH
	je	SHORT $LN352@searchDir
	sar	eax, 31					; 0000001fH
	or	eax, 1
	je	SHORT $LN352@searchDir
$LN329@searchDir:
	lea	ecx, DWORD PTR _tempStr$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	esi, eax
	je	SHORT $LN958@searchDir
	dec	esi
	jmp	SHORT $LL332@searchDir
$LN352@searchDir:
	mov	eax, ebx
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN358@searchDir
	lea	eax, DWORD PTR _tempStr$[ebp]
$LN358@searchDir:
	sub	esi, eax
	jmp	SHORT $LN991@searchDir
$LN958@searchDir:
	or	esi, -1
$LN991@searchDir:
	inc	esi
	push	esi
	lea	esi, DWORD PTR $T89819[ebp]
	lea	ecx, DWORD PTR _tempStr$[ebp]
	mov	ebx, 16					; 00000010H
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	esi, eax
	lea	eax, DWORD PTR _tempStr$[ebp]
	cmp	eax, esi
	je	SHORT $LN365@searchDir
	cmp	DWORD PTR _tempStr$[ebp+20], ebx
	jb	SHORT $LN395@searchDir
	mov	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN395@searchDir:
	xor	edi, edi
	mov	DWORD PTR _tempStr$[ebp+20], 15		; 0000000fH
	mov	DWORD PTR _tempStr$[ebp+16], edi
	mov	BYTE PTR _tempStr$[ebp], 0
	cmp	DWORD PTR [esi+20], ebx
	jae	SHORT $LN364@searchDir
	mov	eax, DWORD PTR [esi+16]
	inc	eax
	push	eax
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	esi
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN363@searchDir
$LN364@searchDir:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _tempStr$[ebp], eax
	mov	DWORD PTR [esi], edi
$LN363@searchDir:
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR _tempStr$[ebp+16], ecx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR _tempStr$[ebp+20], edx
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
$LN365@searchDir:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T89819[ebp+20], ebx
	jb	SHORT $LN417@searchDir
	mov	eax, DWORD PTR $T89819[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN417@searchDir:
; Line 421
	mov	edi, DWORD PTR _tempStr$[ebp+16]
	mov	edx, edi
	cmp	edi, 3
	jb	SHORT $LN440@searchDir
	mov	edx, 3
$LN440@searchDir:
	mov	esi, DWORD PTR _tempStr$[ebp]
	cmp	DWORD PTR _tempStr$[ebp+20], ebx
	jae	SHORT $LN451@searchDir
	lea	esi, DWORD PTR _tempStr$[ebp]
$LN451@searchDir:
	mov	ecx, OFFSET ??_C@_03JACLIBNI@exe?$AA@
	cmp	edx, 4
	jb	SHORT $LN959@searchDir
	npad	2
$LL455@searchDir:
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN456@searchDir
	sub	edx, 4
	add	ecx, 4
	add	esi, 4
	cmp	edx, 4
	jae	SHORT $LL455@searchDir
$LN959@searchDir:
	test	edx, edx
	je	SHORT $LN457@searchDir
$LN456@searchDir:
	movzx	eax, BYTE PTR [esi]
	movzx	ebx, BYTE PTR [ecx]
	sub	eax, ebx
	jne	SHORT $LN458@searchDir
	cmp	edx, 1
	jbe	SHORT $LN457@searchDir
	movzx	eax, BYTE PTR [esi+1]
	movzx	ebx, BYTE PTR [ecx+1]
	sub	eax, ebx
	jne	SHORT $LN458@searchDir
	cmp	edx, 2
	jbe	SHORT $LN457@searchDir
	movzx	eax, BYTE PTR [esi+2]
	movzx	ebx, BYTE PTR [ecx+2]
	sub	eax, ebx
	jne	SHORT $LN458@searchDir
	cmp	edx, 3
	jbe	SHORT $LN457@searchDir
	movzx	eax, BYTE PTR [esi+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN458@searchDir:
	sar	eax, 31					; 0000001fH
	or	eax, 1
	jmp	SHORT $LN459@searchDir
$LN457@searchDir:
	xor	eax, eax
$LN459@searchDir:
	test	eax, eax
	jne	SHORT $LN992@searchDir
	cmp	edi, 3
	jae	SHORT $LN441@searchDir
	or	eax, -1
	jmp	SHORT $LN442@searchDir
$LN441@searchDir:
	xor	eax, eax
	cmp	edi, 3
	setne	al
$LN442@searchDir:
	test	eax, eax
$LN992@searchDir:
	sete	al
	test	al, al
	jne	$LN16@searchDir
	mov	eax, edi
	cmp	edi, 3
	jb	SHORT $LN474@searchDir
	mov	eax, 3
$LN474@searchDir:
	mov	ebx, DWORD PTR _tempStr$[ebp+20]
	mov	esi, DWORD PTR _tempStr$[ebp]
	mov	edx, esi
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN485@searchDir
	lea	edx, DWORD PTR _tempStr$[ebp]
$LN485@searchDir:
	mov	ecx, OFFSET ??_C@_03JNNAEMKE@EXE?$AA@
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	jne	SHORT $LN993@searchDir
	cmp	edi, 3
	jae	SHORT $LN475@searchDir
	or	eax, -1
	jmp	SHORT $LN476@searchDir
$LN475@searchDir:
	xor	eax, eax
	cmp	edi, 3
	setne	al
$LN476@searchDir:
	test	eax, eax
$LN993@searchDir:
	sete	al
	test	al, al
	jne	$LN16@searchDir
; Line 482
	mov	eax, edi
	cmp	edi, 3
	jb	SHORT $LN723@searchDir
	mov	eax, 3
$LN723@searchDir:
	mov	edx, esi
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN734@searchDir
	lea	edx, DWORD PTR _tempStr$[ebp]
$LN734@searchDir:
	mov	ecx, OFFSET ??_C@_03OCHKFGFI@dll?$AA@
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	jne	SHORT $LN994@searchDir
	cmp	edi, 3
	jae	SHORT $LN724@searchDir
	or	eax, -1
	jmp	SHORT $LN725@searchDir
$LN724@searchDir:
	xor	eax, eax
	cmp	edi, 3
	setne	al
$LN725@searchDir:
	test	eax, eax
$LN994@searchDir:
	sete	al
	test	al, al
	jne	SHORT $LN7@searchDir
	mov	eax, edi
	cmp	edi, 3
	jb	SHORT $LN748@searchDir
	mov	eax, 3
$LN748@searchDir:
	mov	edx, esi
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN759@searchDir
	lea	edx, DWORD PTR _tempStr$[ebp]
$LN759@searchDir:
	mov	ecx, OFFSET ??_C@_03OPIBJLCE@DLL?$AA@
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	jne	SHORT $LN995@searchDir
	cmp	edi, 3
	jae	SHORT $LN749@searchDir
	or	eax, -1
	jmp	SHORT $LN750@searchDir
$LN749@searchDir:
	xor	eax, eax
	cmp	edi, 3
	setne	al
$LN750@searchDir:
	test	eax, eax
$LN995@searchDir:
	sete	al
	test	al, al
	je	$LN22@searchDir
$LN7@searchDir:
; Line 485
	lea	eax, DWORD PTR _fileInfo$[ebp+44]
	xor	edx, edx
	lea	esi, DWORD PTR [eax+1]
$LL974@searchDir:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL974@searchDir
	sub	eax, esi
	je	SHORT $LN971@searchDir
$LL6@searchDir:
; Line 486
	mov	cl, BYTE PTR _fileInfo$[ebp+edx+44]
	cmp	cl, 38					; 00000026H
	je	SHORT $LN960@searchDir
	cmp	cl, 33					; 00000021H
	je	SHORT $LN960@searchDir
; Line 485
	inc	edx
	cmp	edx, eax
	jb	SHORT $LL6@searchDir
$LN971@searchDir:
; Line 494
	mov	ebx, DWORD PTR _fileInfo$[ebp+28]
; Line 497
	mov	edx, DWORD PTR _pathWithFile$[ebp+20]
	mov	ecx, DWORD PTR _pathWithFile$[ebp]
	xor	eax, eax
	xor	edi, edi
	or	edi, DWORD PTR _fileInfo$[ebp+32]
	or	ebx, eax
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN791@searchDir
	lea	eax, DWORD PTR _pathWithFile$[ebp]
$LN791@searchDir:
	add	eax, DWORD PTR _pathWithFile$[ebp+16]
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN803@searchDir
	lea	ecx, DWORD PTR _pathWithFile$[ebp]
$LN803@searchDir:
	xor	edx, edx
	mov	WORD PTR _stemp$90046[ebp], dx
	mov	edx, DWORD PTR $T118167[ebp]
	push	edx
	push	eax
	push	ecx
	lea	eax, DWORD PTR _stemp$90046[ebp]
	push	eax
	mov	DWORD PTR _stemp$90046[ebp+20], 7
	mov	DWORD PTR _stemp$90046[ebp+16], 0
	call	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
; Line 498
	cmp	DWORD PTR _stemp$90046[ebp+20], 8
	jb	$LN844@searchDir
	mov	ecx, DWORD PTR _stemp$90046[ebp]
	mov	DWORD PTR _sw$90050[ebp], ecx
	jmp	$LN845@searchDir
$LN960@searchDir:
; Line 487
	lea	edx, DWORD PTR _fileInfo$[ebp+44]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0O@LNDEICJJ@Filtered?5dll?5?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN766@searchDir
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN766@searchDir
	mov	edi, 4
$LN766@searchDir:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	$LN22@searchDir
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN784@searchDir
	or	eax, 4
$LN784@searchDir:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 492
	jmp	$LN22@searchDir
; Line 498
$LN844@searchDir:
	lea	edx, DWORD PTR _stemp$90046[ebp]
	mov	DWORD PTR _sw$90050[ebp], edx
$LN845@searchDir:
; Line 501
	cmp	DWORD PTR _pathWithFile$[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR _pathWithFile$[ebp]
	jae	SHORT $LN851@searchDir
	lea	eax, DWORD PTR _pathWithFile$[ebp]
$LN851@searchDir:
	push	1040					; 00000410H
	push	352					; 00000160H
	lea	ecx, DWORD PTR _sfi$90051[ebp]
	push	ecx
	push	128					; 00000080H
	push	eax
	call	DWORD PTR __imp__SHGetFileInfoA@20
; Line 506
	mov	edx, DWORD PTR _fileInfo$[ebp+8]
; Line 507
	mov	eax, DWORD PTR _fileInfo$[ebp+4]
; Line 508
	mov	esi, DWORD PTR __imp__FileTimeToSystemTime@8
	lea	ecx, DWORD PTR _outCreate$90054[ebp]
	mov	DWORD PTR _inCreate$90055[ebp+4], edx
	push	ecx
	lea	edx, DWORD PTR _inCreate$90055[ebp]
	push	edx
	mov	DWORD PTR _inCreate$90055[ebp], eax
	call	esi
; Line 512
	mov	eax, DWORD PTR _fileInfo$[ebp+24]
; Line 513
	mov	ecx, DWORD PTR _fileInfo$[ebp+20]
; Line 514
	lea	edx, DWORD PTR _outModi$90056[ebp]
	mov	DWORD PTR _inModi$90057[ebp+4], eax
	push	edx
	lea	eax, DWORD PTR _inModi$90057[ebp]
	push	eax
	mov	DWORD PTR _inModi$90057[ebp], ecx
	call	esi
; Line 518
	mov	ecx, DWORD PTR _fileInfo$[ebp+16]
; Line 519
	mov	edx, DWORD PTR _fileInfo$[ebp+12]
; Line 520
	lea	eax, DWORD PTR _outAccess$90058[ebp]
	mov	DWORD PTR _inAccess$90059[ebp+4], ecx
	push	eax
	lea	ecx, DWORD PTR _inAccess$90059[ebp]
	push	ecx
	mov	DWORD PTR _inAccess$90059[ebp], edx
	call	esi
; Line 531
	cmp	DWORD PTR _pathWithFile$[ebp+20], 16	; 00000010H
	mov	esi, DWORD PTR _pathWithFile$[ebp]
	jae	SHORT $LN857@searchDir
	lea	esi, DWORD PTR _pathWithFile$[ebp]
$LN857@searchDir:
	push	OFFSET ??_C@_0CO@JCAACMAP@?$DM?1FILE_SIZE?$DO?6?7?7?7?$DM?1PE_STATIC_FLAG@
	push	ecx
	push	ebx
	push	edi
	push	OFFSET ??_C@_0CG@GIMPMKF@?6?7?7?7?$DMPE_STATIC_FLAGS?$DO?6?7?7?7?7?$DMFILE_@
	push	ecx
	push	OFFSET ??_C@_0BB@FNNIPIAP@?$DM?1DATE_ACCESSED?$DO?$AA@
	push	ecx
	mov	edx, DWORD PTR _outAccess$90058[ebp+6]
	push	edx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	eax, DWORD PTR _outAccess$90058[ebp+2]
	push	eax
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outAccess$90058[ebp]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BE@OIAEHKFG@?6?7?7?7?$DMDATE_ACCESSED?$DO?$AA@
	push	ecx
	mov	edx, DWORD PTR _outModi$90056[ebp+6]
	push	OFFSET ??_C@_0BB@BFPOJEPD@?$DM?1DATE_MODIFIED?$DO?$AA@
	push	ecx
	push	edx
	mov	eax, DWORD PTR _outModi$90056[ebp+2]
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outModi$90056[ebp]
	mov	edx, DWORD PTR _outCreate$90054[ebp+6]
	push	ecx
	push	ecx
	mov	eax, DWORD PTR _outCreate$90054[ebp+2]
	push	OFFSET ??_C@_0BE@KACCBGKK@?6?7?7?7?$DMDATE_MODIFIED?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0BA@EGEFBFG@?$DM?1DATE_CREATED?$DO?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outCreate$90054[ebp]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BD@ICJDJOL@?6?7?7?7?$DMDATE_CREATED?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0M@MMCFOGMA@?$DM?1ISSIGNED?$DO?$AA@
	push	ecx
	mov	ecx, DWORD PTR _sw$90050[ebp]
	call	?VerifyEmbeddedSignature@@YAHPB_W@Z	; VerifyEmbeddedSignature
	push	eax
	push	ecx
	push	OFFSET ??_C@_0CL@JANNNNF@?6?7?7?7?$DMEXE_TYPE?$DODLL?$DM?1EXE_TYPE?$DO?6?7?7?7@
	push	ecx
	push	OFFSET ??_C@_06CMNKDHNA@?$DM?1MD5?$DO?$AA@
	push	ecx
	push	esi
	lea	ecx, DWORD PTR _md5$[ebp]
	call	?digestFile@MD5@@QAEPADPAD@Z		; MD5::digestFile
	push	eax
	push	ecx
	push	OFFSET ??_C@_09IJOLEHKB@?6?7?7?7?$DMMD5?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_07GDHEAJCP@?$DM?1PATH?$DO?$AA@
	push	ecx
	lea	edx, DWORD PTR _pathWithFile$[ebp]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0L@EENDHJPF@?6?7?7?7?$DMPATH?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0L@MCJCKBAH@?6?7?7?$DMIMAGE?$DO?$AA@
	push	OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
; Line 532
	inc	DWORD PTR ?countDll@@3HA		; countDll
	add	esp, 8
; Line 535
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR _stemp$90046[ebp+20], 8
	jb	$LN22@searchDir
	mov	eax, DWORD PTR _stemp$90046[ebp]
	push	eax
	jmp	$LN996@searchDir
$LN16@searchDir:
; Line 424
	lea	eax, DWORD PTR _fileInfo$[ebp+44]
	xor	edx, edx
	lea	esi, DWORD PTR [eax+1]
$LL975@searchDir:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL975@searchDir
	sub	eax, esi
	je	SHORT $LN972@searchDir
	npad	1
$LL15@searchDir:
; Line 425
	mov	cl, BYTE PTR _fileInfo$[ebp+edx+44]
	cmp	cl, 38					; 00000026H
	je	$LN961@searchDir
	cmp	cl, 33					; 00000021H
	je	$LN961@searchDir
; Line 424
	inc	edx
	cmp	edx, eax
	jb	SHORT $LL15@searchDir
$LN972@searchDir:
; Line 433
	mov	ecx, DWORD PTR _fileInfo$[ebp+28]
; Line 437
	mov	edx, DWORD PTR _pathWithFile$[ebp+20]
	xor	eax, eax
	or	eax, DWORD PTR _fileInfo$[ebp+32]
	xor	esi, esi
	or	ecx, esi
	mov	DWORD PTR _FileSize$89874[ebp+4], ecx
	mov	ecx, DWORD PTR _pathWithFile$[ebp]
	mov	ebx, 16					; 00000010H
	mov	DWORD PTR _FileSize$89874[ebp], eax
	mov	eax, ecx
	cmp	edx, ebx
	jae	SHORT $LN517@searchDir
	lea	eax, DWORD PTR _pathWithFile$[ebp]
$LN517@searchDir:
	add	eax, DWORD PTR _pathWithFile$[ebp+16]
	cmp	edx, ebx
	jae	SHORT $LN529@searchDir
	lea	ecx, DWORD PTR _pathWithFile$[ebp]
$LN529@searchDir:
	xor	edx, edx
	mov	WORD PTR _stemp$89875[ebp], dx
	mov	edx, DWORD PTR $T117154[ebp]
	push	edx
	push	eax
	push	ecx
	lea	eax, DWORD PTR _stemp$89875[ebp]
	push	eax
	mov	DWORD PTR _stemp$89875[ebp+20], 7
	mov	DWORD PTR _stemp$89875[ebp+16], esi
	call	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 438
	cmp	DWORD PTR _stemp$89875[ebp+20], 8
	jb	$LN570@searchDir
	mov	ecx, DWORD PTR _stemp$89875[ebp]
	mov	DWORD PTR _sw$89939[ebp], ecx
	jmp	$LN571@searchDir
$LN961@searchDir:
; Line 426
	lea	ecx, DWORD PTR _fileInfo$[ebp+44]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0O@FAPOFAGO@Filtered?5exe?5?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN492@searchDir
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN492@searchDir
	mov	edi, 4
$LN492@searchDir:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	$LN22@searchDir
	or	edi, DWORD PTR [ecx+12]
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN510@searchDir
	or	edi, 4
$LN510@searchDir:
	push	0
	push	edi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
; Line 431
	jmp	$LN22@searchDir
; Line 438
$LN570@searchDir:
	lea	edx, DWORD PTR _stemp$89875[ebp]
	mov	DWORD PTR _sw$89939[ebp], edx
$LN571@searchDir:
; Line 440
	mov	eax, DWORD PTR _pathWithFile$[ebp]
	cmp	DWORD PTR _pathWithFile$[ebp+20], ebx
	jae	SHORT $LN577@searchDir
	lea	eax, DWORD PTR _pathWithFile$[ebp]
$LN577@searchDir:
	push	1040					; 00000410H
	push	352					; 00000160H
	lea	ecx, DWORD PTR _sfi$89940[ebp]
	push	ecx
	push	128					; 00000080H
	push	eax
	call	DWORD PTR __imp__SHGetFileInfoA@20
; Line 444
	mov	edx, DWORD PTR _fileInfo$[ebp+8]
; Line 445
	mov	eax, DWORD PTR _fileInfo$[ebp+4]
; Line 446
	mov	esi, DWORD PTR __imp__FileTimeToSystemTime@8
	lea	ecx, DWORD PTR _outCreate$89943[ebp]
	mov	DWORD PTR _inCreate$89944[ebp+4], edx
	push	ecx
	lea	edx, DWORD PTR _inCreate$89944[ebp]
	push	edx
	mov	DWORD PTR _inCreate$89944[ebp], eax
	call	esi
; Line 450
	mov	eax, DWORD PTR _fileInfo$[ebp+24]
; Line 451
	mov	ecx, DWORD PTR _fileInfo$[ebp+20]
; Line 452
	lea	edx, DWORD PTR _outModi$89945[ebp]
	mov	DWORD PTR _inModi$89946[ebp+4], eax
	push	edx
	lea	eax, DWORD PTR _inModi$89946[ebp]
	push	eax
	mov	DWORD PTR _inModi$89946[ebp], ecx
	call	esi
; Line 456
	mov	ecx, DWORD PTR _fileInfo$[ebp+16]
; Line 457
	mov	edx, DWORD PTR _fileInfo$[ebp+12]
; Line 458
	lea	eax, DWORD PTR _outAccess$89947[ebp]
	mov	DWORD PTR _inAccess$89948[ebp+4], ecx
	push	eax
	lea	ecx, DWORD PTR _inAccess$89948[ebp]
	push	ecx
	mov	DWORD PTR _inAccess$89948[ebp], edx
	call	esi
; Line 459
	mov	edx, DWORD PTR _pathWithFile$[ebp+16]
	inc	edx
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
; Line 460
	mov	eax, DWORD PTR _pathWithFile$[ebp+16]
	mov	BYTE PTR [eax+edi], 0
; Line 461
	mov	eax, DWORD PTR _pathWithFile$[ebp]
	add	esp, 4
	cmp	DWORD PTR _pathWithFile$[ebp+20], ebx
	jae	SHORT $LN589@searchDir
	lea	eax, DWORD PTR _pathWithFile$[ebp]
$LN589@searchDir:
	mov	ecx, DWORD PTR _pathWithFile$[ebp+16]
	push	ecx
	push	eax
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 462
	mov	eax, edi
	lea	ebx, DWORD PTR $T89952[ebp]
	call	?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z ; ANSIToUTF8
	push	eax
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	xor	ebx, ebx
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN594@searchDir
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN594@searchDir
	mov	ebx, 4
$LN594@searchDir:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	ebx, ebx
	je	SHORT $LN610@searchDir
	mov	eax, DWORD PTR [ecx+12]
	or	eax, ebx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN612@searchDir
	or	eax, 4
$LN612@searchDir:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN610@searchDir:
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T89952[ebp+20], 16		; 00000010H
	jb	SHORT $LN624@searchDir
	mov	edx, DWORD PTR $T89952[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN624@searchDir:
; Line 463
	lea	eax, DWORD PTR _pathWithFile$[ebp]
	push	eax
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	xor	ebx, ebx
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN640@searchDir
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN640@searchDir
	mov	ebx, 4
$LN640@searchDir:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	ebx, ebx
	je	SHORT $LN656@searchDir
	mov	eax, DWORD PTR [ecx+12]
	or	eax, ebx
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN658@searchDir
	or	eax, 4
$LN658@searchDir:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN656@searchDir:
; Line 474
	mov	eax, edi
	lea	ebx, DWORD PTR $T89961[ebp]
	call	?ANSIToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@Z ; ANSIToUTF8
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ebx, DWORD PTR _pathWithFile$[ebp]
	mov	edi, 16					; 00000010H
	cmp	DWORD PTR _pathWithFile$[ebp+20], edi
	jae	SHORT $LN665@searchDir
	lea	ebx, DWORD PTR _pathWithFile$[ebp]
$LN665@searchDir:
	push	OFFSET ??_C@_0CO@JCAACMAP@?$DM?1FILE_SIZE?$DO?6?7?7?7?$DM?1PE_STATIC_FLAG@
	push	ecx
	mov	edx, DWORD PTR _FileSize$89874[ebp+4]
	push	edx
	mov	eax, DWORD PTR _FileSize$89874[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@GIMPMKF@?6?7?7?7?$DMPE_STATIC_FLAGS?$DO?6?7?7?7?7?$DMFILE_@
	push	ecx
	push	OFFSET ??_C@_0BB@FNNIPIAP@?$DM?1DATE_ACCESSED?$DO?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outAccess$89947[ebp+6]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	edx, DWORD PTR _outAccess$89947[ebp+2]
	push	edx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	eax, DWORD PTR _outAccess$89947[ebp]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0BE@OIAEHKFG@?6?7?7?7?$DMDATE_ACCESSED?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0BB@BFPOJEPD@?$DM?1DATE_MODIFIED?$DO?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outModi$89945[ebp+6]
	push	ecx
	mov	edx, DWORD PTR _outModi$89945[ebp+2]
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	mov	eax, DWORD PTR _outModi$89945[ebp]
	push	edx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	push	eax
	push	ecx
	mov	edx, DWORD PTR _outCreate$89943[ebp+2]
	push	OFFSET ??_C@_0BE@KACCBGKK@?6?7?7?7?$DMDATE_MODIFIED?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0BA@EGEFBFG@?$DM?1DATE_CREATED?$DO?$AA@
	push	ecx
	mov	ecx, DWORD PTR _outCreate$89943[ebp+6]
	mov	eax, DWORD PTR _outCreate$89943[ebp]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_0BD@ICJDJOL@?6?7?7?7?$DMDATE_CREATED?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0M@MMCFOGMA@?$DM?1ISSIGNED?$DO?$AA@
	push	ecx
	mov	ecx, DWORD PTR _sw$89939[ebp]
	call	?VerifyEmbeddedSignature@@YAHPB_W@Z	; VerifyEmbeddedSignature
	push	eax
	push	ecx
	push	OFFSET ??_C@_0CL@NLIMOMJO@?6?7?7?7?$DMEXE_TYPE?$DOEXE?$DM?1EXE_TYPE?$DO?6?7?7?7@
	push	ecx
	push	OFFSET ??_C@_06CMNKDHNA@?$DM?1MD5?$DO?$AA@
	push	ecx
	push	ebx
	lea	ecx, DWORD PTR _md5$[ebp]
	call	?digestFile@MD5@@QAEPADPAD@Z		; MD5::digestFile
	push	eax
	push	ecx
	push	OFFSET ??_C@_09IJOLEHKB@?6?7?7?7?$DMMD5?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_07GDHEAJCP@?$DM?1PATH?$DO?$AA@
	push	ecx
	push	esi
	push	ecx
	push	OFFSET ??_C@_0L@EENDHJPF@?6?7?7?7?$DMPATH?$DO?$AA@
	push	ecx
	push	OFFSET ??_C@_0L@MCJCKBAH@?6?7?7?$DMIMAGE?$DO?$AA@
	push	OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	cmp	DWORD PTR $T89961[ebp+20], edi
	jb	SHORT $LN676@searchDir
	mov	ecx, DWORD PTR $T89961[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN676@searchDir:
; Line 475
	inc	DWORD PTR ?countExe@@3HA		; countExe
; Line 478
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR _stemp$89875[ebp+20], 8
	jb	SHORT $LN22@searchDir
	mov	edx, DWORD PTR _stemp$89875[ebp]
	push	edx
$LN996@searchDir:
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@searchDir:
; Line 539
	mov	ecx, DWORD PTR _hFile$[ebp]
	lea	eax, DWORD PTR _fileInfo$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	$LL23@searchDir
; Line 541
	mov	edx, DWORD PTR _hFile$[ebp]
	push	edx
	call	DWORD PTR __imp__FindClose@4
; Line 543
	mov	esi, 16					; 00000010H
	cmp	DWORD PTR _tempStr$[ebp+20], esi
	jb	SHORT $LN892@searchDir
	mov	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN892@searchDir:
	xor	edi, edi
	mov	ebx, 15					; 0000000fH
	mov	DWORD PTR _tempStr$[ebp+20], ebx
	mov	DWORD PTR _tempStr$[ebp+16], edi
	mov	BYTE PTR _tempStr$[ebp], 0
	cmp	DWORD PTR _basePath$[ebp+20], esi
	jb	SHORT $LN914@searchDir
	mov	ecx, DWORD PTR _basePath$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN914@searchDir:
	mov	DWORD PTR _basePath$[ebp+20], ebx
	mov	DWORD PTR _basePath$[ebp+16], edi
	mov	BYTE PTR _basePath$[ebp], 0
	cmp	DWORD PTR _pathWithFile$[ebp+20], esi
	jb	SHORT $LN936@searchDir
	mov	edx, DWORD PTR _pathWithFile$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN936@searchDir:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
	lea	ecx, DWORD PTR _pathWithFile$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
	lea	ecx, DWORD PTR _basePath$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
	lea	ecx, DWORD PTR _tempStr$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR $T89802[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR $T89812[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T89813[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	mov	ecx, DWORD PTR $T115239[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8:
	lea	ecx, DWORD PTR $T89818[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$9:
	lea	ecx, DWORD PTR $T89819[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13:
	lea	esi, DWORD PTR _stemp$90046[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$10:
	lea	esi, DWORD PTR _stemp$89875[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11:
	lea	ecx, DWORD PTR $T89952[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12:
	lea	ecx, DWORD PTR $T89961[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1092]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; searchDir
PUBLIC	__$ArrayPad$
PUBLIC	_main
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	01H
	DD	FLAT:__unwindfunclet$_main$2
	DD	02H
	DD	FLAT:__unwindfunclet$_main$3
__ehfuncinfo$_main DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_sTemp$ = -496						; size = 4
$T118620 = -492						; size = 4
_rawtime$ = -488					; size = 8
$T118619 = -476						; size = 4
_ShExecInfo$ = -472					; size = 60
_systemDrive$ = -412					; size = 28
_uuid$ = -384						; size = 28
_szDir$ = -356						; size = 28
_buffer$ = -328						; size = 100
_reportPath$ = -224					; size = 200
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\users\javis\documents\github\autoscan\launcher\launcher\scandir.cpp
; Line 38
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 488				; 000001e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+500], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+516]
	mov	DWORD PTR fs:0, eax
; Line 41
	xor	ebx, ebx
	push	199					; 000000c7H
	lea	eax, DWORD PTR _reportPath$[esp+521]
	push	ebx
	push	eax
	mov	BYTE PTR _reportPath$[esp+528], bl
	call	_memset
	add	esp, 12					; 0000000cH
; Line 42
	push	99					; 00000063H
	lea	ecx, DWORD PTR _buffer$[esp+521]
	push	ebx
	push	ecx
	mov	BYTE PTR _buffer$[esp+528], bl
	call	_memset
	add	esp, 12					; 0000000cH
; Line 50
	push	ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _uuid$[esp+524]
	mov	DWORD PTR _uuid$[esp+544], esi
	mov	DWORD PTR _uuid$[esp+540], ebx
	mov	BYTE PTR _uuid$[esp+524], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+524], ebx
; Line 52
	mov	DWORD PTR _szDir$[esp+536], esi
	mov	DWORD PTR _szDir$[esp+532], ebx
	mov	BYTE PTR _szDir$[esp+516], bl
; Line 55
	push	ebx
	push	OFFSET ??_C@_08GNJEIDEM@reports?2?$AA@
	mov	BYTE PTR __$EHRec$[esp+532], 1
	call	DWORD PTR __imp__CreateDirectoryA@8
; Line 57
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_0M@FJFALDBN@C?3?2test?4txt?$AA@
	call	_fopen
; Line 59
	lea	edx, DWORD PTR _rawtime$[esp+524]
	push	edx
	call	__time64
; Line 60
	lea	eax, DWORD PTR _rawtime$[esp+528]
	add	esp, 12					; 0000000cH
	push	eax
	call	__localtime64
	add	esp, 4
; Line 61
	push	eax
	push	OFFSET ??_C@_0O@IJAHIBEK@?$CFY?$CFm?$CFd?9?$CFH?$CFM?$CFS?$AA@
	lea	ecx, DWORD PTR _buffer$[esp+524]
	push	100					; 00000064H
	push	ecx
	call	_strftime
; Line 64
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 20					; 00000014H
	mov	esi, eax
; Line 66
	push	esi
	call	DWORD PTR __imp__UuidCreateSequential@4
; Line 67
	lea	edx, DWORD PTR _sTemp$[esp+516]
	push	edx
	push	esi
	call	DWORD PTR __imp__UuidToStringA@8
; Line 68
	lea	eax, DWORD PTR _reportPath$[esp+516]
	dec	eax
	npad	6
$LL247@main:
	mov	cl, BYTE PTR [eax+1]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL247@main
	mov	ecx, DWORD PTR ??_C@_08GNJEIDEM@reports?2?$AA@
	mov	edx, DWORD PTR ??_C@_08GNJEIDEM@reports?2?$AA@+4
	mov	DWORD PTR [eax], ecx
	mov	cl, BYTE PTR ??_C@_08GNJEIDEM@reports?2?$AA@+8
; Line 70
	lea	edi, DWORD PTR _buffer$[esp+516]
	mov	DWORD PTR [eax+4], edx
	mov	BYTE PTR [eax+8], cl
	dec	edi
	npad	6
$LL248@main:
	mov	al, BYTE PTR [edi+1]
	inc	edi
	cmp	al, bl
	jne	SHORT $LL248@main
	mov	dx, WORD PTR ??_C@_01JOAMLHOP@?9?$AA@
; Line 71
	mov	eax, DWORD PTR _sTemp$[esp+516]
	mov	WORD PTR [edi], dx
	mov	edx, eax
$LL249@main:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL249@main
	lea	edi, DWORD PTR _buffer$[esp+516]
	sub	eax, edx
	dec	edi
	npad	7
$LL250@main:
	mov	cl, BYTE PTR [edi+1]
	inc	edi
	cmp	cl, bl
	jne	SHORT $LL250@main
	mov	ecx, eax
	shr	ecx, 2
	mov	esi, edx
	rep movsd
	mov	ecx, eax
	and	ecx, 3
; Line 72
	lea	eax, DWORD PTR _buffer$[esp+516]
	rep movsb
	call	?toUpper@@YAXPADH@Z			; toUpper
; Line 73
	lea	eax, DWORD PTR _buffer$[esp+516]
	dec	eax
	npad	4
$LL251@main:
	mov	cl, BYTE PTR [eax+1]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL251@main
	mov	ecx, DWORD PTR ??_C@_04GEJHDGKP@?4pad?$AA@
	mov	dl, BYTE PTR ??_C@_04GEJHDGKP@?4pad?$AA@+4
	mov	DWORD PTR [eax], ecx
	mov	BYTE PTR [eax+4], dl
; Line 76
	lea	eax, DWORD PTR _buffer$[esp+516]
	mov	edx, eax
$LL252@main:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL252@main
	lea	edi, DWORD PTR _reportPath$[esp+516]
	sub	eax, edx
	dec	edi
$LL253@main:
	mov	cl, BYTE PTR [edi+1]
	inc	edi
	cmp	cl, bl
	jne	SHORT $LL253@main
	mov	ecx, eax
	shr	ecx, 2
	mov	esi, edx
	rep movsd
	mov	ecx, eax
; Line 78
	lea	eax, DWORD PTR _reportPath$[esp+516]
	and	ecx, 3
	push	eax
	mov	ebx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	rep movsb
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN69@main
	mov	ecx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+12]
	xor	ebx, ebx
	or	eax, 2
	cmp	DWORD PTR [ecx+56], ebx
	jne	SHORT $LN79@main
	or	eax, 4
$LN79@main:
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	jmp	SHORT $LN81@main
$LN69@main:
	mov	edx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+56]
	neg	eax
	sbb	eax, eax
	and	eax, -4					; fffffffcH
	add	eax, 4
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	xor	ebx, ebx
$LN81@main:
; Line 80
	push	OFFSET ??_C@_0M@JBPIDKPO@SystemDrive?$AA@
	call	_getenv
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR _systemDrive$[esp+536], 15	; 0000000fH
	mov	DWORD PTR _systemDrive$[esp+532], ebx
	mov	BYTE PTR _systemDrive$[esp+516], bl
	lea	esi, DWORD PTR [ecx+1]
$LL254@main:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	cmp	dl, bl
	jne	SHORT $LL254@main
	sub	ecx, esi
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _systemDrive$[esp+524]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 82
	push	OFFSET ??_C@_0BD@EBNJBNP@?$DMREPORT?$DO?6?7?$DMIMAGES?$DO?$AA@
	push	OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	BYTE PTR __$EHRec$[esp+532], 2
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 83
	lea	eax, DWORD PTR _systemDrive$[esp+516]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0L@IMNIGAFB@Scanning?4?4?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN119@main
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN119@main
	mov	edi, 4
$LN119@main:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	cmp	edi, ebx
	je	SHORT $LN135@main
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], ebx
	jne	SHORT $LN137@main
	or	eax, 4
$LN137@main:
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN135@main:
; Line 84
	call	_clock
; Line 85
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T118619[esp+544], esp
	push	ebx
	mov	edi, 15					; 0000000fH
	mov	DWORD PTR [ecx+20], edi
	mov	DWORD PTR [ecx+16], ebx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR [ecx], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T118620[esp+572], esp
	push	OFFSET ??_C@_0BF@JDNLNPKJ@?2Program?5Files?2Test?2?$AA@
	lea	eax, DWORD PTR _systemDrive$[esp+576]
	push	eax
	push	edx
	mov	BYTE PTR __$EHRec$[esp+592], 3
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[esp+580], 2
	call	?searchDir@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; searchDir
; Line 122
	push	OFFSET ??_C@_0BG@DHGDNDEE@?6?7?$DM?1IMAGES?$DO?6?$DM?1REPORT?$DO?$AA@
	push	OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 64					; 00000040H
; Line 123
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	eax, eax
	jne	SHORT $LN177@main
	mov	ecx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 2
	cmp	DWORD PTR [ecx+56], ebx
	jne	SHORT $LN179@main
	or	eax, 4
$LN179@main:
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN177@main:
; Line 124
	push	56					; 00000038H
	lea	edx, DWORD PTR _ShExecInfo$[esp+524]
	push	ebx
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 134
	lea	eax, DWORD PTR _ShExecInfo$[esp+516]
	push	eax
	mov	DWORD PTR _ShExecInfo$[esp+520], 60	; 0000003cH
	mov	DWORD PTR _ShExecInfo$[esp+524], 32768	; 00008000H
	mov	DWORD PTR _ShExecInfo$[esp+528], ebx
	mov	DWORD PTR _ShExecInfo$[esp+532], ebx
	mov	DWORD PTR _ShExecInfo$[esp+536], OFFSET ??_C@_07KOAEBJDG@7za?4exe?$AA@
	mov	DWORD PTR _ShExecInfo$[esp+540], OFFSET ??_C@_0BP@PKBPBLAD@?5a?5?9tzip?5reports?4zip?5?4?2reports?$AA@
	mov	DWORD PTR _ShExecInfo$[esp+544], ebx
	mov	DWORD PTR _ShExecInfo$[esp+548], ebx
	mov	DWORD PTR _ShExecInfo$[esp+552], ebx
	call	DWORD PTR __imp__ShellExecuteExA@4
; Line 135
	mov	ecx, DWORD PTR _ShExecInfo$[esp+572]
	push	-1
	push	ecx
	call	DWORD PTR __imp__WaitForSingleObject@8
; Line 139
	call	?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_istream<char,std::char_traits<char> >::get
; Line 140
	mov	esi, 16					; 00000010H
	cmp	DWORD PTR _systemDrive$[esp+536], esi
	jb	SHORT $LN191@main
	mov	edx, DWORD PTR _systemDrive$[esp+516]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN191@main:
	mov	DWORD PTR _systemDrive$[esp+536], edi
	mov	DWORD PTR _systemDrive$[esp+532], ebx
	mov	BYTE PTR _systemDrive$[esp+516], bl
	cmp	DWORD PTR _uuid$[esp+536], esi
	jb	SHORT $LN255@main
	mov	eax, DWORD PTR _uuid$[esp+516]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN255@main:
	xor	eax, eax
; Line 142
	mov	ecx, DWORD PTR __$EHRec$[esp+516]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+500]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _uuid$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$1:
	lea	ecx, DWORD PTR _szDir$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$2:
	lea	ecx, DWORD PTR _systemDrive$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$3:
	mov	ecx, DWORD PTR $T118619[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-500]
	mov	ecx, DWORD PTR [edx-504]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Ogtp
;	COMDAT ??__EexeFiles@@YAXXZ
text$yc	SEGMENT
??__EexeFiles@@YAXXZ PROC				; `dynamic initializer for 'exeFiles'', COMDAT
; Line 30
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	push	OFFSET ??__FexeFiles@@YAXXZ		; `dynamic atexit destructor for 'exeFiles''
	call	_atexit
	pop	ecx
	ret	0
??__EexeFiles@@YAXXZ ENDP				; `dynamic initializer for 'exeFiles''
text$yc	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__FexeFiles@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__FexeFiles@@YAXXZ$0
__ehfuncinfo$??__FexeFiles@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__FexeFiles@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??__FexeFiles@@YAXXZ
text$yd	SEGMENT
$T119518 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__FexeFiles@@YAXXZ PROC				; `dynamic atexit destructor for 'exeFiles'', COMDAT
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__FexeFiles@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T119518[ebp], OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A[ecx], OFFSET ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+4
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A[eax], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	OFFSET ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96
	mov	DWORD PTR ?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A+96, OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__FexeFiles@@YAXXZ$0:
	mov	ecx, DWORD PTR $T119518[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
__ehhandler$??__FexeFiles@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__FexeFiles@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__FexeFiles@@YAXXZ ENDP				; `dynamic atexit destructor for 'exeFiles''
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A ; exeFiles
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
?exeFiles@@3V?$basic_ofstream@DU?$char_traits@D@std@@@std@@A DB 0a8H DUP (?) ; exeFiles
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_exeFiles$initializer$ DD FLAT:??__EexeFiles@@YAXXZ
CRT$XCU	ENDS
END
